Changing working directory:  /proj/ssiw/projects/code/sketch-learner/learning/d2l/workspace/reward_hierarchy_1_0_9_9_9_9_9
Creating sym link: /proj/ssiw/projects/code/sketch-learner/learning/d2l/libs/dlplan/libs/scorpion/fast-downward.py /proj/ssiw/projects/code/sketch-learner/learning/d2l/workspace/reward_hierarchy_1_0_9_9_9_9_9/fast-downward.py
================================================================================
SLTP v.0.2.0
================================================================================
================================================================================
(pid: 185197) STARTING STEP #1: Incremental learning module
================================================================================
2022-11-16 16:11:41 INFO     [40m[34mInitializing DomainData...[0m
2022-11-16 16:11:41 INFO     Constructing DomainData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/domain.pddl
2022-11-16 16:11:41 INFO     [40m[34m..done[0m
2022-11-16 16:11:41 INFO     [40m[34mInitializing InstanceDatas...[0m
2022-11-16 16:11:41 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_2x2_0.pddl
Num states: 16
2022-11-16 16:11:42 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_3x3_0.pddl
Num states: 32
2022-11-16 16:11:42 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_2x2_1.pddl
Num states: 8
2022-11-16 16:11:42 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_3x3_1.pddl
Num states: 16
2022-11-16 16:11:42 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_2x2_2.pddl
Num states: 8
2022-11-16 16:11:43 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_3x3_2.pddl
Num states: 64
2022-11-16 16:11:43 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_2x2_3.pddl
Num states: 8
2022-11-16 16:11:43 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_3x3_3.pddl
Num states: 36
2022-11-16 16:11:43 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_2x2_4.pddl
Num states: 12
2022-11-16 16:11:43 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_3x3_4.pddl
Num states: 48
2022-11-16 16:11:44 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_2x2_5.pddl
Num states: 6
2022-11-16 16:11:44 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_3x3_5.pddl
Num states: 18
2022-11-16 16:11:44 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_2x2_6.pddl
Num states: 12
2022-11-16 16:11:44 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_3x3_6.pddl
Num states: 36
2022-11-16 16:11:44 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_2x2_7.pddl
Num states: 16
2022-11-16 16:11:45 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_3x3_7.pddl
Num states: 72
2022-11-16 16:11:45 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_2x2_8.pddl
Num states: 16
2022-11-16 16:11:45 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_3x3_8.pddl
Num states: 56
2022-11-16 16:11:45 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_2x2_9.pddl
Num states: 16
2022-11-16 16:11:45 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_3x3_9.pddl
Num states: 36
2022-11-16 16:11:46 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_2x2_10.pddl
Num states: 8
2022-11-16 16:11:46 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_3x3_10.pddl
Num states: 36
2022-11-16 16:11:46 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_2x2_11.pddl
Num states: 12
2022-11-16 16:11:46 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_3x3_11.pddl
Num states: 14
2022-11-16 16:11:46 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_2x2_12.pddl
Num states: 8
2022-11-16 16:11:47 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_3x3_12.pddl
Num states: 16
2022-11-16 16:11:47 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_2x2_13.pddl
Num states: 8
2022-11-16 16:11:47 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_3x3_13.pddl
Num states: 56
2022-11-16 16:11:47 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_2x2_14.pddl
Num states: 16
2022-11-16 16:11:47 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_3x3_14.pddl
Num states: 64
2022-11-16 16:11:48 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_2x2_15.pddl
Num states: 16
2022-11-16 16:11:48 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_3x3_15.pddl
Num states: 64
2022-11-16 16:11:48 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_2x2_16.pddl
Num states: 8
2022-11-16 16:11:48 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_3x3_16.pddl
Num states: 28
2022-11-16 16:11:48 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_2x2_17.pddl
Num states: 16
2022-11-16 16:11:49 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_3x3_17.pddl
Num states: 36
2022-11-16 16:11:49 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_2x2_18.pddl
Num states: 16
2022-11-16 16:11:49 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_3x3_18.pddl
Num states: 14
2022-11-16 16:11:49 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_2x2_19.pddl
Num states: 12
2022-11-16 16:11:49 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_3x3_19.pddl
Num states: 14
2022-11-16 16:11:50 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_2x2_20.pddl
Num states: 16
2022-11-16 16:11:50 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_3x3_20.pddl
Num states: 32
2022-11-16 16:11:50 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_2x2_21.pddl
Num states: 6
2022-11-16 16:11:50 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_3x3_21.pddl
Num states: 14
2022-11-16 16:11:50 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_2x2_22.pddl
Num states: 8
2022-11-16 16:11:51 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_3x3_22.pddl
Num states: 64
2022-11-16 16:11:51 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_2x2_23.pddl
Num states: 6
2022-11-16 16:11:51 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_3x3_23.pddl
Num states: 64
2022-11-16 16:11:51 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_2x2_24.pddl
Num states: 16
2022-11-16 16:11:51 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_3x3_24.pddl
Num states: 64
2022-11-16 16:11:52 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_2x2_25.pddl
Num states: 6
2022-11-16 16:11:52 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_3x3_25.pddl
Num states: 16
2022-11-16 16:11:52 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_2x2_26.pddl
Num states: 6
2022-11-16 16:11:52 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_3x3_26.pddl
Num states: 18
2022-11-16 16:11:52 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_2x2_27.pddl
Num states: 16
2022-11-16 16:11:53 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_3x3_27.pddl
Num states: 14
2022-11-16 16:11:53 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_2x2_28.pddl
Num states: 6
2022-11-16 16:11:53 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_3x3_28.pddl
Num states: 14
2022-11-16 16:11:53 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_2x2_29.pddl
Num states: 16
2022-11-16 16:11:53 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_3x3_29.pddl
Num states: 32
2022-11-16 16:11:54 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_2x2_30.pddl
Num states: 6
2022-11-16 16:11:54 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_3x3_30.pddl
Num states: 18
2022-11-16 16:11:54 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_2x2_31.pddl
Num states: 16
2022-11-16 16:11:54 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_3x3_31.pddl
Num states: 64
2022-11-16 16:11:54 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_2x2_32.pddl
Num states: 6
2022-11-16 16:11:55 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_3x3_32.pddl
Num states: 56
2022-11-16 16:11:55 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_2x2_33.pddl
Num states: 6
2022-11-16 16:11:55 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_3x3_33.pddl
Num states: 64
2022-11-16 16:11:55 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_2x2_34.pddl
Num states: 16
2022-11-16 16:11:55 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_3x3_34.pddl
Num states: 28
2022-11-16 16:11:56 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_2x2_35.pddl
Num states: 12
2022-11-16 16:11:56 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_3x3_35.pddl
Num states: 36
2022-11-16 16:11:56 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_2x2_36.pddl
Num states: 12
2022-11-16 16:11:56 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_3x3_36.pddl
Num states: 64
2022-11-16 16:11:56 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_2x2_37.pddl
Num states: 12
2022-11-16 16:11:57 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_3x3_37.pddl
Num states: 32
2022-11-16 16:11:57 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_2x2_38.pddl
Num states: 12
2022-11-16 16:11:57 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_3x3_38.pddl
Num states: 18
2022-11-16 16:11:57 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_2x2_39.pddl
Num states: 16
2022-11-16 16:11:57 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_3x3_39.pddl
Num states: 16
2022-11-16 16:11:58 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_2x2_40.pddl
Num states: 6
2022-11-16 16:11:58 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_3x3_40.pddl
Num states: 36
2022-11-16 16:11:58 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_2x2_41.pddl
Num states: 8
2022-11-16 16:11:58 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_3x3_41.pddl
Num states: 64
2022-11-16 16:11:58 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_2x2_42.pddl
Num states: 6
2022-11-16 16:11:59 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_3x3_42.pddl
Num states: 32
2022-11-16 16:11:59 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_2x2_43.pddl
Num states: 6
2022-11-16 16:11:59 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_3x3_43.pddl
Num states: 28
2022-11-16 16:11:59 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_2x2_44.pddl
Num states: 12
2022-11-16 16:11:59 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_3x3_44.pddl
Num states: 32
2022-11-16 16:12:00 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_2x2_45.pddl
Num states: 16
2022-11-16 16:12:00 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_3x3_45.pddl
Num states: 16
2022-11-16 16:12:00 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_2x2_46.pddl
Num states: 6
2022-11-16 16:12:00 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_3x3_46.pddl
Num states: 64
2022-11-16 16:12:00 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_2x2_47.pddl
Num states: 6
2022-11-16 16:12:01 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_3x3_47.pddl
Num states: 18
2022-11-16 16:12:01 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_2x2_48.pddl
Num states: 16
2022-11-16 16:12:01 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_3x3_48.pddl
Num states: 36
2022-11-16 16:12:01 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_2x2_49.pddl
Num states: 6
2022-11-16 16:12:01 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_3x3_49.pddl
Num states: 36
2022-11-16 16:12:02 INFO     [40m[34m..done[0m
2022-11-16 16:12:02 INFO     [40m[34mInitializing TupleGraphs...[0m
2022-11-16 16:12:02 INFO     [40m[34m..done[0m
2022-11-16 16:12:02 INFO     [40m[34mInitializing Sketch...[0m
2022-11-16 16:12:02 INFO     [40m[34m..done[0m
Sketch:
(:policy
(:boolean_features )
(:numerical_features "n_count(c_primitive(reward,0))")
(:rule (:conditions (:c_n_gt 0)) (:effects (:e_n_dec 0)))
)
Sketch rule: 0 (:rule (:conditions (:c_n_gt 0)) (:effects (:e_n_dec 0)))
2022-11-16 16:12:02 INFO     [40m[34mInitializing Subproblems...[0m
Number of problems: 100
Number of subproblems: 461
Highest number of states in problem: 72
Highest number of states in subproblem: 12
2022-11-16 16:12:02 INFO     [40m[34m..done[0m

2022-11-16 16:12:02 INFO     [40m[31mIteration: 0[0m
Number of selected instances: 1
Selected instances:
    id: 0 name: instance_2x2_5-0
initial states: {0, 1}
2022-11-16 16:12:02 INFO     [40m[34mInitializing DomainFeatureData...[0m
[t=23.5489s, 1340988 KB] Started generating base features of complexity 1.
[t=23.5491s, 1340988 KB] Complexity 1:
    b_nullary: 0
    c_one_of: 0
    c_top: 1
    c_bot: 1
    c_primitive: 5
    r_primitive: 2
    c_and: 0
    c_not: 0
    c_equal: 0
    c_some: 0
    c_all: 0
    r_restrict: 0
    r_and: 0
    r_inverse: 0
    r_transitive_closure: 0
    b_empty: 0
    n_count: 0
    n_concept_distance: 0
[t=23.5492s, 1340988 KB] Finished generating base features.
[t=23.5493s, 1340988 KB] Started generating composite features. 
[t=23.5494s, 1340988 KB] Complexity 2:
Total concept elements: 12
Total role elements: 3
Total numerical elements: 7
Total boolean elements: 4
    b_nullary: 0
    c_one_of: 0
    c_top: 1
    c_bot: 1
    c_primitive: 5
    r_primitive: 2
    c_and: 0
    c_not: 5
    c_equal: 0
    c_some: 0
    c_all: 0
    r_restrict: 0
    r_and: 0
    r_inverse: 0
    r_transitive_closure: 1
    b_empty: 4
    n_count: 7
    n_concept_distance: 0
[t=23.55s, 1340988 KB] Complexity 3:
Total concept elements: 19
Total role elements: 8
Total numerical elements: 10
Total boolean elements: 4
    b_nullary: 0
    c_one_of: 0
    c_top: 1
    c_bot: 1
    c_primitive: 5
    r_primitive: 2
    c_and: 2
    c_not: 5
    c_equal: 0
    c_some: 4
    c_all: 1
    r_restrict: 5
    r_and: 0
    r_inverse: 0
    r_transitive_closure: 1
    b_empty: 4
    n_count: 10
    n_concept_distance: 0
[t=23.5507s, 1340988 KB] Complexity 4:
Total concept elements: 33
Total role elements: 13
Total numerical elements: 23
Total boolean elements: 6
    b_nullary: 0
    c_one_of: 0
    c_top: 1
    c_bot: 1
    c_primitive: 5
    r_primitive: 2
    c_and: 9
    c_not: 10
    c_equal: 0
    c_some: 6
    c_all: 1
    r_restrict: 5
    r_and: 0
    r_inverse: 5
    r_transitive_closure: 1
    b_empty: 6
    n_count: 16
    n_concept_distance: 7
[t=23.5521s, 1340988 KB] Complexity 5:
Total concept elements: 50
Total role elements: 13
Total numerical elements: 37
Total boolean elements: 8
    b_nullary: 0
    c_one_of: 0
    c_top: 1
    c_bot: 1
    c_primitive: 5
    r_primitive: 2
    c_and: 11
    c_not: 17
    c_equal: 0
    c_some: 10
    c_all: 5
    r_restrict: 5
    r_and: 0
    r_inverse: 5
    r_transitive_closure: 1
    b_empty: 8
    n_count: 25
    n_concept_distance: 12
[t=23.5547s, 1340988 KB] Complexity 6:
Total concept elements: 76
Total role elements: 13
Total numerical elements: 49
Total boolean elements: 8
    b_nullary: 0
    c_one_of: 0
    c_top: 1
    c_bot: 1
    c_primitive: 5
    r_primitive: 2
    c_and: 24
    c_not: 27
    c_equal: 0
    c_some: 12
    c_all: 6
    r_restrict: 5
    r_and: 0
    r_inverse: 5
    r_transitive_closure: 1
    b_empty: 8
    n_count: 34
    n_concept_distance: 15
[t=23.5586s, 1340988 KB] Complexity 7:
Total concept elements: 116
Total role elements: 15
Total numerical elements: 67
Total boolean elements: 8
    b_nullary: 0
    c_one_of: 0
    c_top: 1
    c_bot: 1
    c_primitive: 5
    r_primitive: 2
    c_and: 49
    c_not: 38
    c_equal: 0
    c_some: 15
    c_all: 7
    r_restrict: 5
    r_and: 2
    r_inverse: 5
    r_transitive_closure: 1
    b_empty: 8
    n_count: 48
    n_concept_distance: 19
[t=23.5651s, 1340988 KB] Complexity 8:
Total concept elements: 162
Total role elements: 22
Total numerical elements: 84
Total boolean elements: 8
    b_nullary: 0
    c_one_of: 0
    c_top: 1
    c_bot: 1
    c_primitive: 5
    r_primitive: 2
    c_and: 76
    c_not: 57
    c_equal: 0
    c_some: 15
    c_all: 7
    r_restrict: 5
    r_and: 7
    r_inverse: 7
    r_transitive_closure: 1
    b_empty: 8
    n_count: 59
    n_concept_distance: 25
[t=23.5758s, 1340988 KB] Complexity 9:
Total concept elements: 223
Total role elements: 22
Total numerical elements: 98
Total boolean elements: 8
    b_nullary: 0
    c_one_of: 0
    c_top: 1
    c_bot: 1
    c_primitive: 5
    r_primitive: 2
    c_and: 114
    c_not: 76
    c_equal: 0
    c_some: 16
    c_all: 10
    r_restrict: 5
    r_and: 7
    r_inverse: 7
    r_transitive_closure: 1
    b_empty: 8
    n_count: 70
    n_concept_distance: 28
[t=23.5759s, 1340988 KB] Finished generating composite features.
DomainFeatureDataStatistics:
    num_dlplan_states: 4
    num_boolean_features: 8
    num_numerical_features: 98
2022-11-16 16:12:02 INFO     [40m[34m..done[0m
2022-11-16 16:12:02 INFO     [40m[34mInitializing InstanceFeatureDatas...[0m
2022-11-16 16:12:02 INFO     [40m[34m..done[0m
2022-11-16 16:12:02 INFO     [40m[34mInitializing StatePairEquivalenceDatas...[0m
2022-11-16 16:12:02 INFO     [40m[34m..done[0m
2022-11-16 16:12:02 INFO     [40m[34mInitializing TupleGraphEquivalences...[0m
2022-11-16 16:12:02 INFO     [40m[34m..done[0m
2022-11-16 16:12:02 INFO     [40m[34mInitializing TupleGraphEquivalenceMinimizer...[0m
Num subgoals: 3
Num of selected subgoals: 2
Num rules: 2
Num of selected rules: 2
Num subgoals: 5
Num of selected subgoals: 3
Num rules: 3
Num of selected rules: 3
Num subgoals: 3
Num of selected subgoals: 2
Num rules: 2
Num of selected rules: 2
2022-11-16 16:12:02 INFO     [40m[34m..done[0m
Number of initial D2 facts: 4
Number of D2 facts: 4 of 25
2022-11-16 16:12:02 INFO     [40m[34mGrounding Logic Program...[0m
2022-11-16 16:12:02 INFO     [40m[34m..done[0m
2022-11-16 16:12:02 INFO     [40m[34mSolving Logic Program...[0m
2022-11-16 16:12:02 INFO     [40m[34m..done[0m
Clingo statistics:
Total time:  0.04094886779785156
CPU time:  0.06883100000000009
Solve time:  0.007328987121582031
2022-11-16 16:12:02 INFO     Learned the following sketch:
(:policy
(:boolean_features )
(:numerical_features "n_count(c_primitive(reward,0))")
(:rule (:conditions (:c_n_gt 0)) (:effects (:e_n_bot 0)))
(:rule (:conditions (:c_n_gt 0)) (:effects (:e_n_dec 0)))
)
Numer of sketch rules: 2
Number of selected features: 1
Maximum complexity of selected feature: 2
[40m[31mSketch cycles[0m
Instance: 0 instance_2x2_5-0
1 (instance index=1, state index=1, atoms={at(c_0_1), reward(c_0_1)})
1 (instance index=1, state index=1, atoms={at(c_0_1), reward(c_0_1)})
Number of unsatisfied D2 facts: 3
Number of D2 facts: 7 of 25
2022-11-16 16:12:02 INFO     [40m[34mGrounding Logic Program...[0m
2022-11-16 16:12:02 INFO     [40m[34m..done[0m
2022-11-16 16:12:02 INFO     [40m[34mSolving Logic Program...[0m
2022-11-16 16:12:02 INFO     [40m[34m..done[0m
Clingo statistics:
Total time:  0.04162406921386719
CPU time:  0.06757499999999994
Solve time:  0.005966901779174805
2022-11-16 16:12:02 INFO     Learned the following sketch:
(:policy
(:boolean_features )
(:numerical_features "n_count(c_and(c_primitive(at,0),c_primitive(picked_g,0)))")
(:rule (:conditions (:c_n_eq 0)) (:effects (:e_n_inc 0)))
(:rule (:conditions (:c_n_gt 0)) (:effects (:e_n_bot 0)))
)
Numer of sketch rules: 2
Number of selected features: 1
Maximum complexity of selected feature: 4
[40m[31mSketch cycles[0m
Instance: 0 instance_2x2_5-0
1 (instance index=1, state index=1, atoms={at(c_0_1), reward(c_0_1)})
1 (instance index=1, state index=1, atoms={at(c_0_1), reward(c_0_1)})
Number of unsatisfied D2 facts: 1
Number of D2 facts: 8 of 25
2022-11-16 16:12:02 INFO     [40m[34mGrounding Logic Program...[0m
2022-11-16 16:12:02 INFO     [40m[34m..done[0m
2022-11-16 16:12:02 INFO     [40m[34mSolving Logic Program...[0m
2022-11-16 16:12:02 INFO     [40m[34m..done[0m
Clingo statistics:
Total time:  0.04258894920349121
CPU time:  0.07163500000000012
Solve time:  0.005055904388427734
2022-11-16 16:12:02 INFO     Learned the following sketch:
(:policy
(:boolean_features )
(:numerical_features "n_concept_distance(c_primitive(at,0),r_primitive(adjacent_g,0,1),c_primitive(reward,0))" "n_count(c_primitive(reward,0))")
(:rule (:conditions (:c_n_gt 1) (:c_n_eq 0)) (:effects (:e_n_dec 1) (:e_n_inc 0)))
(:rule (:conditions (:c_n_gt 1) (:c_n_gt 0)) (:effects (:e_n_bot 1) (:e_n_dec 0)))
)
Numer of sketch rules: 2
Number of selected features: 2
Maximum complexity of selected feature: 4
2022-11-16 16:12:02 INFO     [40m[34mVerifying learned sketch...[0m
[40m[31mSketch fails to bound width of a state[0m
Instance: 2 instance_2x2_21-2
Source_state: 2 (instance index=2, state index=2, atoms={at(c_1_0), reward(c_0_1)})
2022-11-16 16:12:02 INFO     [40m[34m..done[0m
2022-11-16 16:12:02 INFO     [40m[33mIteration summary:[0m
DomainFeatureDataStatistics:
    num_dlplan_states: 4
    num_boolean_features: 8
    num_numerical_features: 98
StatePairEquivalenceStatistics:
    num_state_pairs: 8
    num_equivalences: 5
TupleGraphEquivalenceMinimizerStatistics:
    Number of input tuples: 11
    Number of output tuples: 7
Smallest unsolved instance: 2
Selected instances: [2]

2022-11-16 16:12:02 INFO     [40m[31mIteration: 1[0m
Number of selected instances: 1
Selected instances:
    id: 2 name: instance_2x2_21-2
initial states: {0, 1, 2}
2022-11-16 16:12:02 INFO     [40m[34mInitializing DomainFeatureData...[0m
[t=23.7378s, 3531120 KB] Started generating base features of complexity 1.
[t=23.738s, 3531120 KB] Complexity 1:
    b_nullary: 0
    c_one_of: 0
    c_top: 1
    c_bot: 1
    c_primitive: 5
    r_primitive: 2
    c_and: 0
    c_not: 0
    c_equal: 0
    c_some: 0
    c_all: 0
    r_restrict: 0
    r_and: 0
    r_inverse: 0
    r_transitive_closure: 0
    b_empty: 0
    n_count: 0
    n_concept_distance: 0
[t=23.7381s, 3531120 KB] Finished generating base features.
[t=23.7381s, 3531120 KB] Started generating composite features. 
[t=23.7383s, 3531120 KB] Complexity 2:
Total concept elements: 12
Total role elements: 3
Total numerical elements: 7
Total boolean elements: 4
    b_nullary: 0
    c_one_of: 0
    c_top: 1
    c_bot: 1
    c_primitive: 5
    r_primitive: 2
    c_and: 0
    c_not: 5
    c_equal: 0
    c_some: 0
    c_all: 0
    r_restrict: 0
    r_and: 0
    r_inverse: 0
    r_transitive_closure: 1
    b_empty: 4
    n_count: 7
    n_concept_distance: 0
[t=23.739s, 3531120 KB] Complexity 3:
Total concept elements: 18
Total role elements: 8
Total numerical elements: 10
Total boolean elements: 4
    b_nullary: 0
    c_one_of: 0
    c_top: 1
    c_bot: 1
    c_primitive: 5
    r_primitive: 2
    c_and: 2
    c_not: 5
    c_equal: 0
    c_some: 4
    c_all: 0
    r_restrict: 5
    r_and: 0
    r_inverse: 0
    r_transitive_closure: 1
    b_empty: 4
    n_count: 10
    n_concept_distance: 0
[t=23.7399s, 3531120 KB] Complexity 4:
Total concept elements: 34
Total role elements: 13
Total numerical elements: 23
Total boolean elements: 6
    b_nullary: 0
    c_one_of: 0
    c_top: 1
    c_bot: 1
    c_primitive: 5
    r_primitive: 2
    c_and: 10
    c_not: 11
    c_equal: 0
    c_some: 6
    c_all: 0
    r_restrict: 5
    r_and: 0
    r_inverse: 5
    r_transitive_closure: 1
    b_empty: 6
    n_count: 16
    n_concept_distance: 7
[t=23.7415s, 3531120 KB] Complexity 5:
Total concept elements: 58
Total role elements: 13
Total numerical elements: 38
Total boolean elements: 8
    b_nullary: 0
    c_one_of: 0
    c_top: 1
    c_bot: 1
    c_primitive: 5
    r_primitive: 2
    c_and: 17
    c_not: 19
    c_equal: 0
    c_some: 10
    c_all: 5
    r_restrict: 5
    r_and: 0
    r_inverse: 5
    r_transitive_closure: 1
    b_empty: 8
    n_count: 26
    n_concept_distance: 12
[t=23.7448s, 3531120 KB] Complexity 6:
Total concept elements: 95
Total role elements: 13
Total numerical elements: 54
Total boolean elements: 9
    b_nullary: 0
    c_one_of: 0
    c_top: 1
    c_bot: 1
    c_primitive: 5
    r_primitive: 2
    c_and: 34
    c_not: 35
    c_equal: 0
    c_some: 12
    c_all: 7
    r_restrict: 5
    r_and: 0
    r_inverse: 5
    r_transitive_closure: 1
    b_empty: 9
    n_count: 37
    n_concept_distance: 17
[t=23.7493s, 3531120 KB] Complexity 7:
Total concept elements: 159
Total role elements: 15
Total numerical elements: 80
Total boolean elements: 11
    b_nullary: 0
    c_one_of: 0
    c_top: 1
    c_bot: 1
    c_primitive: 5
    r_primitive: 2
    c_and: 68
    c_not: 54
    c_equal: 0
    c_some: 19
    c_all: 11
    r_restrict: 5
    r_and: 2
    r_inverse: 5
    r_transitive_closure: 1
    b_empty: 11
    n_count: 55
    n_concept_distance: 25
[t=23.7575s, 3531120 KB] Complexity 8:
Total concept elements: 250
Total role elements: 28
Total numerical elements: 109
Total boolean elements: 11
    b_nullary: 0
    c_one_of: 0
    c_top: 1
    c_bot: 1
    c_primitive: 5
    r_primitive: 2
    c_and: 117
    c_not: 91
    c_equal: 0
    c_some: 20
    c_all: 15
    r_restrict: 5
    r_and: 13
    r_inverse: 7
    r_transitive_closure: 1
    b_empty: 11
    n_count: 77
    n_concept_distance: 32
[t=23.7729s, 3531120 KB] Complexity 9:
Total concept elements: 400
Total role elements: 28
Total numerical elements: 151
Total boolean elements: 15
    b_nullary: 0
    c_one_of: 0
    c_top: 1
    c_bot: 1
    c_primitive: 5
    r_primitive: 2
    c_and: 219
    c_not: 133
    c_equal: 0
    c_some: 23
    c_all: 18
    r_restrict: 5
    r_and: 13
    r_inverse: 7
    r_transitive_closure: 1
    b_empty: 15
    n_count: 106
    n_concept_distance: 45
[t=23.773s, 3531120 KB] Finished generating composite features.
DomainFeatureDataStatistics:
    num_dlplan_states: 4
    num_boolean_features: 15
    num_numerical_features: 151
2022-11-16 16:12:02 INFO     [40m[34m..done[0m
2022-11-16 16:12:02 INFO     [40m[34mInitializing InstanceFeatureDatas...[0m
2022-11-16 16:12:02 INFO     [40m[34m..done[0m
2022-11-16 16:12:02 INFO     [40m[34mInitializing StatePairEquivalenceDatas...[0m
2022-11-16 16:12:02 INFO     [40m[34m..done[0m
2022-11-16 16:12:02 INFO     [40m[34mInitializing TupleGraphEquivalences...[0m
2022-11-16 16:12:02 INFO     [40m[34m..done[0m
2022-11-16 16:12:02 INFO     [40m[34mInitializing TupleGraphEquivalenceMinimizer...[0m
Num subgoals: 4
Num of selected subgoals: 3
Num rules: 3
Num of selected rules: 3
Num subgoals: 4
Num of selected subgoals: 3
Num rules: 3
Num of selected rules: 3
Num subgoals: 3
Num of selected subgoals: 2
Num rules: 2
Num of selected rules: 2
2022-11-16 16:12:02 INFO     [40m[34m..done[0m
Number of initial D2 facts: 7
Number of D2 facts: 7 of 64
2022-11-16 16:12:02 INFO     [40m[34mGrounding Logic Program...[0m
2022-11-16 16:12:02 INFO     [40m[34m..done[0m
2022-11-16 16:12:02 INFO     [40m[34mSolving Logic Program...[0m
2022-11-16 16:12:02 INFO     [40m[34m..done[0m
Clingo statistics:
Total time:  0.04145693778991699
CPU time:  0.06177800000000033
Solve time:  0.0057201385498046875
2022-11-16 16:12:02 INFO     Learned the following sketch:
(:policy
(:boolean_features )
(:numerical_features "n_count(c_primitive(reward,0))")
(:rule (:conditions (:c_n_gt 0)) (:effects (:e_n_bot 0)))
(:rule (:conditions (:c_n_gt 0)) (:effects (:e_n_dec 0)))
)
Numer of sketch rules: 2
Number of selected features: 1
Maximum complexity of selected feature: 2
[40m[31mSketch cycles[0m
Instance: 2 instance_2x2_21-2
2 (instance index=2, state index=2, atoms={at(c_1_0), reward(c_0_1)})
2 (instance index=2, state index=2, atoms={at(c_1_0), reward(c_0_1)})
Number of unsatisfied D2 facts: 10
Number of D2 facts: 17 of 64
2022-11-16 16:12:02 INFO     [40m[34mGrounding Logic Program...[0m
2022-11-16 16:12:02 INFO     [40m[34m..done[0m
2022-11-16 16:12:02 INFO     [40m[34mSolving Logic Program...[0m
2022-11-16 16:12:02 INFO     [40m[34m..done[0m
Clingo statistics:
Total time:  0.08332204818725586
CPU time:  0.11652499999999999
Solve time:  0.007964134216308594
2022-11-16 16:12:02 INFO     Learned the following sketch:
(:policy
(:boolean_features )
(:numerical_features "n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_primitive(picked_g,0))")
(:rule (:conditions (:c_n_eq 0)) (:effects (:e_n_bot 0)))
(:rule (:conditions (:c_n_gt 0)) (:effects (:e_n_dec 0)))
)
Numer of sketch rules: 2
Number of selected features: 1
Maximum complexity of selected feature: 4
[40m[31mSketch cycles[0m
Instance: 2 instance_2x2_21-2
0 (instance index=2, state index=0, atoms={at(c_0_0), reward(c_0_1)})
1 (instance index=2, state index=1, atoms={at(c_0_1), reward(c_0_1)})
2 (instance index=2, state index=2, atoms={at(c_1_0), reward(c_0_1)})
1 (instance index=2, state index=1, atoms={at(c_0_1), reward(c_0_1)})
Number of unsatisfied D2 facts: 1
Number of D2 facts: 18 of 64
2022-11-16 16:12:02 INFO     [40m[34mGrounding Logic Program...[0m
2022-11-16 16:12:02 INFO     [40m[34m..done[0m
2022-11-16 16:12:02 INFO     [40m[34mSolving Logic Program...[0m
2022-11-16 16:12:02 INFO     [40m[34m..done[0m
Clingo statistics:
Total time:  0.08129405975341797
CPU time:  0.11586000000000007
Solve time:  0.005510091781616211
2022-11-16 16:12:02 INFO     Learned the following sketch:
(:policy
(:boolean_features )
(:numerical_features "n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_primitive(reward,0))" "n_count(c_primitive(reward,0))")
(:rule (:conditions (:c_n_gt 1) (:c_n_eq 0)) (:effects (:e_n_dec 1) (:e_n_inc 0)))
(:rule (:conditions (:c_n_gt 1) (:c_n_gt 0)) (:effects (:e_n_bot 1) (:e_n_dec 0)))
)
Numer of sketch rules: 2
Number of selected features: 2
Maximum complexity of selected feature: 4
2022-11-16 16:12:02 INFO     [40m[34mVerifying learned sketch...[0m
[40m[31mSketch fails to bound width of a state[0m
Instance: 133 instance_3x3_11-6
Source_state: 6 (instance index=133, state index=6, atoms={at(c_1_2), reward(c_1_0)})
2022-11-16 16:12:02 INFO     [40m[34m..done[0m
2022-11-16 16:12:02 INFO     [40m[33mIteration summary:[0m
DomainFeatureDataStatistics:
    num_dlplan_states: 4
    num_boolean_features: 15
    num_numerical_features: 151
StatePairEquivalenceStatistics:
    num_state_pairs: 8
    num_equivalences: 8
TupleGraphEquivalenceMinimizerStatistics:
    Number of input tuples: 11
    Number of output tuples: 8
Smallest unsolved instance: 133
Selected instances: [133]

2022-11-16 16:12:02 INFO     [40m[31mIteration: 2[0m
Number of selected instances: 1
Selected instances:
    id: 133 name: instance_3x3_11-6
initial states: {0, 1, 2, 3, 6}
2022-11-16 16:12:02 INFO     [40m[34mInitializing DomainFeatureData...[0m
[t=24.0844s, 3531120 KB] Started generating base features of complexity 1.
[t=24.0845s, 3531120 KB] Complexity 1:
    b_nullary: 0
    c_one_of: 0
    c_top: 1
    c_bot: 1
    c_primitive: 5
    r_primitive: 2
    c_and: 0
    c_not: 0
    c_equal: 0
    c_some: 0
    c_all: 0
    r_restrict: 0
    r_and: 0
    r_inverse: 0
    r_transitive_closure: 0
    b_empty: 0
    n_count: 0
    n_concept_distance: 0
[t=24.0846s, 3531120 KB] Finished generating base features.
[t=24.0847s, 3531120 KB] Started generating composite features. 
[t=24.0848s, 3531120 KB] Complexity 2:
Total concept elements: 12
Total role elements: 3
Total numerical elements: 7
Total boolean elements: 4
    b_nullary: 0
    c_one_of: 0
    c_top: 1
    c_bot: 1
    c_primitive: 5
    r_primitive: 2
    c_and: 0
    c_not: 5
    c_equal: 0
    c_some: 0
    c_all: 0
    r_restrict: 0
    r_and: 0
    r_inverse: 0
    r_transitive_closure: 1
    b_empty: 4
    n_count: 7
    n_concept_distance: 0
[t=24.0856s, 3531120 KB] Complexity 3:
Total concept elements: 19
Total role elements: 8
Total numerical elements: 12
Total boolean elements: 4
    b_nullary: 0
    c_one_of: 0
    c_top: 1
    c_bot: 1
    c_primitive: 5
    r_primitive: 2
    c_and: 2
    c_not: 5
    c_equal: 0
    c_some: 4
    c_all: 1
    r_restrict: 5
    r_and: 0
    r_inverse: 0
    r_transitive_closure: 1
    b_empty: 4
    n_count: 12
    n_concept_distance: 0
[t=24.0866s, 3531120 KB] Complexity 4:
Total concept elements: 36
Total role elements: 13
Total numerical elements: 27
Total boolean elements: 6
    b_nullary: 0
    c_one_of: 0
    c_top: 1
    c_bot: 1
    c_primitive: 5
    r_primitive: 2
    c_and: 10
    c_not: 12
    c_equal: 0
    c_some: 6
    c_all: 1
    r_restrict: 5
    r_and: 0
    r_inverse: 5
    r_transitive_closure: 1
    b_empty: 6
    n_count: 20
    n_concept_distance: 7
[t=24.0883s, 3531120 KB] Complexity 5:
Total concept elements: 63
Total role elements: 13
Total numerical elements: 43
Total boolean elements: 8
    b_nullary: 0
    c_one_of: 0
    c_top: 1
    c_bot: 1
    c_primitive: 5
    r_primitive: 2
    c_and: 19
    c_not: 20
    c_equal: 0
    c_some: 11
    c_all: 6
    r_restrict: 5
    r_and: 0
    r_inverse: 5
    r_transitive_closure: 1
    b_empty: 8
    n_count: 33
    n_concept_distance: 10
[t=24.0916s, 3531120 KB] Complexity 6:
Total concept elements: 110
Total role elements: 13
Total numerical elements: 73
Total boolean elements: 11
    b_nullary: 0
    c_one_of: 0
    c_top: 1
    c_bot: 1
    c_primitive: 5
    r_primitive: 2
    c_and: 40
    c_not: 39
    c_equal: 0
    c_some: 13
    c_all: 11
    r_restrict: 5
    r_and: 0
    r_inverse: 5
    r_transitive_closure: 1
    b_empty: 11
    n_count: 52
    n_concept_distance: 21
[t=24.0975s, 3531120 KB] Complexity 7:
Total concept elements: 212
Total role elements: 15
Total numerical elements: 114
Total boolean elements: 14
    b_nullary: 0
    c_one_of: 0
    c_top: 1
    c_bot: 1
    c_primitive: 5
    r_primitive: 2
    c_and: 87
    c_not: 65
    c_equal: 0
    c_some: 27
    c_all: 26
    r_restrict: 5
    r_and: 2
    r_inverse: 5
    r_transitive_closure: 1
    b_empty: 14
    n_count: 87
    n_concept_distance: 27
[t=24.1088s, 3531120 KB] Complexity 8:
Total concept elements: 357
Total role elements: 28
Total numerical elements: 199
Total boolean elements: 16
    b_nullary: 0
    c_one_of: 0
    c_top: 1
    c_bot: 1
    c_primitive: 5
    r_primitive: 2
    c_and: 152
    c_not: 135
    c_equal: 0
    c_some: 32
    c_all: 31
    r_restrict: 5
    r_and: 13
    r_inverse: 7
    r_transitive_closure: 1
    b_empty: 16
    n_count: 160
    n_concept_distance: 39
[t=24.1326s, 3531120 KB] Complexity 9:
Total concept elements: 668
Total role elements: 28
Total numerical elements: 323
Total boolean elements: 19
    b_nullary: 0
    c_one_of: 0
    c_top: 1
    c_bot: 1
    c_primitive: 5
    r_primitive: 2
    c_and: 319
    c_not: 203
    c_equal: 0
    c_some: 66
    c_all: 73
    r_restrict: 5
    r_and: 13
    r_inverse: 7
    r_transitive_closure: 1
    b_empty: 19
    n_count: 265
    n_concept_distance: 58
[t=24.1327s, 3531120 KB] Finished generating composite features.
DomainFeatureDataStatistics:
    num_dlplan_states: 8
    num_boolean_features: 19
    num_numerical_features: 323
2022-11-16 16:12:02 INFO     [40m[34m..done[0m
2022-11-16 16:12:02 INFO     [40m[34mInitializing InstanceFeatureDatas...[0m
2022-11-16 16:12:02 INFO     [40m[34m..done[0m
2022-11-16 16:12:02 INFO     [40m[34mInitializing StatePairEquivalenceDatas...[0m
2022-11-16 16:12:02 INFO     [40m[34m..done[0m
2022-11-16 16:12:02 INFO     [40m[34mInitializing TupleGraphEquivalences...[0m
2022-11-16 16:12:02 INFO     [40m[34m..done[0m
2022-11-16 16:12:02 INFO     [40m[34mInitializing TupleGraphEquivalenceMinimizer...[0m
Num subgoals: 4
Num of selected subgoals: 3
Num rules: 3
Num of selected rules: 3
Num subgoals: 4
Num of selected subgoals: 3
Num rules: 3
Num of selected rules: 3
Num subgoals: 5
Num of selected subgoals: 4
Num rules: 4
Num of selected rules: 4
Num subgoals: 4
Num of selected subgoals: 3
Num rules: 3
Num of selected rules: 3
Num subgoals: 4
Num of selected subgoals: 3
Num rules: 3
Num of selected rules: 3
Num subgoals: 3
Num of selected subgoals: 2
Num rules: 2
Num of selected rules: 2
Num subgoals: 3
Num of selected subgoals: 2
Num rules: 2
Num of selected rules: 2
2022-11-16 16:12:02 INFO     [40m[34m..done[0m
Number of initial D2 facts: 20
Number of D2 facts: 20 of 400
2022-11-16 16:12:03 INFO     [40m[34mGrounding Logic Program...[0m
2022-11-16 16:12:03 INFO     [40m[34m..done[0m
2022-11-16 16:12:03 INFO     [40m[34mSolving Logic Program...[0m
2022-11-16 16:12:03 INFO     [40m[34m..done[0m
Clingo statistics:
Total time:  0.18491101264953613
CPU time:  0.2325039999999996
Solve time:  0.0073430538177490234
2022-11-16 16:12:03 INFO     Learned the following sketch:
(:policy
(:boolean_features )
(:numerical_features "n_count(c_and(c_primitive(at,0),c_primitive(reward,0)))")
(:rule (:conditions (:c_n_eq 0)) (:effects (:e_n_bot 0)))
(:rule (:conditions (:c_n_eq 0)) (:effects (:e_n_inc 0)))
(:rule (:conditions (:c_n_gt 0)) (:effects (:e_n_dec 0)))
)
Numer of sketch rules: 3
Number of selected features: 1
Maximum complexity of selected feature: 4
[40m[31mSketch cycles[0m
Instance: 133 instance_3x3_11-6
6 (instance index=133, state index=6, atoms={at(c_1_2), reward(c_1_0)})
6 (instance index=133, state index=6, atoms={at(c_1_2), reward(c_1_0)})
Number of unsatisfied D2 facts: 36
Number of D2 facts: 56 of 400
2022-11-16 16:12:03 INFO     [40m[34mGrounding Logic Program...[0m
2022-11-16 16:12:03 INFO     [40m[34m..done[0m
2022-11-16 16:12:03 INFO     [40m[34mSolving Logic Program...[0m
2022-11-16 16:12:03 INFO     [40m[34m..done[0m
Clingo statistics:
Total time:  0.40088486671447754
CPU time:  0.5188250000000001
Solve time:  0.01137995719909668
2022-11-16 16:12:03 INFO     Learned the following sketch:
(:policy
(:boolean_features )
(:numerical_features "n_concept_distance(c_primitive(at,0),r_restrict(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_primitive(picked_g,0))")
(:rule (:conditions (:c_n_eq 0)) (:effects (:e_n_bot 0)))
(:rule (:conditions (:c_n_gt 0)) (:effects (:e_n_dec 0)))
)
Numer of sketch rules: 2
Number of selected features: 1
Maximum complexity of selected feature: 6
[40m[31mSketch cycles[0m
Instance: 133 instance_3x3_11-6
0 (instance index=133, state index=0, atoms={at(c_0_0), reward(c_1_0)})
1 (instance index=133, state index=1, atoms={at(c_0_1), reward(c_1_0)})
2 (instance index=133, state index=2, atoms={at(c_1_0), reward(c_1_0)})
3 (instance index=133, state index=3, atoms={at(c_0_2), reward(c_1_0)})
6 (instance index=133, state index=6, atoms={at(c_1_2), reward(c_1_0)})
2 (instance index=133, state index=2, atoms={at(c_1_0), reward(c_1_0)})
Number of unsatisfied D2 facts: 1
Number of D2 facts: 57 of 400
2022-11-16 16:12:04 INFO     [40m[34mGrounding Logic Program...[0m
2022-11-16 16:12:04 INFO     [40m[34m..done[0m
2022-11-16 16:12:04 INFO     [40m[34mSolving Logic Program...[0m
2022-11-16 16:12:04 INFO     [40m[34m..done[0m
Clingo statistics:
Total time:  0.46450114250183105
CPU time:  0.5522899999999997
Solve time:  0.009242057800292969
2022-11-16 16:12:04 INFO     Learned the following sketch:
(:policy
(:boolean_features )
(:numerical_features "n_concept_distance(c_primitive(at,0),r_restrict(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_primitive(picked_g,0))" "n_count(c_primitive(reward,0))")
(:rule (:conditions (:c_n_gt 1) (:c_n_eq 0)) (:effects (:e_n_dec 1) (:e_n_bot 0)))
(:rule (:conditions (:c_n_gt 1) (:c_n_gt 0)) (:effects (:e_n_bot 1) (:e_n_dec 0)))
)
Numer of sketch rules: 2
Number of selected features: 2
Maximum complexity of selected feature: 6
2022-11-16 16:12:04 INFO     [40m[34mVerifying learned sketch...[0m
[40m[31mSketch fails to bound width of a state[0m
Instance: 19 instance_2x2_4-5
Source_state: 3 (instance index=51, state index=3, atoms={at(c_1_0), reward(c_1_1), picked(c_1_0)})
2022-11-16 16:12:04 INFO     [40m[34m..done[0m
2022-11-16 16:12:04 INFO     [40m[33mIteration summary:[0m
DomainFeatureDataStatistics:
    num_dlplan_states: 8
    num_boolean_features: 19
    num_numerical_features: 323
StatePairEquivalenceStatistics:
    num_state_pairs: 20
    num_equivalences: 20
TupleGraphEquivalenceMinimizerStatistics:
    Number of input tuples: 27
    Number of output tuples: 20
Smallest unsolved instance: 19
Selected instances: [133, 19]

2022-11-16 16:12:04 INFO     [40m[31mIteration: 3[0m
Number of selected instances: 2
Selected instances:
    id: 133 name: instance_3x3_11-6
initial states: {0, 1, 2, 3, 6}
    id: 19 name: instance_2x2_4-5
initial states: {3, 5, 6}
2022-11-16 16:12:04 INFO     [40m[34mInitializing DomainFeatureData...[0m
[t=25.4924s, 3531120 KB] Started generating base features of complexity 1.
[t=25.4926s, 3531120 KB] Complexity 1:
    b_nullary: 0
    c_one_of: 0
    c_top: 1
    c_bot: 1
    c_primitive: 5
    r_primitive: 2
    c_and: 0
    c_not: 0
    c_equal: 0
    c_some: 0
    c_all: 0
    r_restrict: 0
    r_and: 0
    r_inverse: 0
    r_transitive_closure: 0
    b_empty: 0
    n_count: 0
    n_concept_distance: 0
[t=25.4927s, 3531120 KB] Finished generating base features.
[t=25.4927s, 3531120 KB] Started generating composite features. 
[t=25.4929s, 3531120 KB] Complexity 2:
Total concept elements: 12
Total role elements: 3
Total numerical elements: 8
Total boolean elements: 4
    b_nullary: 0
    c_one_of: 0
    c_top: 1
    c_bot: 1
    c_primitive: 5
    r_primitive: 2
    c_and: 0
    c_not: 5
    c_equal: 0
    c_some: 0
    c_all: 0
    r_restrict: 0
    r_and: 0
    r_inverse: 0
    r_transitive_closure: 1
    b_empty: 4
    n_count: 8
    n_concept_distance: 0
[t=25.4936s, 3531120 KB] Complexity 3:
Total concept elements: 20
Total role elements: 8
Total numerical elements: 14
Total boolean elements: 4
    b_nullary: 0
    c_one_of: 0
    c_top: 1
    c_bot: 1
    c_primitive: 5
    r_primitive: 2
    c_and: 3
    c_not: 5
    c_equal: 0
    c_some: 4
    c_all: 1
    r_restrict: 5
    r_and: 0
    r_inverse: 0
    r_transitive_closure: 1
    b_empty: 4
    n_count: 14
    n_concept_distance: 0
[t=25.4946s, 3531120 KB] Complexity 4:
Total concept elements: 40
Total role elements: 13
Total numerical elements: 30
Total boolean elements: 7
    b_nullary: 0
    c_one_of: 0
    c_top: 1
    c_bot: 1
    c_primitive: 5
    r_primitive: 2
    c_and: 13
    c_not: 13
    c_equal: 0
    c_some: 6
    c_all: 1
    r_restrict: 5
    r_and: 0
    r_inverse: 5
    r_transitive_closure: 1
    b_empty: 7
    n_count: 23
    n_concept_distance: 7
[t=25.4965s, 3531120 KB] Complexity 5:
Total concept elements: 92
Total role elements: 13
Total numerical elements: 54
Total boolean elements: 15
    b_nullary: 0
    c_one_of: 0
    c_top: 1
    c_bot: 1
    c_primitive: 5
    r_primitive: 2
    c_and: 34
    c_not: 25
    c_equal: 0
    c_some: 13
    c_all: 13
    r_restrict: 5
    r_and: 0
    r_inverse: 5
    r_transitive_closure: 1
    b_empty: 15
    n_count: 43
    n_concept_distance: 11
[t=25.5008s, 3531120 KB] Complexity 6:
Total concept elements: 193
Total role elements: 13
Total numerical elements: 113
Total boolean elements: 25
    b_nullary: 0
    c_one_of: 0
    c_top: 1
    c_bot: 1
    c_primitive: 5
    r_primitive: 2
    c_and: 83
    c_not: 65
    c_equal: 0
    c_some: 16
    c_all: 22
    r_restrict: 5
    r_and: 0
    r_inverse: 5
    r_transitive_closure: 1
    b_empty: 25
    n_count: 87
    n_concept_distance: 26
[t=25.5106s, 3531120 KB] Complexity 7:
Total concept elements: 422
Total role elements: 16
Total numerical elements: 213
Total boolean elements: 36
    b_nullary: 0
    c_one_of: 0
    c_top: 1
    c_bot: 1
    c_primitive: 5
    r_primitive: 2
    c_and: 188
    c_not: 119
    c_equal: 0
    c_some: 49
    c_all: 59
    r_restrict: 5
    r_and: 3
    r_inverse: 5
    r_transitive_closure: 1
    b_empty: 36
    n_count: 170
    n_concept_distance: 43
[t=25.5332s, 3531120 KB] Complexity 8:
Total concept elements: 843
Total role elements: 40
Total numerical elements: 437
Total boolean elements: 53
    b_nullary: 0
    c_one_of: 0
    c_top: 1
    c_bot: 1
    c_primitive: 5
    r_primitive: 2
    c_and: 416
    c_not: 274
    c_equal: 0
    c_some: 62
    c_all: 84
    r_restrict: 5
    r_and: 24
    r_inverse: 8
    r_transitive_closure: 1
    b_empty: 53
    n_count: 359
    n_concept_distance: 78
[t=25.5871s, 3531120 KB] Complexity 9:
Total concept elements: 1712
Total role elements: 40
Total numerical elements: 841
Total boolean elements: 89
    b_nullary: 0
    c_one_of: 0
    c_top: 1
    c_bot: 1
    c_primitive: 5
    r_primitive: 2
    c_and: 848
    c_not: 509
    c_equal: 0
    c_some: 151
    c_all: 197
    r_restrict: 5
    r_and: 24
    r_inverse: 8
    r_transitive_closure: 1
    b_empty: 89
    n_count: 686
    n_concept_distance: 155
[t=25.5873s, 3531120 KB] Finished generating composite features.
DomainFeatureDataStatistics:
    num_dlplan_states: 12
    num_boolean_features: 89
    num_numerical_features: 841
2022-11-16 16:12:04 INFO     [40m[34m..done[0m
2022-11-16 16:12:04 INFO     [40m[34mInitializing InstanceFeatureDatas...[0m
2022-11-16 16:12:04 INFO     [40m[34m..done[0m
2022-11-16 16:12:04 INFO     [40m[34mInitializing StatePairEquivalenceDatas...[0m
2022-11-16 16:12:04 INFO     [40m[34m..done[0m
2022-11-16 16:12:04 INFO     [40m[34mInitializing TupleGraphEquivalences...[0m
2022-11-16 16:12:04 INFO     [40m[34m..done[0m
2022-11-16 16:12:04 INFO     [40m[34mInitializing TupleGraphEquivalenceMinimizer...[0m
Num subgoals: 4
Num of selected subgoals: 3
Num rules: 3
Num of selected rules: 3
Num subgoals: 4
Num of selected subgoals: 3
Num rules: 3
Num of selected rules: 3
Num subgoals: 5
Num of selected subgoals: 4
Num rules: 4
Num of selected rules: 4
Num subgoals: 4
Num of selected subgoals: 3
Num rules: 3
Num of selected rules: 3
Num subgoals: 4
Num of selected subgoals: 3
Num rules: 3
Num of selected rules: 3
Num subgoals: 3
Num of selected subgoals: 2
Num rules: 2
Num of selected rules: 2
Num subgoals: 3
Num of selected subgoals: 2
Num rules: 2
Num of selected rules: 2
Num subgoals: 5
Num of selected subgoals: 3
Num rules: 3
Num of selected rules: 3
Num subgoals: 4
Num of selected subgoals: 2
Num rules: 2
Num of selected rules: 2
Num subgoals: 5
Num of selected subgoals: 3
Num rules: 3
Num of selected rules: 3
2022-11-16 16:12:04 INFO     [40m[34m..done[0m
Number of initial D2 facts: 27
Number of D2 facts: 27 of 784
2022-11-16 16:12:05 INFO     [40m[34mGrounding Logic Program...[0m
2022-11-16 16:12:05 INFO     [40m[34m..done[0m
2022-11-16 16:12:05 INFO     [40m[34mSolving Logic Program...[0m
2022-11-16 16:12:05 INFO     [40m[34m..done[0m
Clingo statistics:
Total time:  0.8281280994415283
CPU time:  1.0246369999999998
Solve time:  0.038230180740356445
2022-11-16 16:12:05 INFO     Learned the following sketch:
(:policy
(:boolean_features )
(:numerical_features "n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_primitive(reward,0))" "n_count(c_primitive(reward,0))")
(:rule (:conditions (:c_n_gt 1) (:c_n_eq 0)) (:effects (:e_n_dec 1) (:e_n_inc 0)))
(:rule (:conditions (:c_n_gt 1) (:c_n_gt 0)) (:effects (:e_n_bot 1) (:e_n_dec 0)))
(:rule (:conditions (:c_n_gt 1) (:c_n_gt 0)) (:effects (:e_n_bot 1) (:e_n_inc 0)))
)
Numer of sketch rules: 3
Number of selected features: 2
Maximum complexity of selected feature: 4
[40m[31mSketch cycles[0m
Instance: 133 instance_3x3_11-6
0 (instance index=133, state index=0, atoms={at(c_0_0), reward(c_1_0)})
1 (instance index=133, state index=1, atoms={at(c_0_1), reward(c_1_0)})
3 (instance index=133, state index=3, atoms={at(c_0_2), reward(c_1_0)})
6 (instance index=133, state index=6, atoms={at(c_1_2), reward(c_1_0)})
1 (instance index=133, state index=1, atoms={at(c_0_1), reward(c_1_0)})
Number of unsatisfied D2 facts: 16
Number of D2 facts: 43 of 784
2022-11-16 16:12:06 INFO     [40m[34mGrounding Logic Program...[0m
2022-11-16 16:12:07 INFO     [40m[34m..done[0m
2022-11-16 16:12:07 INFO     [40m[34mSolving Logic Program...[0m
2022-11-16 16:12:07 INFO     [40m[34m..done[0m
Clingo statistics:
Total time:  1.5327270030975342
CPU time:  1.6767839999999996
Solve time:  0.014719009399414062
2022-11-16 16:12:07 INFO     Learned the following sketch:
(:policy
(:boolean_features )
(:numerical_features "n_concept_distance(c_primitive(at,0),r_restrict(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_primitive(picked_g,0))" "n_count(c_primitive(reward,0))")
(:rule (:conditions (:c_n_gt 1) (:c_n_eq 0)) (:effects (:e_n_bot 1) (:e_n_bot 0)))
(:rule (:conditions (:c_n_gt 1) (:c_n_eq 0)) (:effects (:e_n_dec 1) (:e_n_bot 0)))
(:rule (:conditions (:c_n_gt 1) (:c_n_gt 0)) (:effects (:e_n_bot 1) (:e_n_dec 0)))
)
Numer of sketch rules: 3
Number of selected features: 2
Maximum complexity of selected feature: 6
[40m[31mSketch cycles[0m
Instance: 133 instance_3x3_11-6
0 (instance index=133, state index=0, atoms={at(c_0_0), reward(c_1_0)})
1 (instance index=133, state index=1, atoms={at(c_0_1), reward(c_1_0)})
2 (instance index=133, state index=2, atoms={at(c_1_0), reward(c_1_0)})
3 (instance index=133, state index=3, atoms={at(c_0_2), reward(c_1_0)})
6 (instance index=133, state index=6, atoms={at(c_1_2), reward(c_1_0)})
2 (instance index=133, state index=2, atoms={at(c_1_0), reward(c_1_0)})
Number of unsatisfied D2 facts: 10
Number of D2 facts: 53 of 784
2022-11-16 16:12:08 INFO     [40m[34mGrounding Logic Program...[0m
2022-11-16 16:12:08 INFO     [40m[34m..done[0m
2022-11-16 16:12:08 INFO     [40m[34mSolving Logic Program...[0m
2022-11-16 16:12:08 INFO     [40m[34m..done[0m
Clingo statistics:
Total time:  1.5524730682373047
CPU time:  1.7525789999999999
Solve time:  0.017316102981567383
2022-11-16 16:12:09 INFO     Learned the following sketch:
(:policy
(:boolean_features )
(:numerical_features "n_concept_distance(c_primitive(at,0),r_restrict(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_primitive(reward,0))" "n_count(c_primitive(reward,0))")
(:rule (:conditions (:c_n_gt 1) (:c_n_eq 0)) (:effects (:e_n_dec 1) (:e_n_inc 0)))
(:rule (:conditions (:c_n_gt 1) (:c_n_gt 0)) (:effects (:e_n_bot 1) (:e_n_dec 0)))
)
Numer of sketch rules: 2
Number of selected features: 2
Maximum complexity of selected feature: 6
2022-11-16 16:12:09 INFO     [40m[34mVerifying learned sketch...[0m
2022-11-16 16:12:09 INFO     [40m[34m..done[0m
2022-11-16 16:12:09 INFO     [40m[33mIteration summary:[0m
DomainFeatureDataStatistics:
    num_dlplan_states: 12
    num_boolean_features: 89
    num_numerical_features: 841
StatePairEquivalenceStatistics:
    num_state_pairs: 28
    num_equivalences: 28
TupleGraphEquivalenceMinimizerStatistics:
    Number of input tuples: 41
    Number of output tuples: 28
[40m[31mSketch solves all instances![0m
2022-11-16 16:12:09 INFO     [40m[32mSummary:[0m
Boolean features:
b_empty(c_top)
b_empty(c_bot)
b_empty(c_primitive(reward,0))
b_empty(c_primitive(picked,0))
b_empty(c_and(c_primitive(at,0),c_primitive(reward,0)))
b_empty(c_and(c_primitive(at,0),c_primitive(picked,0)))
b_empty(c_and(c_primitive(at,0),c_primitive(picked_g,0)))
b_empty(c_and(c_not(c_primitive(reward,0)),c_primitive(at,0)))
b_empty(c_and(c_not(c_primitive(picked,0)),c_primitive(at,0)))
b_empty(c_and(c_not(c_primitive(picked_g,0)),c_primitive(at,0)))
b_empty(c_and(c_not(c_primitive(at,0)),c_primitive(reward,0)))
b_empty(c_and(c_not(c_primitive(at,0)),c_primitive(picked,0)))
b_empty(c_and(c_not(c_primitive(at,0)),c_primitive(picked_g,0)))
b_empty(c_not(c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))))
b_empty(c_not(c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))))
b_empty(c_and(c_primitive(at,0),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0))))
b_empty(c_and(c_primitive(at,0),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))))
b_empty(c_and(c_all(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_primitive(at,0)))
b_empty(c_and(c_primitive(reward,0),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))))
b_empty(c_and(c_primitive(picked,0),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))))
b_empty(c_and(c_primitive(picked,0),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))))
b_empty(c_not(c_some(r_transitive_closure(r_primitive(adjacent,0,1)),c_primitive(reward,0))))
b_empty(c_not(c_some(r_transitive_closure(r_primitive(adjacent,0,1)),c_primitive(picked,0))))
b_empty(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_primitive(at,0)))
b_empty(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(picked_g,0)),c_primitive(at,0)))
b_empty(c_and(c_not(c_some(r_primitive(adjacent,0,1),c_primitive(reward,0))),c_primitive(at,0)))
b_empty(c_and(c_not(c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))),c_primitive(at,0)))
b_empty(c_and(c_not(c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))),c_primitive(at,0)))
b_empty(c_and(c_not(c_all(r_primitive(adjacent,0,1),c_primitive(unblocked,0))),c_primitive(at,0)))
b_empty(c_and(c_not(c_some(r_primitive(adjacent,0,1),c_primitive(at,0))),c_primitive(reward,0)))
b_empty(c_and(c_not(c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))),c_primitive(picked,0)))
b_empty(c_and(c_not(c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))),c_primitive(picked,0)))
b_empty(c_and(c_not(c_and(c_primitive(at,0),c_primitive(reward,0))),c_primitive(picked_g,0)))
b_empty(c_and(c_not(c_and(c_primitive(at,0),c_primitive(picked,0))),c_primitive(picked_g,0)))
b_empty(c_and(c_not(c_some(r_primitive(adjacent,0,1),c_primitive(at,0))),c_primitive(picked_g,0)))
b_empty(c_all(r_primitive(adjacent,0,1),c_and(c_not(c_primitive(reward,0)),c_primitive(unblocked,0))))
b_empty(c_and(c_and(c_primitive(reward,0),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))),c_primitive(at,0)))
b_empty(c_and(c_and(c_primitive(picked,0),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0))),c_primitive(at,0)))
b_empty(c_and(c_and(c_primitive(picked,0),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))),c_primitive(at,0)))
b_empty(c_and(c_and(c_primitive(picked_g,0),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))),c_primitive(at,0)))
b_empty(c_and(c_and(c_primitive(picked_g,0),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))),c_primitive(at,0)))
b_empty(c_and(c_primitive(at,0),c_some(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0)))))
b_empty(c_and(c_primitive(at,0),c_some(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0)))))
b_empty(c_and(c_all(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0))),c_primitive(at,0)))
b_empty(c_and(c_all(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))),c_primitive(at,0)))
b_empty(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(at,0)),c_primitive(picked,0)),c_primitive(reward,0)))
b_empty(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(picked,0)),c_primitive(at,0)),c_primitive(reward,0)))
b_empty(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(at,0)),c_primitive(reward,0)),c_primitive(picked,0)))
b_empty(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(reward,0)),c_primitive(at,0)),c_primitive(picked,0)))
b_empty(c_and(c_not(c_primitive(unblocked,0)),c_not(c_some(r_primitive(adjacent,0,1),c_primitive(at,0)))))
b_empty(c_all(r_primitive(adjacent,0,1),c_and(c_not(c_primitive(at,0)),c_not(c_primitive(reward,0)))))
b_empty(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(picked_g,0)),c_and(c_primitive(at,0),c_primitive(reward,0))))
b_empty(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(picked_g,0)),c_and(c_primitive(at,0),c_primitive(picked,0))))
b_empty(c_and(c_and(c_not(c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))),c_primitive(reward,0)),c_primitive(at,0)))
b_empty(c_and(c_and(c_not(c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))),c_primitive(picked,0)),c_primitive(at,0)))
b_empty(c_and(c_and(c_not(c_some(r_primitive(adjacent,0,1),c_primitive(reward,0))),c_primitive(picked_g,0)),c_primitive(at,0)))
b_empty(c_and(c_and(c_not(c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))),c_primitive(picked_g,0)),c_primitive(at,0)))
b_empty(c_and(c_and(c_not(c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))),c_primitive(picked_g,0)),c_primitive(at,0)))
b_empty(c_and(c_and(c_primitive(picked_g,0),c_some(r_transitive_closure(r_primitive(adjacent,0,1)),c_primitive(reward,0))),c_primitive(at,0)))
b_empty(c_and(c_and(c_not(c_primitive(reward,0)),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))),c_primitive(at,0)))
b_empty(c_and(c_and(c_not(c_primitive(reward,0)),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))),c_primitive(at,0)))
b_empty(c_and(c_and(c_not(c_primitive(picked,0)),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0))),c_primitive(at,0)))
b_empty(c_and(c_and(c_not(c_primitive(picked,0)),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))),c_primitive(at,0)))
b_empty(c_and(c_and(c_not(c_primitive(picked,0)),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))),c_primitive(at,0)))
b_empty(c_and(c_and(c_all(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_not(c_primitive(picked,0))),c_primitive(at,0)))
b_empty(c_and(c_and(c_not(c_primitive(picked_g,0)),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))),c_primitive(at,0)))
b_empty(c_and(c_and(c_not(c_primitive(picked_g,0)),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))),c_primitive(at,0)))
b_empty(c_and(c_not(c_and(c_primitive(reward,0),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0)))),c_primitive(at,0)))
b_empty(c_and(c_not(c_and(c_primitive(picked,0),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0)))),c_primitive(at,0)))
b_empty(c_and(c_not(c_and(c_primitive(picked_g,0),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0)))),c_primitive(at,0)))
b_empty(c_and(c_not(c_and(c_primitive(picked_g,0),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0)))),c_primitive(at,0)))
b_empty(c_and(c_not(c_some(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0)))),c_primitive(at,0)))
b_empty(c_and(c_not(c_all(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0)))),c_primitive(at,0)))
b_empty(c_and(c_not(c_all(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0)))),c_primitive(at,0)))
b_empty(c_and(c_all(r_primitive(adjacent,0,1),c_and(c_not(c_primitive(reward,0)),c_primitive(unblocked,0))),c_primitive(at,0)))
b_empty(c_and(c_and(c_not(c_primitive(at,0)),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))),c_primitive(reward,0)))
b_empty(c_and(c_not(c_and(c_primitive(at,0),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0)))),c_primitive(reward,0)))
b_empty(c_and(c_not(c_all(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(at,0)))),c_primitive(reward,0)))
b_empty(c_and(c_not(c_and(c_primitive(at,0),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0)))),c_primitive(picked,0)))
b_empty(c_and(c_not(c_some(r_primitive(adjacent,0,1),c_and(c_primitive(at,0),c_primitive(reward,0)))),c_primitive(picked,0)))
b_empty(c_and(c_not(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(picked_g,0)),c_primitive(at,0))),c_primitive(picked,0)))
b_empty(c_and(c_not(c_some(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(at,0)))),c_primitive(picked_g,0)))
b_empty(c_and(c_all(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0))),c_not(c_primitive(at,0))))
b_empty(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(at,0)),c_primitive(reward,0)),c_not(c_primitive(unblocked,0))))
b_empty(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(at,0)),c_primitive(picked,0)),c_not(c_primitive(unblocked,0))))
b_empty(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(at,0)),c_primitive(picked_g,0)),c_not(c_primitive(unblocked,0))))
b_empty(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(reward,0)),c_primitive(at,0)),c_not(c_primitive(unblocked,0))))
b_empty(c_not(c_some(r_primitive(adjacent,0,1),c_and(c_not(c_primitive(at,0)),c_not(c_primitive(reward,0))))))
b_empty(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_and(c_not(c_primitive(picked,0)),c_primitive(at,0))))
Numerical features:
n_count(c_top)
n_count(c_bot)
n_count(c_primitive(at,0))
n_count(c_primitive(reward,0))
n_count(c_primitive(unblocked,0))
n_count(c_primitive(picked,0))
n_count(c_primitive(picked_g,0))
n_count(r_primitive(adjacent,0,1))
n_count(c_not(c_primitive(at,0)))
n_count(c_not(c_primitive(reward,0)))
n_count(c_not(c_primitive(unblocked,0)))
n_count(c_not(c_primitive(picked,0)))
n_count(c_not(c_primitive(picked_g,0)))
n_count(r_transitive_closure(r_primitive(adjacent,0,1)))
n_count(c_and(c_primitive(at,0),c_primitive(reward,0)))
n_count(c_and(c_primitive(at,0),c_primitive(picked,0)))
n_count(c_and(c_primitive(at,0),c_primitive(picked_g,0)))
n_count(c_some(r_primitive(adjacent,0,1),c_primitive(at,0)))
n_count(c_some(r_primitive(adjacent,0,1),c_primitive(reward,0)))
n_count(c_some(r_primitive(adjacent,0,1),c_primitive(picked,0)))
n_count(c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0)))
n_count(c_all(r_primitive(adjacent,0,1),c_primitive(unblocked,0)))
n_count(r_restrict(r_primitive(adjacent,0,1),c_primitive(unblocked,0)))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_bot)
n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_primitive(reward,0))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_primitive(picked,0))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_primitive(picked_g,0))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent_g,0,1),c_primitive(reward,0))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent_g,0,1),c_primitive(picked,0))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent_g,0,1),c_primitive(picked_g,0))
n_count(c_and(c_not(c_primitive(reward,0)),c_primitive(at,0)))
n_count(c_and(c_not(c_primitive(picked,0)),c_primitive(at,0)))
n_count(c_and(c_not(c_primitive(picked_g,0)),c_primitive(at,0)))
n_count(c_and(c_not(c_primitive(at,0)),c_primitive(reward,0)))
n_count(c_and(c_not(c_primitive(at,0)),c_primitive(unblocked,0)))
n_count(c_and(c_not(c_primitive(reward,0)),c_primitive(unblocked,0)))
n_count(c_and(c_not(c_primitive(picked,0)),c_primitive(unblocked,0)))
n_count(c_and(c_not(c_primitive(picked_g,0)),c_primitive(unblocked,0)))
n_count(c_and(c_not(c_primitive(at,0)),c_primitive(picked,0)))
n_count(c_and(c_not(c_primitive(at,0)),c_primitive(picked_g,0)))
n_count(c_not(c_and(c_primitive(at,0),c_primitive(reward,0))))
n_count(c_not(c_and(c_primitive(at,0),c_primitive(picked,0))))
n_count(c_not(c_and(c_primitive(at,0),c_primitive(picked_g,0))))
n_count(c_not(c_some(r_primitive(adjacent,0,1),c_primitive(at,0))))
n_count(c_not(c_some(r_primitive(adjacent,0,1),c_primitive(reward,0))))
n_count(c_not(c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))))
n_count(c_not(c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))))
n_count(c_not(c_all(r_primitive(adjacent,0,1),c_primitive(unblocked,0))))
n_count(c_some(r_transitive_closure(r_primitive(adjacent,0,1)),c_primitive(reward,0)))
n_count(c_some(r_transitive_closure(r_primitive(adjacent,0,1)),c_primitive(picked,0)))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_not(c_primitive(unblocked,0)))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent_g,0,1),c_not(c_primitive(reward,0)))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent_g,0,1),c_not(c_primitive(picked,0)))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent_g,0,1),c_not(c_primitive(picked_g,0)))
n_count(c_and(c_primitive(at,0),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0))))
n_count(c_and(c_primitive(at,0),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))))
n_count(c_and(c_all(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_primitive(at,0)))
n_count(c_and(c_primitive(reward,0),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))))
n_count(c_and(c_primitive(unblocked,0),c_some(r_primitive(adjacent,0,1),c_primitive(at,0))))
n_count(c_and(c_primitive(unblocked,0),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0))))
n_count(c_and(c_primitive(unblocked,0),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))))
n_count(c_and(c_primitive(unblocked,0),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))))
n_count(c_and(c_all(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_primitive(unblocked,0)))
n_count(c_and(c_primitive(picked,0),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))))
n_count(c_and(c_primitive(picked,0),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))))
n_count(c_and(c_all(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_primitive(picked,0)))
n_count(c_and(c_primitive(picked_g,0),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))))
n_count(c_and(c_not(c_primitive(at,0)),c_not(c_primitive(reward,0))))
n_count(c_and(c_not(c_primitive(at,0)),c_not(c_primitive(picked,0))))
n_count(c_and(c_not(c_primitive(at,0)),c_not(c_primitive(picked_g,0))))
n_count(c_not(c_and(c_not(c_primitive(reward,0)),c_primitive(at,0))))
n_count(c_not(c_and(c_not(c_primitive(picked,0)),c_primitive(at,0))))
n_count(c_not(c_and(c_not(c_primitive(picked_g,0)),c_primitive(at,0))))
n_count(c_not(c_and(c_not(c_primitive(at,0)),c_primitive(reward,0))))
n_count(c_not(c_and(c_not(c_primitive(at,0)),c_primitive(unblocked,0))))
n_count(c_not(c_and(c_not(c_primitive(reward,0)),c_primitive(unblocked,0))))
n_count(c_not(c_and(c_not(c_primitive(picked,0)),c_primitive(unblocked,0))))
n_count(c_not(c_and(c_not(c_primitive(picked_g,0)),c_primitive(unblocked,0))))
n_count(c_not(c_and(c_not(c_primitive(at,0)),c_primitive(picked,0))))
n_count(c_not(c_and(c_not(c_primitive(at,0)),c_primitive(picked_g,0))))
n_count(c_not(c_some(r_transitive_closure(r_primitive(adjacent,0,1)),c_primitive(reward,0))))
n_count(c_not(c_some(r_transitive_closure(r_primitive(adjacent,0,1)),c_primitive(picked,0))))
n_count(c_some(r_primitive(adjacent,0,1),c_and(c_primitive(at,0),c_primitive(reward,0))))
n_count(c_some(r_primitive(adjacent,0,1),c_and(c_primitive(at,0),c_primitive(picked,0))))
n_count(c_some(r_primitive(adjacent,0,1),c_and(c_primitive(at,0),c_primitive(picked_g,0))))
n_count(c_some(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0))))
n_count(c_some(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))))
n_count(c_some(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))))
n_count(c_all(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0))))
n_count(c_all(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))))
n_count(c_all(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))))
n_count(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(at,0)),c_primitive(reward,0)))
n_count(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(at,0)),c_primitive(picked,0)))
n_count(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(at,0)),c_primitive(picked_g,0)))
n_count(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(reward,0)),c_primitive(at,0)))
n_count(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_primitive(at,0)))
n_count(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(picked,0)),c_primitive(at,0)))
n_count(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(picked_g,0)),c_primitive(at,0)))
n_concept_distance(c_primitive(at,0),r_restrict(r_primitive(adjacent,0,1),c_primitive(reward,0)),c_primitive(reward,0))
n_concept_distance(c_primitive(at,0),r_restrict(r_primitive(adjacent,0,1),c_primitive(reward,0)),c_primitive(picked_g,0))
n_concept_distance(c_primitive(at,0),r_restrict(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_primitive(reward,0))
n_concept_distance(c_primitive(at,0),r_restrict(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_primitive(picked_g,0))
n_concept_distance(c_primitive(at,0),r_restrict(r_primitive(adjacent,0,1),c_primitive(picked,0)),c_primitive(picked_g,0))
n_concept_distance(c_primitive(at,0),r_restrict(r_primitive(adjacent,0,1),c_primitive(picked_g,0)),c_primitive(reward,0))
n_concept_distance(c_primitive(at,0),r_restrict(r_primitive(adjacent,0,1),c_primitive(picked_g,0)),c_primitive(picked_g,0))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0)))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0)))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0)))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_all(r_primitive(adjacent,0,1),c_primitive(unblocked,0)))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent_g,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0)))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent_g,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0)))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent_g,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0)))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent_g,0,1),c_all(r_primitive(adjacent,0,1),c_primitive(unblocked,0)))
n_count(c_and(c_not(c_some(r_primitive(adjacent,0,1),c_primitive(reward,0))),c_primitive(at,0)))
n_count(c_and(c_not(c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))),c_primitive(at,0)))
n_count(c_and(c_not(c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))),c_primitive(at,0)))
n_count(c_and(c_primitive(at,0),c_some(r_transitive_closure(r_primitive(adjacent,0,1)),c_primitive(picked,0))))
n_count(c_and(c_not(c_some(r_primitive(adjacent,0,1),c_primitive(at,0))),c_primitive(reward,0)))
n_count(c_and(c_not(c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))),c_primitive(reward,0)))
n_count(c_and(c_not(c_and(c_primitive(at,0),c_primitive(reward,0))),c_primitive(unblocked,0)))
n_count(c_and(c_not(c_and(c_primitive(at,0),c_primitive(picked,0))),c_primitive(unblocked,0)))
n_count(c_and(c_not(c_and(c_primitive(at,0),c_primitive(picked_g,0))),c_primitive(unblocked,0)))
n_count(c_and(c_not(c_some(r_primitive(adjacent,0,1),c_primitive(at,0))),c_primitive(unblocked,0)))
n_count(c_and(c_not(c_some(r_primitive(adjacent,0,1),c_primitive(reward,0))),c_primitive(unblocked,0)))
n_count(c_and(c_not(c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))),c_primitive(unblocked,0)))
n_count(c_and(c_not(c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))),c_primitive(unblocked,0)))
n_count(c_and(c_primitive(unblocked,0),c_some(r_transitive_closure(r_primitive(adjacent,0,1)),c_primitive(reward,0))))
n_count(c_and(c_primitive(unblocked,0),c_some(r_transitive_closure(r_primitive(adjacent,0,1)),c_primitive(picked,0))))
n_count(c_and(c_not(c_some(r_primitive(adjacent,0,1),c_primitive(reward,0))),c_primitive(picked,0)))
n_count(c_and(c_not(c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))),c_primitive(picked,0)))
n_count(c_and(c_not(c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))),c_primitive(picked,0)))
n_count(c_and(c_not(c_all(r_primitive(adjacent,0,1),c_primitive(unblocked,0))),c_primitive(picked,0)))
n_count(c_and(c_not(c_and(c_primitive(at,0),c_primitive(reward,0))),c_primitive(picked_g,0)))
n_count(c_and(c_not(c_and(c_primitive(at,0),c_primitive(picked,0))),c_primitive(picked_g,0)))
n_count(c_and(c_not(c_some(r_primitive(adjacent,0,1),c_primitive(at,0))),c_primitive(picked_g,0)))
n_count(c_and(c_not(c_some(r_primitive(adjacent,0,1),c_primitive(reward,0))),c_primitive(picked_g,0)))
n_count(c_and(c_not(c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))),c_primitive(picked_g,0)))
n_count(c_and(c_not(c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))),c_primitive(picked_g,0)))
n_count(c_and(c_primitive(picked_g,0),c_some(r_transitive_closure(r_primitive(adjacent,0,1)),c_primitive(picked,0))))
n_count(c_and(c_not(c_primitive(at,0)),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0))))
n_count(c_and(c_not(c_primitive(at,0)),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))))
n_count(c_and(c_not(c_primitive(at,0)),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))))
n_count(c_and(c_all(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_not(c_primitive(at,0))))
n_count(c_and(c_not(c_primitive(reward,0)),c_some(r_primitive(adjacent,0,1),c_primitive(at,0))))
n_count(c_and(c_not(c_primitive(reward,0)),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))))
n_count(c_and(c_not(c_primitive(reward,0)),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))))
n_count(c_and(c_not(c_primitive(unblocked,0)),c_some(r_primitive(adjacent,0,1),c_primitive(at,0))))
n_count(c_and(c_not(c_primitive(picked,0)),c_some(r_primitive(adjacent,0,1),c_primitive(at,0))))
n_count(c_and(c_not(c_primitive(picked,0)),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0))))
n_count(c_and(c_not(c_primitive(picked,0)),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))))
n_count(c_and(c_not(c_primitive(picked,0)),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))))
n_count(c_and(c_all(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_not(c_primitive(picked,0))))
n_count(c_and(c_not(c_primitive(picked_g,0)),c_some(r_primitive(adjacent,0,1),c_primitive(at,0))))
n_count(c_and(c_not(c_primitive(picked_g,0)),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))))
n_count(c_not(c_and(c_primitive(at,0),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0)))))
n_count(c_not(c_and(c_primitive(at,0),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0)))))
n_count(c_not(c_and(c_all(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_primitive(at,0))))
n_count(c_not(c_and(c_primitive(reward,0),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0)))))
n_count(c_not(c_and(c_primitive(unblocked,0),c_some(r_primitive(adjacent,0,1),c_primitive(at,0)))))
n_count(c_not(c_and(c_primitive(unblocked,0),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0)))))
n_count(c_not(c_and(c_primitive(unblocked,0),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0)))))
n_count(c_not(c_and(c_primitive(unblocked,0),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0)))))
n_count(c_not(c_and(c_all(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_primitive(unblocked,0))))
n_count(c_not(c_and(c_primitive(picked,0),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0)))))
n_count(c_not(c_and(c_primitive(picked,0),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0)))))
n_count(c_not(c_and(c_all(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_primitive(picked,0))))
n_count(c_not(c_and(c_primitive(picked_g,0),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0)))))
n_count(c_not(c_and(c_not(c_primitive(at,0)),c_not(c_primitive(reward,0)))))
n_count(c_not(c_and(c_not(c_primitive(at,0)),c_not(c_primitive(picked,0)))))
n_count(c_not(c_and(c_not(c_primitive(at,0)),c_not(c_primitive(picked_g,0)))))
n_count(c_not(c_some(r_primitive(adjacent,0,1),c_and(c_primitive(at,0),c_primitive(reward,0)))))
n_count(c_not(c_some(r_primitive(adjacent,0,1),c_and(c_primitive(at,0),c_primitive(picked,0)))))
n_count(c_not(c_some(r_primitive(adjacent,0,1),c_and(c_primitive(at,0),c_primitive(picked_g,0)))))
n_count(c_not(c_some(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0)))))
n_count(c_not(c_some(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0)))))
n_count(c_not(c_all(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0)))))
n_count(c_not(c_all(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0)))))
n_count(c_not(c_all(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0)))))
n_count(c_not(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(at,0)),c_primitive(reward,0))))
n_count(c_not(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(at,0)),c_primitive(picked,0))))
n_count(c_not(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(at,0)),c_primitive(picked_g,0))))
n_count(c_not(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(reward,0)),c_primitive(at,0))))
n_count(c_not(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_primitive(at,0))))
n_count(c_not(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(picked,0)),c_primitive(at,0))))
n_count(c_not(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(picked_g,0)),c_primitive(at,0))))
n_count(c_some(r_transitive_closure(r_primitive(adjacent,0,1)),c_and(c_primitive(at,0),c_primitive(reward,0))))
n_count(c_some(r_transitive_closure(r_primitive(adjacent,0,1)),c_and(c_primitive(at,0),c_primitive(picked,0))))
n_count(c_some(r_transitive_closure(r_primitive(adjacent,0,1)),c_and(c_primitive(at,0),c_primitive(picked_g,0))))
n_count(c_all(r_primitive(adjacent,0,1),c_and(c_not(c_primitive(at,0)),c_primitive(unblocked,0))))
n_count(c_all(r_primitive(adjacent,0,1),c_and(c_not(c_primitive(reward,0)),c_primitive(unblocked,0))))
n_count(c_all(r_primitive(adjacent,0,1),c_and(c_not(c_primitive(picked,0)),c_primitive(unblocked,0))))
n_count(c_all(r_primitive(adjacent,0,1),c_and(c_not(c_primitive(picked_g,0)),c_primitive(unblocked,0))))
n_count(c_all(r_transitive_closure(r_primitive(adjacent,0,1)),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))))
n_count(c_all(r_transitive_closure(r_primitive(adjacent,0,1)),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))))
n_count(c_all(r_inverse(r_restrict(r_primitive(adjacent,0,1),c_primitive(at,0))),c_primitive(unblocked,0)))
n_count(c_all(r_inverse(r_restrict(r_primitive(adjacent,0,1),c_primitive(picked,0))),c_primitive(unblocked,0)))
n_concept_distance(c_primitive(at,0),r_restrict(r_primitive(adjacent,0,1),c_primitive(reward,0)),c_not(c_primitive(at,0)))
n_concept_distance(c_primitive(at,0),r_restrict(r_primitive(adjacent,0,1),c_primitive(reward,0)),c_not(c_primitive(picked,0)))
n_concept_distance(c_primitive(at,0),r_restrict(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_not(c_primitive(picked,0)))
n_concept_distance(c_primitive(at,0),r_restrict(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_not(c_primitive(picked_g,0)))
n_concept_distance(c_primitive(at,0),r_restrict(r_primitive(adjacent,0,1),c_primitive(picked,0)),c_not(c_primitive(at,0)))
n_concept_distance(c_primitive(at,0),r_restrict(r_primitive(adjacent,0,1),c_primitive(picked,0)),c_not(c_primitive(reward,0)))
n_concept_distance(c_primitive(at,0),r_restrict(r_primitive(adjacent,0,1),c_primitive(picked_g,0)),c_not(c_primitive(at,0)))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_and(c_not(c_primitive(at,0)),c_primitive(reward,0)))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_and(c_not(c_primitive(at,0)),c_primitive(picked_g,0)))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_not(c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_not(c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_some(r_transitive_closure(r_primitive(adjacent,0,1)),c_primitive(reward,0)))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_some(r_transitive_closure(r_primitive(adjacent,0,1)),c_primitive(picked,0)))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent_g,0,1),c_not(c_some(r_primitive(adjacent,0,1),c_primitive(reward,0))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent_g,0,1),c_not(c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent_g,0,1),c_not(c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent_g,0,1),c_not(c_all(r_primitive(adjacent,0,1),c_primitive(unblocked,0))))
n_count(c_and(c_and(c_primitive(reward,0),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))),c_primitive(at,0)))
n_count(c_and(c_and(c_primitive(picked,0),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0))),c_primitive(at,0)))
n_count(c_and(c_and(c_primitive(picked,0),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))),c_primitive(at,0)))
n_count(c_and(c_and(c_primitive(picked,0),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))),c_primitive(at,0)))
n_count(c_and(c_and(c_primitive(picked_g,0),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))),c_primitive(at,0)))
n_count(c_and(c_and(c_primitive(picked_g,0),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))),c_primitive(at,0)))
n_count(c_and(c_primitive(at,0),c_some(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0)))))
n_count(c_and(c_primitive(at,0),c_some(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0)))))
n_count(c_and(c_all(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0))),c_primitive(at,0)))
n_count(c_and(c_all(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))),c_primitive(at,0)))
n_count(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(at,0)),c_primitive(picked,0)),c_primitive(reward,0)))
n_count(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(picked,0)),c_primitive(at,0)),c_primitive(reward,0)))
n_count(c_and(c_and(c_not(c_primitive(at,0)),c_not(c_primitive(reward,0))),c_primitive(unblocked,0)))
n_count(c_and(c_and(c_not(c_primitive(at,0)),c_not(c_primitive(picked,0))),c_primitive(unblocked,0)))
n_count(c_and(c_and(c_not(c_primitive(at,0)),c_not(c_primitive(picked_g,0))),c_primitive(unblocked,0)))
n_count(c_and(c_not(c_and(c_not(c_primitive(reward,0)),c_primitive(at,0))),c_primitive(unblocked,0)))
n_count(c_and(c_not(c_and(c_not(c_primitive(picked,0)),c_primitive(at,0))),c_primitive(unblocked,0)))
n_count(c_and(c_not(c_and(c_not(c_primitive(picked_g,0)),c_primitive(at,0))),c_primitive(unblocked,0)))
n_count(c_and(c_not(c_and(c_not(c_primitive(at,0)),c_primitive(reward,0))),c_primitive(unblocked,0)))
n_count(c_and(c_not(c_and(c_not(c_primitive(at,0)),c_primitive(picked,0))),c_primitive(unblocked,0)))
n_count(c_and(c_not(c_and(c_not(c_primitive(at,0)),c_primitive(picked_g,0))),c_primitive(unblocked,0)))
n_count(c_and(c_not(c_some(r_transitive_closure(r_primitive(adjacent,0,1)),c_primitive(reward,0))),c_primitive(unblocked,0)))
n_count(c_and(c_not(c_some(r_transitive_closure(r_primitive(adjacent,0,1)),c_primitive(picked,0))),c_primitive(unblocked,0)))
n_count(c_and(c_primitive(unblocked,0),c_some(r_primitive(adjacent,0,1),c_and(c_primitive(at,0),c_primitive(reward,0)))))
n_count(c_and(c_primitive(unblocked,0),c_some(r_primitive(adjacent,0,1),c_and(c_primitive(at,0),c_primitive(picked,0)))))
n_count(c_and(c_primitive(unblocked,0),c_some(r_primitive(adjacent,0,1),c_and(c_primitive(at,0),c_primitive(picked_g,0)))))
n_count(c_and(c_primitive(unblocked,0),c_some(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(at,0)))))
n_count(c_and(c_primitive(unblocked,0),c_some(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0)))))
n_count(c_and(c_primitive(unblocked,0),c_some(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0)))))
n_count(c_and(c_all(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))),c_primitive(unblocked,0)))
n_count(c_and(c_all(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))),c_primitive(unblocked,0)))
n_count(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(at,0)),c_primitive(reward,0)),c_primitive(unblocked,0)))
n_count(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(at,0)),c_primitive(picked,0)),c_primitive(unblocked,0)))
n_count(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(at,0)),c_primitive(picked_g,0)),c_primitive(unblocked,0)))
n_count(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(reward,0)),c_primitive(at,0)),c_primitive(unblocked,0)))
n_count(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(picked,0)),c_primitive(at,0)),c_primitive(unblocked,0)))
n_count(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(picked_g,0)),c_primitive(at,0)),c_primitive(unblocked,0)))
n_count(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(at,0)),c_primitive(reward,0)),c_primitive(picked,0)))
n_count(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(at,0)),c_primitive(picked_g,0)),c_primitive(picked,0)))
n_count(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(reward,0)),c_primitive(at,0)),c_primitive(picked,0)))
n_count(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(picked_g,0)),c_primitive(at,0)),c_primitive(picked,0)))
n_count(c_and(c_not(c_and(c_not(c_primitive(at,0)),c_primitive(reward,0))),c_primitive(picked_g,0)))
n_count(c_and(c_not(c_and(c_not(c_primitive(at,0)),c_primitive(picked,0))),c_primitive(picked_g,0)))
n_count(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(at,0)),c_primitive(reward,0)),c_primitive(picked_g,0)))
n_count(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(at,0)),c_primitive(picked,0)),c_primitive(picked_g,0)))
n_count(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(at,0)),c_primitive(picked_g,0)),c_primitive(picked_g,0)))
n_count(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(reward,0)),c_primitive(at,0)),c_primitive(picked_g,0)))
n_count(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(picked_g,0)),c_primitive(at,0)),c_primitive(picked_g,0)))
n_count(c_and(c_not(c_primitive(at,0)),c_not(c_some(r_primitive(adjacent,0,1),c_primitive(at,0)))))
n_count(c_and(c_not(c_primitive(at,0)),c_not(c_some(r_primitive(adjacent,0,1),c_primitive(reward,0)))))
n_count(c_and(c_not(c_primitive(at,0)),c_not(c_some(r_primitive(adjacent,0,1),c_primitive(picked,0)))))
n_count(c_and(c_not(c_primitive(at,0)),c_not(c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0)))))
n_count(c_and(c_not(c_all(r_primitive(adjacent,0,1),c_primitive(unblocked,0))),c_not(c_primitive(at,0))))
n_count(c_and(c_not(c_primitive(at,0)),c_some(r_transitive_closure(r_primitive(adjacent,0,1)),c_primitive(reward,0))))
n_count(c_and(c_not(c_primitive(at,0)),c_some(r_transitive_closure(r_primitive(adjacent,0,1)),c_primitive(picked,0))))
n_count(c_and(c_not(c_and(c_primitive(at,0),c_primitive(picked,0))),c_not(c_primitive(reward,0))))
n_count(c_and(c_not(c_primitive(reward,0)),c_not(c_some(r_primitive(adjacent,0,1),c_primitive(at,0)))))
n_count(c_and(c_not(c_primitive(reward,0)),c_not(c_some(r_primitive(adjacent,0,1),c_primitive(reward,0)))))
n_count(c_and(c_not(c_primitive(reward,0)),c_not(c_some(r_primitive(adjacent,0,1),c_primitive(picked,0)))))
n_count(c_and(c_not(c_primitive(reward,0)),c_not(c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0)))))
n_count(c_and(c_not(c_all(r_primitive(adjacent,0,1),c_primitive(unblocked,0))),c_not(c_primitive(reward,0))))
n_count(c_and(c_not(c_primitive(reward,0)),c_some(r_transitive_closure(r_primitive(adjacent,0,1)),c_primitive(picked,0))))
n_count(c_and(c_not(c_primitive(unblocked,0)),c_not(c_some(r_primitive(adjacent,0,1),c_primitive(at,0)))))
n_count(c_and(c_not(c_primitive(unblocked,0)),c_not(c_some(r_primitive(adjacent,0,1),c_primitive(reward,0)))))
n_count(c_and(c_not(c_primitive(unblocked,0)),c_not(c_some(r_primitive(adjacent,0,1),c_primitive(picked,0)))))
n_count(c_and(c_not(c_primitive(unblocked,0)),c_some(r_transitive_closure(r_primitive(adjacent,0,1)),c_primitive(picked,0))))
n_count(c_and(c_not(c_and(c_primitive(at,0),c_primitive(reward,0))),c_not(c_primitive(picked,0))))
n_count(c_and(c_not(c_primitive(picked,0)),c_not(c_some(r_primitive(adjacent,0,1),c_primitive(at,0)))))
n_count(c_and(c_not(c_primitive(picked,0)),c_not(c_some(r_primitive(adjacent,0,1),c_primitive(reward,0)))))
n_count(c_and(c_not(c_primitive(picked,0)),c_not(c_some(r_primitive(adjacent,0,1),c_primitive(picked,0)))))
n_count(c_and(c_not(c_primitive(picked,0)),c_not(c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0)))))
n_count(c_and(c_not(c_all(r_primitive(adjacent,0,1),c_primitive(unblocked,0))),c_not(c_primitive(picked,0))))
n_count(c_and(c_not(c_primitive(picked,0)),c_some(r_transitive_closure(r_primitive(adjacent,0,1)),c_primitive(reward,0))))
n_count(c_and(c_not(c_primitive(picked,0)),c_some(r_transitive_closure(r_primitive(adjacent,0,1)),c_primitive(picked,0))))
n_count(c_and(c_not(c_primitive(picked_g,0)),c_not(c_some(r_primitive(adjacent,0,1),c_primitive(at,0)))))
n_count(c_and(c_not(c_primitive(picked_g,0)),c_not(c_some(r_primitive(adjacent,0,1),c_primitive(reward,0)))))
n_count(c_and(c_not(c_primitive(picked_g,0)),c_not(c_some(r_primitive(adjacent,0,1),c_primitive(picked,0)))))
n_count(c_and(c_not(c_primitive(picked_g,0)),c_some(r_transitive_closure(r_primitive(adjacent,0,1)),c_primitive(reward,0))))
n_count(c_and(c_not(c_primitive(picked_g,0)),c_some(r_transitive_closure(r_primitive(adjacent,0,1)),c_primitive(picked,0))))
n_count(c_and(c_some(r_primitive(adjacent,0,1),c_primitive(at,0)),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0))))
n_count(c_and(c_some(r_primitive(adjacent,0,1),c_primitive(at,0)),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))))
n_count(c_and(c_all(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_some(r_primitive(adjacent,0,1),c_primitive(at,0))))
n_count(c_and(c_all(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))))
n_count(c_not(c_and(c_not(c_some(r_primitive(adjacent,0,1),c_primitive(reward,0))),c_primitive(at,0))))
n_count(c_not(c_and(c_not(c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))),c_primitive(at,0))))
n_count(c_not(c_and(c_not(c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))),c_primitive(at,0))))
n_count(c_not(c_and(c_primitive(at,0),c_some(r_transitive_closure(r_primitive(adjacent,0,1)),c_primitive(picked,0)))))
n_count(c_not(c_and(c_not(c_some(r_primitive(adjacent,0,1),c_primitive(at,0))),c_primitive(reward,0))))
n_count(c_not(c_and(c_not(c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))),c_primitive(reward,0))))
n_count(c_not(c_and(c_not(c_and(c_primitive(at,0),c_primitive(reward,0))),c_primitive(unblocked,0))))
n_count(c_not(c_and(c_not(c_and(c_primitive(at,0),c_primitive(picked,0))),c_primitive(unblocked,0))))
n_count(c_not(c_and(c_not(c_and(c_primitive(at,0),c_primitive(picked_g,0))),c_primitive(unblocked,0))))
n_count(c_not(c_and(c_not(c_some(r_primitive(adjacent,0,1),c_primitive(at,0))),c_primitive(unblocked,0))))
n_count(c_not(c_and(c_not(c_some(r_primitive(adjacent,0,1),c_primitive(reward,0))),c_primitive(unblocked,0))))
n_count(c_not(c_and(c_not(c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))),c_primitive(unblocked,0))))
n_count(c_not(c_and(c_primitive(unblocked,0),c_some(r_transitive_closure(r_primitive(adjacent,0,1)),c_primitive(reward,0)))))
n_count(c_not(c_and(c_primitive(unblocked,0),c_some(r_transitive_closure(r_primitive(adjacent,0,1)),c_primitive(picked,0)))))
n_count(c_not(c_and(c_not(c_some(r_primitive(adjacent,0,1),c_primitive(reward,0))),c_primitive(picked,0))))
n_count(c_not(c_and(c_not(c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))),c_primitive(picked,0))))
n_count(c_not(c_and(c_not(c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))),c_primitive(picked,0))))
n_count(c_not(c_and(c_not(c_and(c_primitive(at,0),c_primitive(reward,0))),c_primitive(picked_g,0))))
n_count(c_not(c_and(c_not(c_and(c_primitive(at,0),c_primitive(picked,0))),c_primitive(picked_g,0))))
n_count(c_not(c_and(c_not(c_some(r_primitive(adjacent,0,1),c_primitive(at,0))),c_primitive(picked_g,0))))
n_count(c_not(c_and(c_not(c_some(r_primitive(adjacent,0,1),c_primitive(reward,0))),c_primitive(picked_g,0))))
n_count(c_not(c_and(c_not(c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))),c_primitive(picked_g,0))))
n_count(c_not(c_and(c_not(c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))),c_primitive(picked_g,0))))
n_count(c_not(c_and(c_primitive(picked_g,0),c_some(r_transitive_closure(r_primitive(adjacent,0,1)),c_primitive(picked,0)))))
n_count(c_not(c_and(c_not(c_primitive(at,0)),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0)))))
n_count(c_not(c_and(c_not(c_primitive(at,0)),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0)))))
n_count(c_not(c_and(c_not(c_primitive(at,0)),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0)))))
n_count(c_not(c_and(c_all(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_not(c_primitive(at,0)))))
n_count(c_not(c_and(c_not(c_primitive(reward,0)),c_some(r_primitive(adjacent,0,1),c_primitive(at,0)))))
n_count(c_not(c_and(c_not(c_primitive(reward,0)),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0)))))
n_count(c_not(c_and(c_not(c_primitive(reward,0)),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0)))))
n_count(c_not(c_and(c_not(c_primitive(unblocked,0)),c_some(r_primitive(adjacent,0,1),c_primitive(at,0)))))
n_count(c_not(c_and(c_not(c_primitive(picked,0)),c_some(r_primitive(adjacent,0,1),c_primitive(at,0)))))
n_count(c_not(c_and(c_not(c_primitive(picked,0)),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0)))))
n_count(c_not(c_and(c_not(c_primitive(picked,0)),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0)))))
n_count(c_not(c_and(c_not(c_primitive(picked,0)),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0)))))
n_count(c_not(c_and(c_not(c_primitive(picked_g,0)),c_some(r_primitive(adjacent,0,1),c_primitive(at,0)))))
n_count(c_not(c_and(c_not(c_primitive(picked_g,0)),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0)))))
n_count(c_not(c_some(r_transitive_closure(r_primitive(adjacent,0,1)),c_and(c_primitive(at,0),c_primitive(reward,0)))))
n_count(c_not(c_some(r_transitive_closure(r_primitive(adjacent,0,1)),c_and(c_primitive(at,0),c_primitive(picked,0)))))
n_count(c_not(c_some(r_transitive_closure(r_primitive(adjacent,0,1)),c_and(c_primitive(at,0),c_primitive(picked_g,0)))))
n_count(c_not(c_all(r_primitive(adjacent,0,1),c_and(c_not(c_primitive(at,0)),c_primitive(unblocked,0)))))
n_count(c_not(c_all(r_primitive(adjacent,0,1),c_and(c_not(c_primitive(reward,0)),c_primitive(unblocked,0)))))
n_count(c_not(c_all(r_primitive(adjacent,0,1),c_and(c_not(c_primitive(picked,0)),c_primitive(unblocked,0)))))
n_count(c_not(c_all(r_primitive(adjacent,0,1),c_and(c_not(c_primitive(picked_g,0)),c_primitive(unblocked,0)))))
n_count(c_not(c_all(r_transitive_closure(r_primitive(adjacent,0,1)),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0)))))
n_count(c_not(c_all(r_transitive_closure(r_primitive(adjacent,0,1)),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0)))))
n_count(c_some(r_primitive(adjacent,0,1),c_and(c_primitive(at,0),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0)))))
n_count(c_some(r_primitive(adjacent,0,1),c_and(c_primitive(at,0),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0)))))
n_count(c_some(r_primitive(adjacent,0,1),c_and(c_all(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_primitive(at,0))))
n_count(c_some(r_primitive(adjacent,0,1),c_and(c_primitive(reward,0),c_some(r_primitive(adjacent,0,1),c_primitive(at,0)))))
n_count(c_some(r_primitive(adjacent,0,1),c_and(c_primitive(reward,0),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0)))))
n_count(c_some(r_primitive(adjacent,0,1),c_and(c_primitive(unblocked,0),c_some(r_primitive(adjacent,0,1),c_primitive(at,0)))))
n_count(c_some(r_primitive(adjacent,0,1),c_and(c_primitive(picked,0),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0)))))
n_count(c_some(r_primitive(adjacent,0,1),c_and(c_primitive(picked_g,0),c_some(r_primitive(adjacent,0,1),c_primitive(at,0)))))
n_count(c_some(r_primitive(adjacent,0,1),c_and(c_not(c_primitive(at,0)),c_not(c_primitive(reward,0)))))
n_count(c_some(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_and(c_primitive(at,0),c_primitive(reward,0)))))
n_count(c_some(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_and(c_primitive(at,0),c_primitive(picked,0)))))
n_count(c_some(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_and(c_primitive(at,0),c_primitive(picked_g,0)))))
n_count(c_some(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(at,0)))))
n_count(c_some(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0)))))
n_count(c_some(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0)))))
n_count(c_some(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0)))))
n_count(c_some(r_primitive(adjacent,0,1),c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(at,0)),c_primitive(reward,0))))
n_count(c_some(r_primitive(adjacent,0,1),c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(at,0)),c_primitive(picked,0))))
n_count(c_some(r_primitive(adjacent,0,1),c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(at,0)),c_primitive(picked_g,0))))
n_count(c_some(r_primitive(adjacent,0,1),c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(reward,0)),c_primitive(at,0))))
n_count(c_some(r_primitive(adjacent,0,1),c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_primitive(at,0))))
n_count(c_some(r_primitive(adjacent,0,1),c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(picked_g,0)),c_primitive(at,0))))
n_count(c_some(r_transitive_closure(r_primitive(adjacent,0,1)),c_and(c_not(c_primitive(at,0)),c_primitive(reward,0))))
n_count(c_some(r_transitive_closure(r_primitive(adjacent,0,1)),c_and(c_not(c_primitive(at,0)),c_primitive(picked,0))))
n_count(c_some(r_transitive_closure(r_primitive(adjacent,0,1)),c_and(c_not(c_primitive(at,0)),c_primitive(picked_g,0))))
n_count(c_all(r_primitive(adjacent,0,1),c_and(c_primitive(unblocked,0),c_some(r_primitive(adjacent,0,1),c_primitive(at,0)))))
n_count(c_all(r_primitive(adjacent,0,1),c_and(c_not(c_primitive(at,0)),c_not(c_primitive(reward,0)))))
n_count(c_all(r_primitive(adjacent,0,1),c_and(c_not(c_primitive(at,0)),c_not(c_primitive(picked,0)))))
n_count(c_all(r_primitive(adjacent,0,1),c_and(c_not(c_primitive(at,0)),c_not(c_primitive(picked_g,0)))))
n_count(c_all(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_and(c_primitive(at,0),c_primitive(reward,0)))))
n_count(c_all(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_and(c_primitive(at,0),c_primitive(picked,0)))))
n_count(c_all(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_and(c_primitive(at,0),c_primitive(picked_g,0)))))
n_count(c_all(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(at,0)))))
n_count(c_all(r_primitive(adjacent,0,1),c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(at,0)),c_primitive(reward,0))))
n_count(c_all(r_primitive(adjacent,0,1),c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(at,0)),c_primitive(picked,0))))
n_count(c_all(r_primitive(adjacent,0,1),c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(at,0)),c_primitive(picked_g,0))))
n_count(c_all(r_primitive(adjacent,0,1),c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(reward,0)),c_primitive(at,0))))
n_count(c_all(r_primitive(adjacent,0,1),c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_primitive(at,0))))
n_count(c_all(r_primitive(adjacent,0,1),c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(picked_g,0)),c_primitive(at,0))))
n_count(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(at,0)),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0))))
n_count(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(at,0)),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))))
n_count(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(at,0)),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))))
n_count(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(at,0)),c_all(r_primitive(adjacent,0,1),c_primitive(unblocked,0))))
n_count(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(reward,0)),c_some(r_primitive(adjacent,0,1),c_primitive(at,0))))
n_count(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(reward,0)),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))))
n_count(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_some(r_primitive(adjacent,0,1),c_primitive(at,0))))
n_count(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0))))
n_count(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))))
n_count(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))))
n_count(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(picked,0)),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0))))
n_count(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(picked,0)),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))))
n_count(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(picked,0)),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))))
n_count(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(picked,0)),c_all(r_primitive(adjacent,0,1),c_primitive(unblocked,0))))
n_count(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(picked_g,0)),c_and(c_primitive(at,0),c_primitive(reward,0))))
n_count(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(picked_g,0)),c_and(c_primitive(at,0),c_primitive(picked,0))))
n_count(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(picked_g,0)),c_some(r_primitive(adjacent,0,1),c_primitive(at,0))))
n_count(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(picked_g,0)),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0))))
n_count(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(picked_g,0)),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))))
n_count(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(picked_g,0)),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))))
n_concept_distance(c_primitive(at,0),r_restrict(r_primitive(adjacent,0,1),c_primitive(reward,0)),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0)))
n_concept_distance(c_primitive(at,0),r_restrict(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0)))
n_concept_distance(c_primitive(at,0),r_restrict(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0)))
n_concept_distance(c_primitive(at,0),r_restrict(r_primitive(adjacent,0,1),c_primitive(picked,0)),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0)))
n_concept_distance(c_primitive(at,0),r_restrict(r_primitive(adjacent,0,1),c_primitive(picked,0)),c_all(r_primitive(adjacent,0,1),c_primitive(unblocked,0)))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_and(c_primitive(reward,0),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_and(c_primitive(picked,0),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_and(c_primitive(picked,0),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_and(c_primitive(picked,0),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_and(c_all(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_primitive(picked,0)))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_and(c_primitive(picked_g,0),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_and(c_primitive(picked_g,0),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_not(c_and(c_not(c_primitive(reward,0)),c_primitive(unblocked,0))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_not(c_and(c_not(c_primitive(picked,0)),c_primitive(unblocked,0))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_not(c_and(c_not(c_primitive(picked_g,0)),c_primitive(unblocked,0))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_not(c_some(r_transitive_closure(r_primitive(adjacent,0,1)),c_primitive(reward,0))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_not(c_some(r_transitive_closure(r_primitive(adjacent,0,1)),c_primitive(picked,0))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_and(c_primitive(at,0),c_primitive(reward,0))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_and(c_primitive(at,0),c_primitive(picked,0))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_and(c_primitive(at,0),c_primitive(picked_g,0))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_all(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_all(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_primitive(at,0)))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(picked_g,0)),c_primitive(at,0)))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent_g,0,1),c_and(c_primitive(reward,0),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent_g,0,1),c_and(c_primitive(picked,0),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent_g,0,1),c_and(c_primitive(picked,0),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent_g,0,1),c_and(c_primitive(picked_g,0),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent_g,0,1),c_and(c_primitive(picked_g,0),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent_g,0,1),c_some(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent_g,0,1),c_some(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent_g,0,1),c_all(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent_g,0,1),c_all(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))))
n_count(c_and(c_and(c_not(c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))),c_primitive(reward,0)),c_primitive(at,0)))
n_count(c_and(c_and(c_not(c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))),c_primitive(picked,0)),c_primitive(at,0)))
n_count(c_and(c_and(c_not(c_some(r_primitive(adjacent,0,1),c_primitive(reward,0))),c_primitive(picked_g,0)),c_primitive(at,0)))
n_count(c_and(c_and(c_not(c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))),c_primitive(picked_g,0)),c_primitive(at,0)))
n_count(c_and(c_and(c_not(c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))),c_primitive(picked_g,0)),c_primitive(at,0)))
n_count(c_and(c_and(c_primitive(picked_g,0),c_some(r_transitive_closure(r_primitive(adjacent,0,1)),c_primitive(reward,0))),c_primitive(at,0)))
n_count(c_and(c_and(c_not(c_primitive(reward,0)),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))),c_primitive(at,0)))
n_count(c_and(c_and(c_not(c_primitive(reward,0)),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))),c_primitive(at,0)))
n_count(c_and(c_and(c_not(c_primitive(picked,0)),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0))),c_primitive(at,0)))
n_count(c_and(c_and(c_not(c_primitive(picked,0)),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))),c_primitive(at,0)))
n_count(c_and(c_and(c_not(c_primitive(picked,0)),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))),c_primitive(at,0)))
n_count(c_and(c_and(c_not(c_primitive(picked_g,0)),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))),c_primitive(at,0)))
n_count(c_and(c_and(c_not(c_primitive(picked_g,0)),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))),c_primitive(at,0)))
n_count(c_and(c_not(c_and(c_primitive(reward,0),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0)))),c_primitive(at,0)))
n_count(c_and(c_not(c_and(c_primitive(picked,0),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0)))),c_primitive(at,0)))
n_count(c_and(c_not(c_and(c_primitive(picked,0),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0)))),c_primitive(at,0)))
n_count(c_and(c_not(c_and(c_primitive(picked_g,0),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0)))),c_primitive(at,0)))
n_count(c_and(c_not(c_and(c_primitive(picked_g,0),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0)))),c_primitive(at,0)))
n_count(c_and(c_not(c_some(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0)))),c_primitive(at,0)))
n_count(c_and(c_not(c_all(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0)))),c_primitive(at,0)))
n_count(c_and(c_not(c_all(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0)))),c_primitive(at,0)))
n_count(c_and(c_all(r_primitive(adjacent,0,1),c_and(c_not(c_primitive(reward,0)),c_primitive(unblocked,0))),c_primitive(at,0)))
n_count(c_and(c_and(c_not(c_primitive(at,0)),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))),c_primitive(reward,0)))
n_count(c_and(c_not(c_and(c_primitive(at,0),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0)))),c_primitive(reward,0)))
n_count(c_and(c_not(c_all(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(at,0)))),c_primitive(reward,0)))
n_count(c_and(c_and(c_not(c_primitive(at,0)),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0))),c_primitive(unblocked,0)))
n_count(c_and(c_and(c_not(c_primitive(at,0)),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))),c_primitive(unblocked,0)))
n_count(c_and(c_and(c_not(c_primitive(at,0)),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))),c_primitive(unblocked,0)))
n_count(c_and(c_and(c_all(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_not(c_primitive(at,0))),c_primitive(unblocked,0)))
n_count(c_and(c_and(c_not(c_primitive(reward,0)),c_some(r_primitive(adjacent,0,1),c_primitive(at,0))),c_primitive(unblocked,0)))
n_count(c_and(c_and(c_not(c_primitive(reward,0)),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))),c_primitive(unblocked,0)))
n_count(c_and(c_and(c_not(c_primitive(reward,0)),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))),c_primitive(unblocked,0)))
n_count(c_and(c_and(c_not(c_primitive(picked,0)),c_some(r_primitive(adjacent,0,1),c_primitive(at,0))),c_primitive(unblocked,0)))
n_count(c_and(c_and(c_not(c_primitive(picked,0)),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0))),c_primitive(unblocked,0)))
n_count(c_and(c_and(c_not(c_primitive(picked,0)),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))),c_primitive(unblocked,0)))
n_count(c_and(c_and(c_not(c_primitive(picked,0)),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))),c_primitive(unblocked,0)))
n_count(c_and(c_and(c_all(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_not(c_primitive(picked,0))),c_primitive(unblocked,0)))
n_count(c_and(c_and(c_not(c_primitive(picked_g,0)),c_some(r_primitive(adjacent,0,1),c_primitive(at,0))),c_primitive(unblocked,0)))
n_count(c_and(c_not(c_and(c_primitive(at,0),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0)))),c_primitive(unblocked,0)))
n_count(c_and(c_not(c_and(c_primitive(at,0),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0)))),c_primitive(unblocked,0)))
n_count(c_and(c_not(c_and(c_all(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_primitive(at,0))),c_primitive(unblocked,0)))
n_count(c_and(c_not(c_and(c_primitive(reward,0),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0)))),c_primitive(unblocked,0)))
n_count(c_and(c_not(c_and(c_primitive(picked,0),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0)))),c_primitive(unblocked,0)))
n_count(c_and(c_not(c_and(c_primitive(picked,0),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0)))),c_primitive(unblocked,0)))
n_count(c_and(c_not(c_and(c_all(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_primitive(picked,0))),c_primitive(unblocked,0)))
n_count(c_and(c_not(c_some(r_primitive(adjacent,0,1),c_and(c_primitive(at,0),c_primitive(reward,0)))),c_primitive(unblocked,0)))
n_count(c_and(c_not(c_some(r_primitive(adjacent,0,1),c_and(c_primitive(at,0),c_primitive(picked,0)))),c_primitive(unblocked,0)))
n_count(c_and(c_not(c_some(r_primitive(adjacent,0,1),c_and(c_primitive(at,0),c_primitive(picked_g,0)))),c_primitive(unblocked,0)))
n_count(c_and(c_not(c_some(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(at,0)))),c_primitive(unblocked,0)))
n_count(c_and(c_not(c_some(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0)))),c_primitive(unblocked,0)))
n_count(c_and(c_not(c_some(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0)))),c_primitive(unblocked,0)))
n_count(c_and(c_not(c_all(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0)))),c_primitive(unblocked,0)))
n_count(c_and(c_not(c_all(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0)))),c_primitive(unblocked,0)))
n_count(c_and(c_not(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(at,0)),c_primitive(reward,0))),c_primitive(unblocked,0)))
n_count(c_and(c_not(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(at,0)),c_primitive(picked,0))),c_primitive(unblocked,0)))
n_count(c_and(c_not(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(at,0)),c_primitive(picked_g,0))),c_primitive(unblocked,0)))
n_count(c_and(c_not(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(reward,0)),c_primitive(at,0))),c_primitive(unblocked,0)))
n_count(c_and(c_not(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_primitive(at,0))),c_primitive(unblocked,0)))
n_count(c_and(c_not(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(picked_g,0)),c_primitive(at,0))),c_primitive(unblocked,0)))
n_count(c_and(c_primitive(unblocked,0),c_some(r_transitive_closure(r_primitive(adjacent,0,1)),c_and(c_primitive(at,0),c_primitive(reward,0)))))
n_count(c_and(c_primitive(unblocked,0),c_some(r_transitive_closure(r_primitive(adjacent,0,1)),c_and(c_primitive(at,0),c_primitive(picked,0)))))
n_count(c_and(c_primitive(unblocked,0),c_some(r_transitive_closure(r_primitive(adjacent,0,1)),c_and(c_primitive(at,0),c_primitive(picked_g,0)))))
n_count(c_and(c_all(r_primitive(adjacent,0,1),c_and(c_not(c_primitive(at,0)),c_primitive(unblocked,0))),c_primitive(unblocked,0)))
n_count(c_and(c_all(r_primitive(adjacent,0,1),c_and(c_not(c_primitive(reward,0)),c_primitive(unblocked,0))),c_primitive(unblocked,0)))
n_count(c_and(c_all(r_primitive(adjacent,0,1),c_and(c_not(c_primitive(picked,0)),c_primitive(unblocked,0))),c_primitive(unblocked,0)))
n_count(c_and(c_all(r_transitive_closure(r_primitive(adjacent,0,1)),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))),c_primitive(unblocked,0)))
n_count(c_and(c_all(r_transitive_closure(r_primitive(adjacent,0,1)),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))),c_primitive(unblocked,0)))
n_count(c_and(c_all(r_inverse(r_restrict(r_primitive(adjacent,0,1),c_primitive(at,0))),c_primitive(unblocked,0)),c_primitive(unblocked,0)))
n_count(c_and(c_all(r_inverse(r_restrict(r_primitive(adjacent,0,1),c_primitive(picked,0))),c_primitive(unblocked,0)),c_primitive(unblocked,0)))
n_count(c_and(c_not(c_and(c_primitive(at,0),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0)))),c_primitive(picked,0)))
n_count(c_and(c_not(c_and(c_primitive(at,0),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0)))),c_primitive(picked,0)))
n_count(c_and(c_not(c_some(r_primitive(adjacent,0,1),c_and(c_primitive(at,0),c_primitive(reward,0)))),c_primitive(picked,0)))
n_count(c_and(c_not(c_some(r_primitive(adjacent,0,1),c_and(c_primitive(at,0),c_primitive(picked_g,0)))),c_primitive(picked,0)))
n_count(c_and(c_not(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(picked_g,0)),c_primitive(at,0))),c_primitive(picked,0)))
n_count(c_and(c_and(c_not(c_primitive(at,0)),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))),c_primitive(picked_g,0)))
n_count(c_and(c_not(c_and(c_primitive(at,0),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0)))),c_primitive(picked_g,0)))
n_count(c_and(c_not(c_and(c_primitive(at,0),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0)))),c_primitive(picked_g,0)))
n_count(c_and(c_not(c_and(c_primitive(reward,0),c_some(r_primitive(adjacent,0,1),c_primitive(at,0)))),c_primitive(picked_g,0)))
n_count(c_and(c_not(c_and(c_primitive(picked,0),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0)))),c_primitive(picked_g,0)))
n_count(c_and(c_not(c_some(r_primitive(adjacent,0,1),c_and(c_primitive(at,0),c_primitive(reward,0)))),c_primitive(picked_g,0)))
n_count(c_and(c_not(c_some(r_primitive(adjacent,0,1),c_and(c_primitive(at,0),c_primitive(picked,0)))),c_primitive(picked_g,0)))
n_count(c_and(c_not(c_some(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(at,0)))),c_primitive(picked_g,0)))
n_count(c_and(c_not(c_all(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(at,0)))),c_primitive(picked_g,0)))
n_count(c_and(c_all(r_inverse(r_restrict(r_primitive(adjacent,0,1),c_primitive(at,0))),c_primitive(unblocked,0)),c_primitive(picked_g,0)))
n_count(c_and(c_all(r_inverse(r_restrict(r_primitive(adjacent,0,1),c_primitive(picked,0))),c_primitive(unblocked,0)),c_primitive(picked_g,0)))
n_count(c_and(c_not(c_and(c_not(c_primitive(reward,0)),c_primitive(unblocked,0))),c_not(c_primitive(at,0))))
n_count(c_and(c_not(c_and(c_not(c_primitive(picked,0)),c_primitive(unblocked,0))),c_not(c_primitive(at,0))))
n_count(c_and(c_not(c_and(c_not(c_primitive(picked_g,0)),c_primitive(unblocked,0))),c_not(c_primitive(at,0))))
n_count(c_and(c_not(c_primitive(at,0)),c_not(c_some(r_transitive_closure(r_primitive(adjacent,0,1)),c_primitive(reward,0)))))
n_count(c_and(c_not(c_primitive(at,0)),c_not(c_some(r_transitive_closure(r_primitive(adjacent,0,1)),c_primitive(picked,0)))))
n_count(c_and(c_not(c_primitive(at,0)),c_some(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0)))))
n_count(c_and(c_not(c_primitive(at,0)),c_some(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0)))))
n_count(c_and(c_not(c_primitive(at,0)),c_some(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0)))))
n_count(c_and(c_all(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0))),c_not(c_primitive(at,0))))
n_count(c_and(c_all(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))),c_not(c_primitive(at,0))))
n_count(c_and(c_all(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))),c_not(c_primitive(at,0))))
n_count(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(at,0)),c_primitive(reward,0)),c_not(c_primitive(at,0))))
n_count(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(at,0)),c_primitive(picked,0)),c_not(c_primitive(at,0))))
n_count(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(at,0)),c_primitive(picked_g,0)),c_not(c_primitive(at,0))))
n_count(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(reward,0)),c_primitive(at,0)),c_not(c_primitive(at,0))))
n_count(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_primitive(picked,0)),c_not(c_primitive(at,0))))
n_count(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(picked_g,0)),c_primitive(at,0)),c_not(c_primitive(at,0))))
n_count(c_and(c_not(c_and(c_not(c_primitive(picked,0)),c_primitive(at,0))),c_not(c_primitive(reward,0))))
n_count(c_and(c_not(c_and(c_not(c_primitive(at,0)),c_primitive(unblocked,0))),c_not(c_primitive(reward,0))))
n_count(c_and(c_not(c_primitive(reward,0)),c_some(r_primitive(adjacent,0,1),c_and(c_primitive(at,0),c_primitive(picked,0)))))
n_count(c_and(c_not(c_primitive(reward,0)),c_some(r_primitive(adjacent,0,1),c_and(c_primitive(at,0),c_primitive(picked_g,0)))))
n_count(c_and(c_not(c_primitive(reward,0)),c_some(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(at,0)))))
n_count(c_and(c_not(c_primitive(reward,0)),c_some(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0)))))
n_count(c_and(c_all(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(at,0))),c_not(c_primitive(reward,0))))
n_count(c_and(c_all(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))),c_not(c_primitive(reward,0))))
n_count(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(at,0)),c_primitive(reward,0)),c_not(c_primitive(reward,0))))
n_count(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(at,0)),c_primitive(picked,0)),c_not(c_primitive(reward,0))))
n_count(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(at,0)),c_primitive(picked_g,0)),c_not(c_primitive(reward,0))))
n_count(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(reward,0)),c_primitive(at,0)),c_not(c_primitive(reward,0))))
n_count(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_primitive(at,0)),c_not(c_primitive(reward,0))))
n_count(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(picked,0)),c_primitive(at,0)),c_not(c_primitive(reward,0))))
n_count(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(picked_g,0)),c_primitive(at,0)),c_not(c_primitive(reward,0))))
n_count(c_and(c_not(c_primitive(unblocked,0)),c_not(c_some(r_transitive_closure(r_primitive(adjacent,0,1)),c_primitive(reward,0)))))
n_count(c_and(c_not(c_primitive(unblocked,0)),c_some(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(at,0)))))
n_count(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(at,0)),c_primitive(reward,0)),c_not(c_primitive(unblocked,0))))
n_count(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(at,0)),c_primitive(picked,0)),c_not(c_primitive(unblocked,0))))
n_count(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(at,0)),c_primitive(picked_g,0)),c_not(c_primitive(unblocked,0))))
n_count(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(reward,0)),c_primitive(at,0)),c_not(c_primitive(unblocked,0))))
n_count(c_and(c_not(c_and(c_not(c_primitive(reward,0)),c_primitive(at,0))),c_not(c_primitive(picked,0))))
n_count(c_and(c_not(c_and(c_not(c_primitive(at,0)),c_primitive(unblocked,0))),c_not(c_primitive(picked,0))))
n_count(c_and(c_not(c_primitive(picked,0)),c_not(c_some(r_transitive_closure(r_primitive(adjacent,0,1)),c_primitive(reward,0)))))
n_count(c_and(c_not(c_primitive(picked,0)),c_some(r_primitive(adjacent,0,1),c_and(c_primitive(at,0),c_primitive(reward,0)))))
n_count(c_and(c_not(c_primitive(picked,0)),c_some(r_primitive(adjacent,0,1),c_and(c_primitive(at,0),c_primitive(picked,0)))))
n_count(c_and(c_not(c_primitive(picked,0)),c_some(r_primitive(adjacent,0,1),c_and(c_primitive(at,0),c_primitive(picked_g,0)))))
n_count(c_and(c_not(c_primitive(picked,0)),c_some(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(at,0)))))
n_count(c_and(c_not(c_primitive(picked,0)),c_some(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0)))))
n_count(c_and(c_all(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))),c_not(c_primitive(picked,0))))
n_count(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(at,0)),c_primitive(reward,0)),c_not(c_primitive(picked,0))))
n_count(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(at,0)),c_primitive(picked,0)),c_not(c_primitive(picked,0))))
n_count(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(at,0)),c_primitive(picked_g,0)),c_not(c_primitive(picked,0))))
n_count(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(reward,0)),c_primitive(at,0)),c_not(c_primitive(picked,0))))
n_count(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_primitive(picked,0)),c_not(c_primitive(picked,0))))
n_count(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(picked,0)),c_primitive(at,0)),c_not(c_primitive(picked,0))))
n_count(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(picked_g,0)),c_primitive(at,0)),c_not(c_primitive(picked,0))))
n_count(c_and(c_not(c_and(c_not(c_primitive(at,0)),c_primitive(unblocked,0))),c_not(c_primitive(picked_g,0))))
n_count(c_and(c_not(c_primitive(picked_g,0)),c_some(r_primitive(adjacent,0,1),c_and(c_primitive(at,0),c_primitive(picked,0)))))
n_count(c_and(c_not(c_primitive(picked_g,0)),c_some(r_primitive(adjacent,0,1),c_and(c_primitive(at,0),c_primitive(picked_g,0)))))
n_count(c_and(c_not(c_primitive(picked_g,0)),c_some(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(at,0)))))
n_count(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(at,0)),c_primitive(reward,0)),c_not(c_primitive(picked_g,0))))
n_count(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(at,0)),c_primitive(picked,0)),c_not(c_primitive(picked_g,0))))
n_count(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(at,0)),c_primitive(picked_g,0)),c_not(c_primitive(picked_g,0))))
n_count(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(reward,0)),c_primitive(at,0)),c_not(c_primitive(picked_g,0))))
n_count(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(picked,0)),c_primitive(at,0)),c_not(c_primitive(picked_g,0))))
n_count(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(picked_g,0)),c_primitive(at,0)),c_not(c_primitive(picked_g,0))))
n_count(c_and(c_not(c_some(r_primitive(adjacent,0,1),c_primitive(reward,0))),c_some(r_primitive(adjacent,0,1),c_primitive(at,0))))
n_count(c_and(c_not(c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))),c_some(r_primitive(adjacent,0,1),c_primitive(at,0))))
n_count(c_and(c_some(r_primitive(adjacent,0,1),c_primitive(at,0)),c_some(r_transitive_closure(r_primitive(adjacent,0,1)),c_primitive(reward,0))))
n_count(c_and(c_not(c_and(c_primitive(at,0),c_primitive(picked,0))),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0))))
n_count(c_and(c_not(c_some(r_primitive(adjacent,0,1),c_primitive(at,0))),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0))))
n_count(c_and(c_not(c_and(c_primitive(at,0),c_primitive(reward,0))),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))))
n_count(c_and(c_not(c_and(c_primitive(at,0),c_primitive(picked,0))),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))))
n_count(c_and(c_not(c_and(c_primitive(at,0),c_primitive(picked_g,0))),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))))
n_count(c_and(c_not(c_and(c_primitive(at,0),c_primitive(reward,0))),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))))
n_count(c_and(c_not(c_and(c_primitive(at,0),c_primitive(picked,0))),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))))
n_count(c_and(c_not(c_and(c_primitive(at,0),c_primitive(picked_g,0))),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))))
n_count(c_and(c_not(c_some(r_primitive(adjacent,0,1),c_primitive(at,0))),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))))
n_count(c_and(c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0)),c_some(r_transitive_closure(r_primitive(adjacent,0,1)),c_primitive(reward,0))))
n_count(c_and(c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0)),c_some(r_transitive_closure(r_primitive(adjacent,0,1)),c_primitive(picked,0))))
n_count(c_and(c_all(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_not(c_and(c_primitive(at,0),c_primitive(picked,0)))))
n_count(c_and(c_all(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_some(r_transitive_closure(r_primitive(adjacent,0,1)),c_primitive(picked,0))))
n_count(c_not(c_and(c_and(c_primitive(reward,0),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))),c_primitive(at,0))))
n_count(c_not(c_and(c_and(c_primitive(picked,0),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0))),c_primitive(at,0))))
n_count(c_not(c_and(c_and(c_primitive(picked,0),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))),c_primitive(at,0))))
n_count(c_not(c_and(c_and(c_primitive(picked,0),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))),c_primitive(at,0))))
n_count(c_not(c_and(c_and(c_primitive(picked_g,0),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))),c_primitive(at,0))))
n_count(c_not(c_and(c_and(c_primitive(picked_g,0),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))),c_primitive(at,0))))
n_count(c_not(c_and(c_primitive(at,0),c_some(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0))))))
n_count(c_not(c_and(c_primitive(at,0),c_some(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))))))
n_count(c_not(c_and(c_all(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0))),c_primitive(at,0))))
n_count(c_not(c_and(c_all(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))),c_primitive(at,0))))
n_count(c_not(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(at,0)),c_primitive(picked,0)),c_primitive(reward,0))))
n_count(c_not(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(picked,0)),c_primitive(at,0)),c_primitive(reward,0))))
n_count(c_not(c_and(c_and(c_not(c_primitive(at,0)),c_not(c_primitive(reward,0))),c_primitive(unblocked,0))))
n_count(c_not(c_and(c_and(c_not(c_primitive(at,0)),c_not(c_primitive(picked,0))),c_primitive(unblocked,0))))
n_count(c_not(c_and(c_and(c_not(c_primitive(at,0)),c_not(c_primitive(picked_g,0))),c_primitive(unblocked,0))))
n_count(c_not(c_and(c_not(c_some(r_transitive_closure(r_primitive(adjacent,0,1)),c_primitive(reward,0))),c_primitive(unblocked,0))))
n_count(c_not(c_and(c_not(c_some(r_transitive_closure(r_primitive(adjacent,0,1)),c_primitive(picked,0))),c_primitive(unblocked,0))))
n_count(c_not(c_and(c_primitive(unblocked,0),c_some(r_primitive(adjacent,0,1),c_and(c_primitive(at,0),c_primitive(reward,0))))))
n_count(c_not(c_and(c_primitive(unblocked,0),c_some(r_primitive(adjacent,0,1),c_and(c_primitive(at,0),c_primitive(picked,0))))))
n_count(c_not(c_and(c_primitive(unblocked,0),c_some(r_primitive(adjacent,0,1),c_and(c_primitive(at,0),c_primitive(picked_g,0))))))
n_count(c_not(c_and(c_primitive(unblocked,0),c_some(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(at,0))))))
n_count(c_not(c_and(c_primitive(unblocked,0),c_some(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))))))
n_count(c_not(c_and(c_all(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))),c_primitive(unblocked,0))))
n_count(c_not(c_and(c_all(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))),c_primitive(unblocked,0))))
n_count(c_not(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(at,0)),c_primitive(reward,0)),c_primitive(unblocked,0))))
n_count(c_not(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(at,0)),c_primitive(picked,0)),c_primitive(unblocked,0))))
n_count(c_not(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(at,0)),c_primitive(picked_g,0)),c_primitive(unblocked,0))))
n_count(c_not(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(reward,0)),c_primitive(at,0)),c_primitive(unblocked,0))))
n_count(c_not(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(picked,0)),c_primitive(at,0)),c_primitive(unblocked,0))))
n_count(c_not(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(picked_g,0)),c_primitive(at,0)),c_primitive(unblocked,0))))
n_count(c_not(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(at,0)),c_primitive(reward,0)),c_primitive(picked,0))))
n_count(c_not(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(at,0)),c_primitive(picked,0)),c_primitive(picked,0))))
n_count(c_not(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(at,0)),c_primitive(picked_g,0)),c_primitive(picked,0))))
n_count(c_not(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(reward,0)),c_primitive(at,0)),c_primitive(picked,0))))
n_count(c_not(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(picked_g,0)),c_primitive(at,0)),c_primitive(picked,0))))
n_count(c_not(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(at,0)),c_primitive(reward,0)),c_primitive(picked_g,0))))
n_count(c_not(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(at,0)),c_primitive(picked,0)),c_primitive(picked_g,0))))
n_count(c_not(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(at,0)),c_primitive(picked_g,0)),c_primitive(picked_g,0))))
n_count(c_not(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(reward,0)),c_primitive(at,0)),c_primitive(picked_g,0))))
n_count(c_not(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(picked_g,0)),c_primitive(at,0)),c_primitive(picked_g,0))))
n_count(c_not(c_and(c_not(c_primitive(at,0)),c_not(c_some(r_primitive(adjacent,0,1),c_primitive(at,0))))))
n_count(c_not(c_and(c_not(c_primitive(at,0)),c_not(c_some(r_primitive(adjacent,0,1),c_primitive(reward,0))))))
n_count(c_not(c_and(c_not(c_primitive(at,0)),c_not(c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))))))
n_count(c_not(c_and(c_not(c_primitive(at,0)),c_not(c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))))))
n_count(c_not(c_and(c_not(c_all(r_primitive(adjacent,0,1),c_primitive(unblocked,0))),c_not(c_primitive(at,0)))))
n_count(c_not(c_and(c_not(c_primitive(at,0)),c_some(r_transitive_closure(r_primitive(adjacent,0,1)),c_primitive(reward,0)))))
n_count(c_not(c_and(c_not(c_primitive(at,0)),c_some(r_transitive_closure(r_primitive(adjacent,0,1)),c_primitive(picked,0)))))
n_count(c_not(c_and(c_not(c_primitive(reward,0)),c_not(c_some(r_primitive(adjacent,0,1),c_primitive(at,0))))))
n_count(c_not(c_and(c_not(c_primitive(reward,0)),c_not(c_some(r_primitive(adjacent,0,1),c_primitive(reward,0))))))
n_count(c_not(c_and(c_not(c_primitive(reward,0)),c_not(c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))))))
n_count(c_not(c_and(c_not(c_primitive(reward,0)),c_not(c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))))))
n_count(c_not(c_and(c_not(c_all(r_primitive(adjacent,0,1),c_primitive(unblocked,0))),c_not(c_primitive(reward,0)))))
n_count(c_not(c_and(c_not(c_primitive(reward,0)),c_some(r_transitive_closure(r_primitive(adjacent,0,1)),c_primitive(picked,0)))))
n_count(c_not(c_and(c_not(c_primitive(unblocked,0)),c_not(c_some(r_primitive(adjacent,0,1),c_primitive(at,0))))))
n_count(c_not(c_and(c_not(c_primitive(unblocked,0)),c_not(c_some(r_primitive(adjacent,0,1),c_primitive(reward,0))))))
n_count(c_not(c_and(c_not(c_primitive(unblocked,0)),c_not(c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))))))
n_count(c_not(c_and(c_not(c_primitive(unblocked,0)),c_some(r_transitive_closure(r_primitive(adjacent,0,1)),c_primitive(picked,0)))))
n_count(c_not(c_and(c_not(c_primitive(picked,0)),c_not(c_some(r_primitive(adjacent,0,1),c_primitive(at,0))))))
n_count(c_not(c_and(c_not(c_primitive(picked,0)),c_not(c_some(r_primitive(adjacent,0,1),c_primitive(reward,0))))))
n_count(c_not(c_and(c_not(c_primitive(picked,0)),c_not(c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))))))
n_count(c_not(c_and(c_not(c_primitive(picked,0)),c_not(c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))))))
n_count(c_not(c_and(c_not(c_all(r_primitive(adjacent,0,1),c_primitive(unblocked,0))),c_not(c_primitive(picked,0)))))
n_count(c_not(c_and(c_not(c_primitive(picked,0)),c_some(r_transitive_closure(r_primitive(adjacent,0,1)),c_primitive(reward,0)))))
n_count(c_not(c_and(c_not(c_primitive(picked,0)),c_some(r_transitive_closure(r_primitive(adjacent,0,1)),c_primitive(picked,0)))))
n_count(c_not(c_and(c_not(c_primitive(picked_g,0)),c_not(c_some(r_primitive(adjacent,0,1),c_primitive(at,0))))))
n_count(c_not(c_and(c_not(c_primitive(picked_g,0)),c_not(c_some(r_primitive(adjacent,0,1),c_primitive(reward,0))))))
n_count(c_not(c_and(c_not(c_primitive(picked_g,0)),c_not(c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))))))
n_count(c_not(c_and(c_not(c_primitive(picked_g,0)),c_some(r_transitive_closure(r_primitive(adjacent,0,1)),c_primitive(reward,0)))))
n_count(c_not(c_and(c_not(c_primitive(picked_g,0)),c_some(r_transitive_closure(r_primitive(adjacent,0,1)),c_primitive(picked,0)))))
n_count(c_not(c_and(c_some(r_primitive(adjacent,0,1),c_primitive(at,0)),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0)))))
n_count(c_not(c_and(c_some(r_primitive(adjacent,0,1),c_primitive(at,0)),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0)))))
n_count(c_not(c_some(r_primitive(adjacent,0,1),c_and(c_primitive(at,0),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0))))))
n_count(c_not(c_some(r_primitive(adjacent,0,1),c_and(c_primitive(at,0),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))))))
n_count(c_not(c_some(r_primitive(adjacent,0,1),c_and(c_all(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_primitive(at,0)))))
n_count(c_not(c_some(r_primitive(adjacent,0,1),c_and(c_primitive(reward,0),c_some(r_primitive(adjacent,0,1),c_primitive(at,0))))))
n_count(c_not(c_some(r_primitive(adjacent,0,1),c_and(c_primitive(reward,0),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))))))
n_count(c_not(c_some(r_primitive(adjacent,0,1),c_and(c_primitive(unblocked,0),c_some(r_primitive(adjacent,0,1),c_primitive(at,0))))))
n_count(c_not(c_some(r_primitive(adjacent,0,1),c_and(c_primitive(picked,0),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))))))
n_count(c_not(c_some(r_primitive(adjacent,0,1),c_and(c_primitive(picked_g,0),c_some(r_primitive(adjacent,0,1),c_primitive(at,0))))))
n_count(c_not(c_some(r_primitive(adjacent,0,1),c_and(c_not(c_primitive(at,0)),c_not(c_primitive(reward,0))))))
n_count(c_not(c_some(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_and(c_primitive(at,0),c_primitive(reward,0))))))
n_count(c_not(c_some(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_and(c_primitive(at,0),c_primitive(picked,0))))))
n_count(c_not(c_some(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_and(c_primitive(at,0),c_primitive(picked_g,0))))))
n_count(c_not(c_some(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(at,0))))))
n_count(c_not(c_some(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0))))))
n_count(c_not(c_some(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))))))
n_count(c_not(c_some(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))))))
n_count(c_not(c_some(r_primitive(adjacent,0,1),c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(at,0)),c_primitive(reward,0)))))
n_count(c_not(c_some(r_primitive(adjacent,0,1),c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(at,0)),c_primitive(picked,0)))))
n_count(c_not(c_some(r_primitive(adjacent,0,1),c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(at,0)),c_primitive(picked_g,0)))))
n_count(c_not(c_some(r_primitive(adjacent,0,1),c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(reward,0)),c_primitive(at,0)))))
n_count(c_not(c_some(r_primitive(adjacent,0,1),c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_primitive(at,0)))))
n_count(c_not(c_some(r_primitive(adjacent,0,1),c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(picked_g,0)),c_primitive(at,0)))))
n_count(c_not(c_some(r_transitive_closure(r_primitive(adjacent,0,1)),c_and(c_not(c_primitive(at,0)),c_primitive(reward,0)))))
n_count(c_not(c_some(r_transitive_closure(r_primitive(adjacent,0,1)),c_and(c_not(c_primitive(at,0)),c_primitive(picked,0)))))
n_count(c_not(c_some(r_transitive_closure(r_primitive(adjacent,0,1)),c_and(c_not(c_primitive(at,0)),c_primitive(picked_g,0)))))
n_count(c_not(c_all(r_primitive(adjacent,0,1),c_and(c_primitive(unblocked,0),c_some(r_primitive(adjacent,0,1),c_primitive(at,0))))))
n_count(c_not(c_all(r_primitive(adjacent,0,1),c_and(c_not(c_primitive(at,0)),c_not(c_primitive(reward,0))))))
n_count(c_not(c_all(r_primitive(adjacent,0,1),c_and(c_not(c_primitive(at,0)),c_not(c_primitive(picked,0))))))
n_count(c_not(c_all(r_primitive(adjacent,0,1),c_and(c_not(c_primitive(at,0)),c_not(c_primitive(picked_g,0))))))
n_count(c_not(c_all(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_and(c_primitive(at,0),c_primitive(reward,0))))))
n_count(c_not(c_all(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_and(c_primitive(at,0),c_primitive(picked,0))))))
n_count(c_not(c_all(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_and(c_primitive(at,0),c_primitive(picked_g,0))))))
n_count(c_not(c_all(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(at,0))))))
n_count(c_not(c_all(r_primitive(adjacent,0,1),c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(at,0)),c_primitive(reward,0)))))
n_count(c_not(c_all(r_primitive(adjacent,0,1),c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(at,0)),c_primitive(picked,0)))))
n_count(c_not(c_all(r_primitive(adjacent,0,1),c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(at,0)),c_primitive(picked_g,0)))))
n_count(c_not(c_all(r_primitive(adjacent,0,1),c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(reward,0)),c_primitive(at,0)))))
n_count(c_not(c_all(r_primitive(adjacent,0,1),c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_primitive(at,0)))))
n_count(c_not(c_all(r_primitive(adjacent,0,1),c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(picked_g,0)),c_primitive(at,0)))))
n_count(c_not(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(at,0)),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0)))))
n_count(c_not(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(at,0)),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0)))))
n_count(c_not(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(at,0)),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0)))))
n_count(c_not(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(reward,0)),c_some(r_primitive(adjacent,0,1),c_primitive(at,0)))))
n_count(c_not(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(reward,0)),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0)))))
n_count(c_not(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_some(r_primitive(adjacent,0,1),c_primitive(at,0)))))
n_count(c_not(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0)))))
n_count(c_not(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0)))))
n_count(c_not(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0)))))
n_count(c_not(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(picked,0)),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0)))))
n_count(c_not(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(picked,0)),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0)))))
n_count(c_not(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(picked,0)),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0)))))
n_count(c_not(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(picked_g,0)),c_and(c_primitive(at,0),c_primitive(reward,0)))))
n_count(c_not(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(picked_g,0)),c_and(c_primitive(at,0),c_primitive(picked,0)))))
n_count(c_not(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(picked_g,0)),c_some(r_primitive(adjacent,0,1),c_primitive(at,0)))))
n_count(c_not(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(picked_g,0)),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0)))))
n_count(c_not(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(picked_g,0)),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0)))))
n_count(c_some(r_primitive(adjacent,0,1),c_and(c_not(c_primitive(reward,0)),c_some(r_primitive(adjacent,0,1),c_primitive(at,0)))))
n_count(c_some(r_primitive(adjacent,0,1),c_and(c_not(c_primitive(unblocked,0)),c_some(r_primitive(adjacent,0,1),c_primitive(at,0)))))
n_count(c_some(r_primitive(adjacent,0,1),c_and(c_not(c_primitive(unblocked,0)),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0)))))
n_count(c_some(r_primitive(adjacent,0,1),c_all(r_primitive(adjacent,0,1),c_and(c_not(c_primitive(at,0)),c_primitive(unblocked,0)))))
n_count(c_some(r_primitive(adjacent,0,1),c_all(r_primitive(adjacent,0,1),c_and(c_not(c_primitive(reward,0)),c_primitive(unblocked,0)))))
n_count(c_some(r_primitive(adjacent,0,1),c_all(r_primitive(adjacent,0,1),c_and(c_not(c_primitive(picked,0)),c_primitive(unblocked,0)))))
n_count(c_some(r_transitive_closure(r_primitive(adjacent,0,1)),c_and(c_primitive(at,0),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0)))))
n_count(c_some(r_transitive_closure(r_primitive(adjacent,0,1)),c_and(c_primitive(at,0),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0)))))
n_count(c_some(r_transitive_closure(r_primitive(adjacent,0,1)),c_and(c_all(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_primitive(at,0))))
n_count(c_some(r_transitive_closure(r_primitive(adjacent,0,1)),c_and(c_primitive(reward,0),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0)))))
n_count(c_some(r_transitive_closure(r_primitive(adjacent,0,1)),c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_primitive(at,0))))
n_count(c_some(r_transitive_closure(r_primitive(adjacent,0,1)),c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(picked_g,0)),c_primitive(at,0))))
n_count(c_all(r_primitive(adjacent,0,1),c_and(c_not(c_and(c_primitive(at,0),c_primitive(reward,0))),c_primitive(unblocked,0))))
n_count(c_all(r_primitive(adjacent,0,1),c_and(c_not(c_and(c_primitive(at,0),c_primitive(picked_g,0))),c_primitive(unblocked,0))))
n_count(c_all(r_primitive(adjacent,0,1),c_and(c_not(c_some(r_primitive(adjacent,0,1),c_primitive(at,0))),c_primitive(unblocked,0))))
n_count(c_all(r_primitive(adjacent,0,1),c_and(c_not(c_primitive(at,0)),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0)))))
n_count(c_all(r_primitive(adjacent,0,1),c_and(c_not(c_primitive(at,0)),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0)))))
n_count(c_all(r_primitive(adjacent,0,1),c_and(c_all(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_not(c_primitive(at,0)))))
n_count(c_all(r_primitive(adjacent,0,1),c_and(c_not(c_primitive(reward,0)),c_some(r_primitive(adjacent,0,1),c_primitive(at,0)))))
n_count(c_all(r_primitive(adjacent,0,1),c_and(c_not(c_primitive(reward,0)),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0)))))
n_count(c_all(r_primitive(adjacent,0,1),c_and(c_not(c_primitive(reward,0)),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0)))))
n_count(c_all(r_primitive(adjacent,0,1),c_and(c_not(c_primitive(picked,0)),c_some(r_primitive(adjacent,0,1),c_primitive(at,0)))))
n_count(c_all(r_primitive(adjacent,0,1),c_and(c_not(c_primitive(picked,0)),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0)))))
n_count(c_all(r_primitive(adjacent,0,1),c_all(r_primitive(adjacent,0,1),c_and(c_not(c_primitive(at,0)),c_primitive(unblocked,0)))))
n_count(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(at,0)),c_some(r_transitive_closure(r_primitive(adjacent,0,1)),c_primitive(picked,0))))
n_count(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_and(c_not(c_primitive(picked,0)),c_primitive(at,0))))
n_count(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(picked_g,0)),c_and(c_not(c_primitive(at,0)),c_primitive(reward,0))))
n_count(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(picked_g,0)),c_and(c_not(c_primitive(at,0)),c_primitive(picked,0))))
n_count(c_all(r_inverse(r_restrict(r_primitive(adjacent,0,1),c_primitive(at,0))),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0))))
n_count(c_all(r_inverse(r_restrict(r_primitive(adjacent,0,1),c_primitive(at,0))),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))))
n_count(c_all(r_inverse(r_restrict(r_primitive(adjacent,0,1),c_primitive(reward,0))),c_some(r_primitive(adjacent,0,1),c_primitive(at,0))))
n_count(c_all(r_inverse(r_restrict(r_primitive(adjacent,0,1),c_primitive(unblocked,0))),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0))))
n_count(c_all(r_inverse(r_restrict(r_primitive(adjacent,0,1),c_primitive(unblocked,0))),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))))
n_count(c_all(r_inverse(r_restrict(r_primitive(adjacent,0,1),c_primitive(picked_g,0))),c_some(r_primitive(adjacent,0,1),c_primitive(at,0))))
n_count(r_and(r_inverse(r_restrict(r_primitive(adjacent,0,1),c_primitive(unblocked,0))),r_restrict(r_primitive(adjacent,0,1),c_primitive(unblocked,0))))
n_concept_distance(c_primitive(at,0),r_restrict(r_primitive(adjacent,0,1),c_primitive(reward,0)),c_not(c_and(c_primitive(at,0),c_primitive(picked_g,0))))
n_concept_distance(c_primitive(at,0),r_restrict(r_primitive(adjacent,0,1),c_primitive(reward,0)),c_not(c_all(r_primitive(adjacent,0,1),c_primitive(unblocked,0))))
n_concept_distance(c_primitive(at,0),r_restrict(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_and(c_not(c_primitive(at,0)),c_primitive(reward,0)))
n_concept_distance(c_primitive(at,0),r_restrict(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_and(c_not(c_primitive(at,0)),c_primitive(picked_g,0)))
n_concept_distance(c_primitive(at,0),r_restrict(r_primitive(adjacent,0,1),c_primitive(picked,0)),c_not(c_and(c_primitive(at,0),c_primitive(picked,0))))
n_concept_distance(c_primitive(at,0),r_restrict(r_primitive(adjacent,0,1),c_primitive(picked,0)),c_not(c_and(c_primitive(at,0),c_primitive(picked_g,0))))
n_concept_distance(c_primitive(at,0),r_restrict(r_primitive(adjacent,0,1),c_primitive(picked_g,0)),c_and(c_not(c_primitive(at,0)),c_primitive(reward,0)))
n_concept_distance(c_primitive(at,0),r_restrict(r_primitive(adjacent,0,1),c_primitive(picked_g,0)),c_not(c_and(c_primitive(at,0),c_primitive(picked,0))))
n_concept_distance(c_primitive(at,0),r_restrict(r_primitive(adjacent,0,1),c_primitive(picked_g,0)),c_not(c_and(c_primitive(at,0),c_primitive(picked_g,0))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_and(c_not(c_some(r_primitive(adjacent,0,1),c_primitive(at,0))),c_primitive(reward,0)))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_and(c_not(c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))),c_primitive(reward,0)))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_and(c_not(c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))),c_primitive(picked,0)))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_and(c_not(c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))),c_primitive(picked,0)))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_and(c_not(c_and(c_primitive(at,0),c_primitive(reward,0))),c_primitive(picked_g,0)))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_and(c_not(c_and(c_primitive(at,0),c_primitive(picked,0))),c_primitive(picked_g,0)))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_and(c_not(c_some(r_primitive(adjacent,0,1),c_primitive(at,0))),c_primitive(picked_g,0)))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_and(c_not(c_some(r_primitive(adjacent,0,1),c_primitive(reward,0))),c_primitive(picked_g,0)))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_and(c_not(c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))),c_primitive(picked_g,0)))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_and(c_not(c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))),c_primitive(picked_g,0)))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_and(c_primitive(picked_g,0),c_some(r_transitive_closure(r_primitive(adjacent,0,1)),c_primitive(reward,0))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_and(c_primitive(picked_g,0),c_some(r_transitive_closure(r_primitive(adjacent,0,1)),c_primitive(picked,0))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_and(c_not(c_primitive(at,0)),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_and(c_not(c_primitive(at,0)),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_and(c_not(c_primitive(at,0)),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_and(c_not(c_primitive(reward,0)),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_and(c_not(c_primitive(reward,0)),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_and(c_not(c_primitive(unblocked,0)),c_some(r_primitive(adjacent,0,1),c_primitive(at,0))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_and(c_not(c_primitive(unblocked,0)),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_and(c_not(c_primitive(picked,0)),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_and(c_not(c_primitive(picked,0)),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_and(c_not(c_primitive(picked,0)),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_and(c_all(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_not(c_primitive(picked,0))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_and(c_not(c_primitive(picked_g,0)),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_and(c_not(c_primitive(picked_g,0)),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_not(c_and(c_primitive(unblocked,0),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0)))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_not(c_some(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0)))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_not(c_some(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0)))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_not(c_all(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0)))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_not(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(at,0)),c_primitive(reward,0))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_not(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(at,0)),c_primitive(picked,0))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_not(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(at,0)),c_primitive(picked_g,0))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_not(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(reward,0)),c_primitive(at,0))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_not(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(picked_g,0)),c_primitive(at,0))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_all(r_primitive(adjacent,0,1),c_and(c_not(c_primitive(at,0)),c_primitive(unblocked,0))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_all(r_primitive(adjacent,0,1),c_and(c_not(c_primitive(reward,0)),c_primitive(unblocked,0))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_all(r_primitive(adjacent,0,1),c_and(c_not(c_primitive(picked,0)),c_primitive(unblocked,0))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_all(r_primitive(adjacent,0,1),c_and(c_not(c_primitive(picked_g,0)),c_primitive(unblocked,0))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_all(r_transitive_closure(r_primitive(adjacent,0,1)),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent_g,0,1),c_and(c_not(c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))),c_primitive(reward,0)))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent_g,0,1),c_and(c_not(c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))),c_primitive(picked,0)))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent_g,0,1),c_and(c_not(c_some(r_primitive(adjacent,0,1),c_primitive(reward,0))),c_primitive(picked_g,0)))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent_g,0,1),c_and(c_not(c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))),c_primitive(picked_g,0)))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent_g,0,1),c_and(c_not(c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))),c_primitive(picked_g,0)))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent_g,0,1),c_and(c_primitive(picked_g,0),c_some(r_transitive_closure(r_primitive(adjacent,0,1)),c_primitive(reward,0))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent_g,0,1),c_and(c_primitive(picked_g,0),c_some(r_transitive_closure(r_primitive(adjacent,0,1)),c_primitive(picked,0))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent_g,0,1),c_and(c_not(c_primitive(reward,0)),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent_g,0,1),c_and(c_not(c_primitive(reward,0)),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent_g,0,1),c_and(c_not(c_primitive(picked,0)),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent_g,0,1),c_and(c_not(c_primitive(picked,0)),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent_g,0,1),c_and(c_not(c_primitive(picked,0)),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent_g,0,1),c_and(c_all(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_not(c_primitive(picked,0))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent_g,0,1),c_and(c_not(c_primitive(picked_g,0)),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent_g,0,1),c_and(c_not(c_primitive(picked_g,0)),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent_g,0,1),c_not(c_and(c_primitive(reward,0),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0)))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent_g,0,1),c_not(c_and(c_primitive(picked,0),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0)))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent_g,0,1),c_not(c_and(c_primitive(picked,0),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0)))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent_g,0,1),c_not(c_and(c_primitive(picked,0),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0)))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent_g,0,1),c_not(c_and(c_primitive(picked_g,0),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0)))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent_g,0,1),c_not(c_and(c_primitive(picked_g,0),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0)))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent_g,0,1),c_not(c_some(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0)))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent_g,0,1),c_not(c_all(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0)))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent_g,0,1),c_not(c_all(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0)))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent_g,0,1),c_all(r_primitive(adjacent,0,1),c_and(c_not(c_primitive(reward,0)),c_primitive(unblocked,0))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent_g,0,1),c_all(r_inverse(r_restrict(r_primitive(adjacent,0,1),c_primitive(picked_g,0))),c_primitive(unblocked,0)))
n_concept_distance(c_and(c_not(c_all(r_primitive(adjacent,0,1),c_primitive(unblocked,0))),c_primitive(picked_g,0)),r_primitive(adjacent,0,1),c_primitive(picked,0))
n_concept_distance(c_and(c_not(c_primitive(unblocked,0)),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))),r_primitive(adjacent,0,1),c_primitive(reward,0))
n_concept_distance(c_and(c_not(c_primitive(unblocked,0)),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))),r_primitive(adjacent,0,1),c_primitive(picked,0))
Number of selected training instances: 2
Sum of number of states in selected training instances: 12
Max of number of states in selected training instances: 8
Number of features in the pool: 930
Resulting sketch:
(:policy
(:boolean_features )
(:numerical_features "n_concept_distance(c_primitive(at,0),r_restrict(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_primitive(reward,0))" "n_count(c_primitive(reward,0))")
(:rule (:conditions (:c_n_gt 1) (:c_n_eq 0)) (:effects (:e_n_dec 1) (:e_n_inc 0)))
(:rule (:conditions (:c_n_gt 1) (:c_n_gt 0)) (:effects (:e_n_bot 1) (:e_n_dec 0)))
)
Numer of sketch rules: 2
Number of selected features: 2
Maximum complexity of selected feature: 6
Resulting sketch minimized:
(:policy
(:boolean_features )
(:numerical_features "n_concept_distance(c_primitive(at,0),r_restrict(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_primitive(reward,0))" "n_count(c_primitive(reward,0))")
(:rule (:conditions (:c_n_gt 1) (:c_n_eq 0)) (:effects (:e_n_dec 1) (:e_n_inc 0)))
(:rule (:conditions (:c_n_gt 1) (:c_n_gt 0)) (:effects (:e_n_bot 1) (:e_n_dec 0)))
)
Numer of sketch rules: 2
Number of selected features: 2
Maximum complexity of selected feature: 6
2022-11-16 16:12:09 INFO     [40m[33mSummary:[0m
2022-11-16 16:12:09 INFO     [40m[32mHierarchical sketch:[0m
[40m[32mLevel 0 sketch:[0m
(:policy
(:boolean_features )
(:numerical_features "n_count(c_primitive(reward,0))")
(:rule (:conditions (:c_n_gt 0)) (:effects (:e_n_dec 0)))
)
[40m[32m    Level 1 sketch:[0m
(:policy
(:boolean_features )
(:numerical_features "n_count(c_primitive(reward,0))")
(:rule (:conditions (:c_n_gt 0)) (:effects (:e_n_dec 0)))
)
[40m[32m        Level 2 sketch:[0m
(:policy
(:boolean_features )
(:numerical_features "n_concept_distance(c_primitive(at,0),r_restrict(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_primitive(reward,0))" "n_count(c_primitive(reward,0))")
(:rule (:conditions (:c_n_gt 1) (:c_n_eq 0)) (:effects (:e_n_dec 1) (:e_n_inc 0)))
(:rule (:conditions (:c_n_gt 1) (:c_n_gt 0)) (:effects (:e_n_bot 1) (:e_n_dec 0)))
)
Num features: 2
Max feature complexity 6
Num rules: 3
2022-11-16 16:12:09 INFO     [40m[32mHierarchical sketch minimized:[0m
[40m[32mLevel 0 sketch:[0m
(:policy
(:boolean_features )
(:numerical_features "n_count(c_primitive(reward,0))")
(:rule (:conditions (:c_n_gt 0)) (:effects (:e_n_dec 0)))
)
[40m[32m    Level 1 sketch:[0m
(:policy
(:boolean_features )
(:numerical_features "n_count(c_primitive(reward,0))")
(:rule (:conditions (:c_n_gt 0)) (:effects (:e_n_dec 0)))
)
[40m[32m        Level 2 sketch:[0m
(:policy
(:boolean_features )
(:numerical_features "n_concept_distance(c_primitive(at,0),r_restrict(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_primitive(reward,0))" "n_count(c_primitive(reward,0))")
(:rule (:conditions (:c_n_gt 1) (:c_n_eq 0)) (:effects (:e_n_dec 1) (:e_n_inc 0)))
(:rule (:conditions (:c_n_gt 1) (:c_n_gt 0)) (:effects (:e_n_bot 1) (:e_n_dec 0)))
)
Num features: 2
Max feature complexity 6
Num rules: 3
Number of subproblems by rule: [461]
Sum of number of subproblems by rule: 461
Number of selected training instances by rule: [2]
Sum of number of states in selected training instances by rule: [12]
Max of number of states in selected training instances by rule: [8]
Number of features in the pool by rule: [930]
Max of number of selected training instances by rule: 2
Max of sum of number of states in selected training instances by rule: 12
Max of max of number of states in selected training instances by rule: 8
Max of number of features in the pool by rule: 930
RESOURCES FOR PREPROCESSING: 20.45 CPU sec - 137.53 MB
RESOURCES FOR LEARNING: 7.91 CPU sec - 137.53 MB
================================================================================
END OF STEP #1: Incremental learning module. 28.53 CPU sec - 179.63 MB
================================================================================
