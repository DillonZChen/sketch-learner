Changing working directory:  /proj/ssiw/projects/code/sketch-learner/learning/d2l/workspace/reward_sketch_0_0_9_9_9_9_9
Creating sym link: /proj/ssiw/projects/code/sketch-learner/learning/d2l/libs/dlplan/libs/scorpion/fast-downward.py /proj/ssiw/projects/code/sketch-learner/learning/d2l/workspace/reward_sketch_0_0_9_9_9_9_9/fast-downward.py
================================================================================
SLTP v.0.2.0
================================================================================
================================================================================
(pid: 102010) STARTING STEP #1: Incremental learning module
================================================================================
2022-11-17 12:12:42 INFO     [40m[34mInitializing DomainData...[0m
2022-11-17 12:12:42 INFO     Constructing DomainData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/domain.pddl
2022-11-17 12:12:42 INFO     [40m[34m..done[0m
2022-11-17 12:12:42 INFO     [40m[34mInitializing InstanceDatas...[0m
2022-11-17 12:12:42 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_2x2_0.pddl
Num states: 16
2022-11-17 12:12:42 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_3x3_0.pddl
Num states: 32
2022-11-17 12:12:42 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_2x2_1.pddl
Num states: 8
2022-11-17 12:12:43 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_3x3_1.pddl
Num states: 16
2022-11-17 12:12:43 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_2x2_2.pddl
Num states: 8
2022-11-17 12:12:43 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_3x3_2.pddl
Num states: 64
2022-11-17 12:12:43 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_2x2_3.pddl
Num states: 8
2022-11-17 12:12:43 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_3x3_3.pddl
Num states: 36
2022-11-17 12:12:44 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_2x2_4.pddl
Num states: 12
2022-11-17 12:12:44 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_3x3_4.pddl
Num states: 48
2022-11-17 12:12:44 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_2x2_5.pddl
Num states: 6
2022-11-17 12:12:44 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_3x3_5.pddl
Num states: 18
2022-11-17 12:12:44 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_2x2_6.pddl
Num states: 12
2022-11-17 12:12:45 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_3x3_6.pddl
Num states: 36
2022-11-17 12:12:45 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_2x2_7.pddl
Num states: 16
2022-11-17 12:12:45 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_3x3_7.pddl
Num states: 72
2022-11-17 12:12:45 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_2x2_8.pddl
Num states: 16
2022-11-17 12:12:45 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_3x3_8.pddl
Num states: 56
2022-11-17 12:12:46 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_2x2_9.pddl
Num states: 16
2022-11-17 12:12:46 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_3x3_9.pddl
Num states: 36
2022-11-17 12:12:46 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_2x2_10.pddl
Num states: 8
2022-11-17 12:12:46 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_3x3_10.pddl
Num states: 36
2022-11-17 12:12:46 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_2x2_11.pddl
Num states: 12
2022-11-17 12:12:47 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_3x3_11.pddl
Num states: 14
2022-11-17 12:12:47 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_2x2_12.pddl
Num states: 8
2022-11-17 12:12:47 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_3x3_12.pddl
Num states: 16
2022-11-17 12:12:47 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_2x2_13.pddl
Num states: 8
2022-11-17 12:12:47 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_3x3_13.pddl
Num states: 56
2022-11-17 12:12:48 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_2x2_14.pddl
Num states: 16
2022-11-17 12:12:48 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_3x3_14.pddl
Num states: 64
2022-11-17 12:12:48 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_2x2_15.pddl
Num states: 16
2022-11-17 12:12:48 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_3x3_15.pddl
Num states: 64
2022-11-17 12:12:48 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_2x2_16.pddl
Num states: 8
2022-11-17 12:12:49 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_3x3_16.pddl
Num states: 28
2022-11-17 12:12:49 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_2x2_17.pddl
Num states: 16
2022-11-17 12:12:49 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_3x3_17.pddl
Num states: 36
2022-11-17 12:12:49 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_2x2_18.pddl
Num states: 16
2022-11-17 12:12:49 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_3x3_18.pddl
Num states: 14
2022-11-17 12:12:50 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_2x2_19.pddl
Num states: 12
2022-11-17 12:12:50 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_3x3_19.pddl
Num states: 14
2022-11-17 12:12:50 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_2x2_20.pddl
Num states: 16
2022-11-17 12:12:50 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_3x3_20.pddl
Num states: 32
2022-11-17 12:12:50 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_2x2_21.pddl
Num states: 6
2022-11-17 12:12:51 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_3x3_21.pddl
Num states: 14
2022-11-17 12:12:51 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_2x2_22.pddl
Num states: 8
2022-11-17 12:12:51 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_3x3_22.pddl
Num states: 64
2022-11-17 12:12:51 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_2x2_23.pddl
Num states: 6
2022-11-17 12:12:51 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_3x3_23.pddl
Num states: 64
2022-11-17 12:12:52 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_2x2_24.pddl
Num states: 16
2022-11-17 12:12:52 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_3x3_24.pddl
Num states: 64
2022-11-17 12:12:52 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_2x2_25.pddl
Num states: 6
2022-11-17 12:12:52 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_3x3_25.pddl
Num states: 16
2022-11-17 12:12:52 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_2x2_26.pddl
Num states: 6
2022-11-17 12:12:53 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_3x3_26.pddl
Num states: 18
2022-11-17 12:12:53 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_2x2_27.pddl
Num states: 16
2022-11-17 12:12:53 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_3x3_27.pddl
Num states: 14
2022-11-17 12:12:53 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_2x2_28.pddl
Num states: 6
2022-11-17 12:12:53 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_3x3_28.pddl
Num states: 14
2022-11-17 12:12:54 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_2x2_29.pddl
Num states: 16
2022-11-17 12:12:54 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_3x3_29.pddl
Num states: 32
2022-11-17 12:12:54 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_2x2_30.pddl
Num states: 6
2022-11-17 12:12:54 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_3x3_30.pddl
Num states: 18
2022-11-17 12:12:54 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_2x2_31.pddl
Num states: 16
2022-11-17 12:12:55 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_3x3_31.pddl
Num states: 64
2022-11-17 12:12:55 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_2x2_32.pddl
Num states: 6
2022-11-17 12:12:55 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_3x3_32.pddl
Num states: 56
2022-11-17 12:12:55 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_2x2_33.pddl
Num states: 6
2022-11-17 12:12:55 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_3x3_33.pddl
Num states: 64
2022-11-17 12:12:56 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_2x2_34.pddl
Num states: 16
2022-11-17 12:12:56 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_3x3_34.pddl
Num states: 28
2022-11-17 12:12:56 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_2x2_35.pddl
Num states: 12
2022-11-17 12:12:56 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_3x3_35.pddl
Num states: 36
2022-11-17 12:12:56 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_2x2_36.pddl
Num states: 12
2022-11-17 12:12:57 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_3x3_36.pddl
Num states: 64
2022-11-17 12:12:57 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_2x2_37.pddl
Num states: 12
2022-11-17 12:12:57 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_3x3_37.pddl
Num states: 32
2022-11-17 12:12:57 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_2x2_38.pddl
Num states: 12
2022-11-17 12:12:57 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_3x3_38.pddl
Num states: 18
2022-11-17 12:12:58 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_2x2_39.pddl
Num states: 16
2022-11-17 12:12:58 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_3x3_39.pddl
Num states: 16
2022-11-17 12:12:58 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_2x2_40.pddl
Num states: 6
2022-11-17 12:12:58 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_3x3_40.pddl
Num states: 36
2022-11-17 12:12:58 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_2x2_41.pddl
Num states: 8
2022-11-17 12:12:59 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_3x3_41.pddl
Num states: 64
2022-11-17 12:12:59 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_2x2_42.pddl
Num states: 6
2022-11-17 12:12:59 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_3x3_42.pddl
Num states: 32
2022-11-17 12:12:59 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_2x2_43.pddl
Num states: 6
2022-11-17 12:12:59 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_3x3_43.pddl
Num states: 28
2022-11-17 12:13:00 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_2x2_44.pddl
Num states: 12
2022-11-17 12:13:00 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_3x3_44.pddl
Num states: 32
2022-11-17 12:13:00 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_2x2_45.pddl
Num states: 16
2022-11-17 12:13:00 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_3x3_45.pddl
Num states: 16
2022-11-17 12:13:00 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_2x2_46.pddl
Num states: 6
2022-11-17 12:13:01 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_3x3_46.pddl
Num states: 64
2022-11-17 12:13:01 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_2x2_47.pddl
Num states: 6
2022-11-17 12:13:01 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_3x3_47.pddl
Num states: 18
2022-11-17 12:13:01 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_2x2_48.pddl
Num states: 16
2022-11-17 12:13:01 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_3x3_48.pddl
Num states: 36
2022-11-17 12:13:02 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_2x2_49.pddl
Num states: 6
2022-11-17 12:13:02 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/reward/instance_3x3_49.pddl
Num states: 36
2022-11-17 12:13:02 INFO     [40m[34m..done[0m
2022-11-17 12:13:02 INFO     [40m[34mInitializing TupleGraphs...[0m
2022-11-17 12:13:02 INFO     [40m[34m..done[0m

2022-11-17 12:13:02 INFO     [40m[31mIteration: 0[0m
Number of selected instances: 1
Selected instances:
    id: 0 name: instance_2x2_5
initial states: [0, 1, 2]
2022-11-17 12:13:02 INFO     [40m[34mInitializing DomainFeatureData...[0m
[t=20.2113s, 1330104 KB] Started generating base features of complexity 1.
[t=20.2116s, 1330104 KB] Complexity 1:
    b_nullary: 0
    c_one_of: 0
    c_top: 1
    c_bot: 1
    c_primitive: 5
    r_primitive: 2
    c_and: 0
    c_not: 0
    c_equal: 0
    c_some: 0
    c_all: 0
    r_restrict: 0
    r_and: 0
    r_inverse: 0
    r_transitive_closure: 0
    b_empty: 0
    n_count: 0
    n_concept_distance: 0
[t=20.2117s, 1330104 KB] Finished generating base features.
[t=20.2117s, 1330104 KB] Started generating composite features. 
[t=20.2119s, 1330104 KB] Complexity 2:
Total concept elements: 12
Total role elements: 3
Total numerical elements: 7
Total boolean elements: 4
    b_nullary: 0
    c_one_of: 0
    c_top: 1
    c_bot: 1
    c_primitive: 5
    r_primitive: 2
    c_and: 0
    c_not: 5
    c_equal: 0
    c_some: 0
    c_all: 0
    r_restrict: 0
    r_and: 0
    r_inverse: 0
    r_transitive_closure: 1
    b_empty: 4
    n_count: 7
    n_concept_distance: 0
[t=20.2125s, 1330104 KB] Complexity 3:
Total concept elements: 20
Total role elements: 8
Total numerical elements: 10
Total boolean elements: 4
    b_nullary: 0
    c_one_of: 0
    c_top: 1
    c_bot: 1
    c_primitive: 5
    r_primitive: 2
    c_and: 3
    c_not: 5
    c_equal: 0
    c_some: 4
    c_all: 1
    r_restrict: 5
    r_and: 0
    r_inverse: 0
    r_transitive_closure: 1
    b_empty: 4
    n_count: 10
    n_concept_distance: 0
[t=20.2132s, 1330104 KB] Complexity 4:
Total concept elements: 37
Total role elements: 13
Total numerical elements: 26
Total boolean elements: 7
    b_nullary: 0
    c_one_of: 0
    c_top: 1
    c_bot: 1
    c_primitive: 5
    r_primitive: 2
    c_and: 12
    c_not: 11
    c_equal: 0
    c_some: 6
    c_all: 1
    r_restrict: 5
    r_and: 0
    r_inverse: 5
    r_transitive_closure: 1
    b_empty: 7
    n_count: 17
    n_concept_distance: 9
[t=20.2148s, 1330104 KB] Complexity 5:
Total concept elements: 63
Total role elements: 13
Total numerical elements: 45
Total boolean elements: 12
    b_nullary: 0
    c_one_of: 0
    c_top: 1
    c_bot: 1
    c_primitive: 5
    r_primitive: 2
    c_and: 18
    c_not: 20
    c_equal: 0
    c_some: 11
    c_all: 7
    r_restrict: 5
    r_and: 0
    r_inverse: 5
    r_transitive_closure: 1
    b_empty: 12
    n_count: 30
    n_concept_distance: 15
[t=20.218s, 1330104 KB] Complexity 6:
Total concept elements: 106
Total role elements: 13
Total numerical elements: 71
Total boolean elements: 12
    b_nullary: 0
    c_one_of: 0
    c_top: 1
    c_bot: 1
    c_primitive: 5
    r_primitive: 2
    c_and: 40
    c_not: 37
    c_equal: 0
    c_some: 14
    c_all: 8
    r_restrict: 5
    r_and: 0
    r_inverse: 5
    r_transitive_closure: 1
    b_empty: 12
    n_count: 48
    n_concept_distance: 23
[t=20.2234s, 1330104 KB] Complexity 7:
Total concept elements: 179
Total role elements: 16
Total numerical elements: 110
Total boolean elements: 14
    b_nullary: 0
    c_one_of: 0
    c_top: 1
    c_bot: 1
    c_primitive: 5
    r_primitive: 2
    c_and: 76
    c_not: 58
    c_equal: 0
    c_some: 24
    c_all: 14
    r_restrict: 5
    r_and: 3
    r_inverse: 5
    r_transitive_closure: 1
    b_empty: 14
    n_count: 75
    n_concept_distance: 35
[t=20.2333s, 1330104 KB] Complexity 8:
Total concept elements: 265
Total role elements: 28
Total numerical elements: 150
Total boolean elements: 14
    b_nullary: 0
    c_one_of: 0
    c_top: 1
    c_bot: 1
    c_primitive: 5
    r_primitive: 2
    c_and: 124
    c_not: 92
    c_equal: 0
    c_some: 24
    c_all: 18
    r_restrict: 5
    r_and: 12
    r_inverse: 8
    r_transitive_closure: 1
    b_empty: 14
    n_count: 105
    n_concept_distance: 45
[t=20.2517s, 1330104 KB] Complexity 9:
Total concept elements: 399
Total role elements: 28
Total numerical elements: 188
Total boolean elements: 14
    b_nullary: 0
    c_one_of: 0
    c_top: 1
    c_bot: 1
    c_primitive: 5
    r_primitive: 2
    c_and: 215
    c_not: 127
    c_equal: 0
    c_some: 26
    c_all: 24
    r_restrict: 5
    r_and: 12
    r_inverse: 8
    r_transitive_closure: 1
    b_empty: 14
    n_count: 135
    n_concept_distance: 53
[t=20.2518s, 1330104 KB] Finished generating composite features.
DomainFeatureDataStatistics:
    num_dlplan_states: 6
    num_boolean_features: 14
    num_numerical_features: 188
2022-11-17 12:13:02 INFO     [40m[34m..done[0m
2022-11-17 12:13:02 INFO     [40m[34mInitializing InstanceFeatureDatas...[0m
2022-11-17 12:13:02 INFO     [40m[34m..done[0m
2022-11-17 12:13:02 INFO     [40m[34mInitializing StatePairEquivalenceDatas...[0m
2022-11-17 12:13:02 INFO     [40m[34m..done[0m
2022-11-17 12:13:02 INFO     [40m[34mInitializing TupleGraphEquivalences...[0m
2022-11-17 12:13:02 INFO     [40m[34m..done[0m
2022-11-17 12:13:02 INFO     [40m[34mInitializing TupleGraphEquivalenceMinimizer...[0m
Num subgoals: 3
Num of selected subgoals: 2
Num rules: 2
Num of selected rules: 2
Num subgoals: 5
Num of selected subgoals: 3
Num rules: 3
Num of selected rules: 3
Num subgoals: 3
Num of selected subgoals: 2
Num rules: 2
Num of selected rules: 2
2022-11-17 12:13:02 INFO     [40m[34m..done[0m
Number of initial D2 facts: 4
Number of D2 facts: 4 of 25
2022-11-17 12:13:02 INFO     [40m[34mGrounding Logic Program...[0m
2022-11-17 12:13:02 INFO     [40m[34m..done[0m
2022-11-17 12:13:02 INFO     [40m[34mSolving Logic Program...[0m
2022-11-17 12:13:02 INFO     [40m[34m..done[0m
Clingo statistics:
Total time:  0.044883012771606445
CPU time:  0.08292199999999994
Solve time:  0.00814199447631836
2022-11-17 12:13:02 INFO     Learned the following sketch:
(:policy
(:boolean_features )
(:numerical_features "n_count(c_primitive(reward,0))")
(:rule (:conditions (:c_n_gt 0)) (:effects (:e_n_bot 0)))
(:rule (:conditions (:c_n_gt 0)) (:effects (:e_n_dec 0)))
)
Numer of sketch rules: 2
Number of selected features: 1
Maximum complexity of selected feature: 2
[40m[31mSketch cycles[0m
Instance: 0 instance_2x2_5
2 (instance index=0, state index=2, atoms={at(c_1_1), reward(c_0_1)})
2 (instance index=0, state index=2, atoms={at(c_1_1), reward(c_0_1)})
Number of unsatisfied D2 facts: 3
Number of D2 facts: 7 of 25
2022-11-17 12:13:02 INFO     [40m[34mGrounding Logic Program...[0m
2022-11-17 12:13:02 INFO     [40m[34m..done[0m
2022-11-17 12:13:02 INFO     [40m[34mSolving Logic Program...[0m
2022-11-17 12:13:02 INFO     [40m[34m..done[0m
Clingo statistics:
Total time:  0.07244706153869629
CPU time:  0.09367799999999993
Solve time:  0.00631403923034668
2022-11-17 12:13:02 INFO     Learned the following sketch:
(:policy
(:boolean_features )
(:numerical_features "n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_primitive(reward,0))")
(:rule (:conditions (:c_n_eq 0)) (:effects (:e_n_inc 0)))
(:rule (:conditions (:c_n_gt 0)) (:effects (:e_n_dec 0)))
)
Numer of sketch rules: 2
Number of selected features: 1
Maximum complexity of selected feature: 4
[40m[31mSketch cycles[0m
Instance: 0 instance_2x2_5
0 (instance index=0, state index=0, atoms={at(c_0_0), reward(c_0_1)})
1 (instance index=0, state index=1, atoms={at(c_0_1), reward(c_0_1)})
2 (instance index=0, state index=2, atoms={at(c_1_1), reward(c_0_1)})
1 (instance index=0, state index=1, atoms={at(c_0_1), reward(c_0_1)})
Number of unsatisfied D2 facts: 1
Number of D2 facts: 8 of 25
2022-11-17 12:13:02 INFO     [40m[34mGrounding Logic Program...[0m
2022-11-17 12:13:02 INFO     [40m[34m..done[0m
2022-11-17 12:13:02 INFO     [40m[34mSolving Logic Program...[0m
2022-11-17 12:13:02 INFO     [40m[34m..done[0m
Clingo statistics:
Total time:  0.06940817832946777
CPU time:  0.09724099999999991
Solve time:  0.00499415397644043
2022-11-17 12:13:02 INFO     Learned the following sketch:
(:policy
(:boolean_features )
(:numerical_features "n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0)))")
(:rule (:conditions (:c_n_eq 0)) (:effects (:e_n_inc 0)))
(:rule (:conditions (:c_n_gt 0)) (:effects (:e_n_inc 0)))
)
Numer of sketch rules: 2
Number of selected features: 1
Maximum complexity of selected feature: 6
2022-11-17 12:13:02 INFO     [40m[34mVerifying learned sketch...[0m
[40m[31mSketch fails to bound width of a state[0m
Instance: 1 instance_2x2_21
Source_state: 2 (instance index=1, state index=2, atoms={at(c_1_0), reward(c_0_1)})
2022-11-17 12:13:02 INFO     [40m[34m..done[0m
2022-11-17 12:13:02 INFO     [40m[33mIteration summary:[0m
DomainFeatureDataStatistics:
    num_dlplan_states: 6
    num_boolean_features: 14
    num_numerical_features: 188
StatePairEquivalenceStatistics:
    num_state_pairs: 8
    num_equivalences: 5
TupleGraphEquivalenceMinimizerStatistics:
    Number of input tuples: 11
    Number of output tuples: 7
Smallest unsolved instance: 1
Selected instances: [1]

2022-11-17 12:13:02 INFO     [40m[31mIteration: 1[0m
Number of selected instances: 1
Selected instances:
    id: 1 name: instance_2x2_21
initial states: [0, 1, 2]
2022-11-17 12:13:02 INFO     [40m[34mInitializing DomainFeatureData...[0m
[t=20.5036s, 3521004 KB] Started generating base features of complexity 1.
[t=20.5037s, 3521004 KB] Complexity 1:
    b_nullary: 0
    c_one_of: 0
    c_top: 1
    c_bot: 1
    c_primitive: 5
    r_primitive: 2
    c_and: 0
    c_not: 0
    c_equal: 0
    c_some: 0
    c_all: 0
    r_restrict: 0
    r_and: 0
    r_inverse: 0
    r_transitive_closure: 0
    b_empty: 0
    n_count: 0
    n_concept_distance: 0
[t=20.5038s, 3521004 KB] Finished generating base features.
[t=20.5039s, 3521004 KB] Started generating composite features. 
[t=20.504s, 3521004 KB] Complexity 2:
Total concept elements: 12
Total role elements: 3
Total numerical elements: 7
Total boolean elements: 4
    b_nullary: 0
    c_one_of: 0
    c_top: 1
    c_bot: 1
    c_primitive: 5
    r_primitive: 2
    c_and: 0
    c_not: 5
    c_equal: 0
    c_some: 0
    c_all: 0
    r_restrict: 0
    r_and: 0
    r_inverse: 0
    r_transitive_closure: 1
    b_empty: 4
    n_count: 7
    n_concept_distance: 0
[t=20.5046s, 3521004 KB] Complexity 3:
Total concept elements: 19
Total role elements: 8
Total numerical elements: 10
Total boolean elements: 4
    b_nullary: 0
    c_one_of: 0
    c_top: 1
    c_bot: 1
    c_primitive: 5
    r_primitive: 2
    c_and: 3
    c_not: 5
    c_equal: 0
    c_some: 4
    c_all: 0
    r_restrict: 5
    r_and: 0
    r_inverse: 0
    r_transitive_closure: 1
    b_empty: 4
    n_count: 10
    n_concept_distance: 0
[t=20.5053s, 3521004 KB] Complexity 4:
Total concept elements: 38
Total role elements: 13
Total numerical elements: 26
Total boolean elements: 7
    b_nullary: 0
    c_one_of: 0
    c_top: 1
    c_bot: 1
    c_primitive: 5
    r_primitive: 2
    c_and: 13
    c_not: 12
    c_equal: 0
    c_some: 6
    c_all: 0
    r_restrict: 5
    r_and: 0
    r_inverse: 5
    r_transitive_closure: 1
    b_empty: 7
    n_count: 17
    n_concept_distance: 9
[t=20.5068s, 3521004 KB] Complexity 5:
Total concept elements: 73
Total role elements: 13
Total numerical elements: 46
Total boolean elements: 12
    b_nullary: 0
    c_one_of: 0
    c_top: 1
    c_bot: 1
    c_primitive: 5
    r_primitive: 2
    c_and: 26
    c_not: 22
    c_equal: 0
    c_some: 11
    c_all: 7
    r_restrict: 5
    r_and: 0
    r_inverse: 5
    r_transitive_closure: 1
    b_empty: 12
    n_count: 31
    n_concept_distance: 15
[t=20.51s, 3521004 KB] Complexity 6:
Total concept elements: 130
Total role elements: 13
Total numerical elements: 79
Total boolean elements: 15
    b_nullary: 0
    c_one_of: 0
    c_top: 1
    c_bot: 1
    c_primitive: 5
    r_primitive: 2
    c_and: 53
    c_not: 47
    c_equal: 0
    c_some: 14
    c_all: 9
    r_restrict: 5
    r_and: 0
    r_inverse: 5
    r_transitive_closure: 1
    b_empty: 15
    n_count: 53
    n_concept_distance: 26
[t=20.5162s, 3521004 KB] Complexity 7:
Total concept elements: 236
Total role elements: 16
Total numerical elements: 132
Total boolean elements: 20
    b_nullary: 0
    c_one_of: 0
    c_top: 1
    c_bot: 1
    c_primitive: 5
    r_primitive: 2
    c_and: 101
    c_not: 77
    c_equal: 0
    c_some: 32
    c_all: 19
    r_restrict: 5
    r_and: 3
    r_inverse: 5
    r_transitive_closure: 1
    b_empty: 20
    n_count: 87
    n_concept_distance: 45
[t=20.5283s, 3521004 KB] Complexity 8:
Total concept elements: 392
Total role elements: 34
Total numerical elements: 197
Total boolean elements: 22
    b_nullary: 0
    c_one_of: 0
    c_top: 1
    c_bot: 1
    c_primitive: 5
    r_primitive: 2
    c_and: 184
    c_not: 137
    c_equal: 0
    c_some: 35
    c_all: 29
    r_restrict: 5
    r_and: 18
    r_inverse: 8
    r_transitive_closure: 1
    b_empty: 22
    n_count: 138
    n_concept_distance: 59
[t=20.5525s, 3521004 KB] Complexity 9:
Total concept elements: 668
Total role elements: 34
Total numerical elements: 303
Total boolean elements: 30
    b_nullary: 0
    c_one_of: 0
    c_top: 1
    c_bot: 1
    c_primitive: 5
    r_primitive: 2
    c_and: 372
    c_not: 210
    c_equal: 0
    c_some: 44
    c_all: 35
    r_restrict: 5
    r_and: 18
    r_inverse: 8
    r_transitive_closure: 1
    b_empty: 30
    n_count: 209
    n_concept_distance: 94
[t=20.5526s, 3521004 KB] Finished generating composite features.
DomainFeatureDataStatistics:
    num_dlplan_states: 6
    num_boolean_features: 30
    num_numerical_features: 303
2022-11-17 12:13:02 INFO     [40m[34m..done[0m
2022-11-17 12:13:02 INFO     [40m[34mInitializing InstanceFeatureDatas...[0m
2022-11-17 12:13:02 INFO     [40m[34m..done[0m
2022-11-17 12:13:02 INFO     [40m[34mInitializing StatePairEquivalenceDatas...[0m
2022-11-17 12:13:02 INFO     [40m[34m..done[0m
2022-11-17 12:13:02 INFO     [40m[34mInitializing TupleGraphEquivalences...[0m
2022-11-17 12:13:02 INFO     [40m[34m..done[0m
2022-11-17 12:13:02 INFO     [40m[34mInitializing TupleGraphEquivalenceMinimizer...[0m
Num subgoals: 4
Num of selected subgoals: 3
Num rules: 3
Num of selected rules: 3
Num subgoals: 4
Num of selected subgoals: 3
Num rules: 3
Num of selected rules: 3
Num subgoals: 3
Num of selected subgoals: 2
Num rules: 2
Num of selected rules: 2
2022-11-17 12:13:02 INFO     [40m[34m..done[0m
Number of initial D2 facts: 7
Number of D2 facts: 7 of 64
2022-11-17 12:13:03 INFO     [40m[34mGrounding Logic Program...[0m
2022-11-17 12:13:03 INFO     [40m[34m..done[0m
2022-11-17 12:13:03 INFO     [40m[34mSolving Logic Program...[0m
2022-11-17 12:13:03 INFO     [40m[34m..done[0m
Clingo statistics:
Total time:  0.09549498558044434
CPU time:  0.12640700000000016
Solve time:  0.006283998489379883
2022-11-17 12:13:03 INFO     Learned the following sketch:
(:policy
(:boolean_features )
(:numerical_features "n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_primitive(reward,0))")
(:rule (:conditions (:c_n_eq 0)) (:effects (:e_n_inc 0)))
(:rule (:conditions (:c_n_gt 0)) (:effects (:e_n_dec 0)))
)
Numer of sketch rules: 2
Number of selected features: 1
Maximum complexity of selected feature: 4
[40m[31mSketch cycles[0m
Instance: 1 instance_2x2_21
0 (instance index=1, state index=0, atoms={at(c_0_0), reward(c_0_1)})
1 (instance index=1, state index=1, atoms={at(c_0_1), reward(c_0_1)})
2 (instance index=1, state index=2, atoms={at(c_1_0), reward(c_0_1)})
0 (instance index=1, state index=0, atoms={at(c_0_0), reward(c_0_1)})
Number of unsatisfied D2 facts: 1
Number of D2 facts: 8 of 64
2022-11-17 12:13:03 INFO     [40m[34mGrounding Logic Program...[0m
2022-11-17 12:13:03 INFO     [40m[34m..done[0m
2022-11-17 12:13:03 INFO     [40m[34mSolving Logic Program...[0m
2022-11-17 12:13:03 INFO     [40m[34m..done[0m
Clingo statistics:
Total time:  0.15909910202026367
CPU time:  0.21439300000000006
Solve time:  0.008476018905639648
2022-11-17 12:13:03 INFO     Learned the following sketch:
(:policy
(:boolean_features "b_empty(c_primitive(picked,0))")
(:numerical_features "n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_primitive(reward,0))")
(:rule (:conditions (:c_b_pos 0) (:c_n_eq 0)) (:effects (:e_b_neg 0) (:e_n_inc 0)))
(:rule (:conditions (:c_b_pos 0) (:c_n_gt 0)) (:effects (:e_b_bot 0) (:e_n_dec 0)))
)
Numer of sketch rules: 2
Number of selected features: 2
Maximum complexity of selected feature: 4
2022-11-17 12:13:03 INFO     [40m[34mVerifying learned sketch...[0m
[40m[31mSketch fails to bound width of a state[0m
Instance: 24 instance_2x2_4
Source_state: 9 (instance index=24, state index=9, atoms={at(c_0_0), picked(c_1_1), reward(c_1_0)})
2022-11-17 12:13:03 INFO     [40m[34m..done[0m
2022-11-17 12:13:03 INFO     [40m[33mIteration summary:[0m
DomainFeatureDataStatistics:
    num_dlplan_states: 6
    num_boolean_features: 30
    num_numerical_features: 303
StatePairEquivalenceStatistics:
    num_state_pairs: 8
    num_equivalences: 8
TupleGraphEquivalenceMinimizerStatistics:
    Number of input tuples: 11
    Number of output tuples: 8
Smallest unsolved instance: 24
Selected instances: [24]

2022-11-17 12:13:03 INFO     [40m[31mIteration: 2[0m
Number of selected instances: 1
Selected instances:
    id: 24 name: instance_2x2_4
initial states: [0, 1, 2, 3, 4, 5, 6, 7, 9]
2022-11-17 12:13:03 INFO     [40m[34mInitializing DomainFeatureData...[0m
[t=20.9082s, 3521004 KB] Started generating base features of complexity 1.
[t=20.9083s, 3521004 KB] Complexity 1:
    b_nullary: 0
    c_one_of: 0
    c_top: 1
    c_bot: 1
    c_primitive: 5
    r_primitive: 2
    c_and: 0
    c_not: 0
    c_equal: 0
    c_some: 0
    c_all: 0
    r_restrict: 0
    r_and: 0
    r_inverse: 0
    r_transitive_closure: 0
    b_empty: 0
    n_count: 0
    n_concept_distance: 0
[t=20.9084s, 3521004 KB] Finished generating base features.
[t=20.9085s, 3521004 KB] Started generating composite features. 
[t=20.9086s, 3521004 KB] Complexity 2:
Total concept elements: 12
Total role elements: 3
Total numerical elements: 8
Total boolean elements: 4
    b_nullary: 0
    c_one_of: 0
    c_top: 1
    c_bot: 1
    c_primitive: 5
    r_primitive: 2
    c_and: 0
    c_not: 5
    c_equal: 0
    c_some: 0
    c_all: 0
    r_restrict: 0
    r_and: 0
    r_inverse: 0
    r_transitive_closure: 1
    b_empty: 4
    n_count: 8
    n_concept_distance: 0
[t=20.9093s, 3521004 KB] Complexity 3:
Total concept elements: 19
Total role elements: 8
Total numerical elements: 11
Total boolean elements: 4
    b_nullary: 0
    c_one_of: 0
    c_top: 1
    c_bot: 1
    c_primitive: 5
    r_primitive: 2
    c_and: 3
    c_not: 5
    c_equal: 0
    c_some: 3
    c_all: 1
    r_restrict: 5
    r_and: 0
    r_inverse: 0
    r_transitive_closure: 1
    b_empty: 4
    n_count: 11
    n_concept_distance: 0
[t=20.9101s, 3521004 KB] Complexity 4:
Total concept elements: 36
Total role elements: 13
Total numerical elements: 24
Total boolean elements: 7
    b_nullary: 0
    c_one_of: 0
    c_top: 1
    c_bot: 1
    c_primitive: 5
    r_primitive: 2
    c_and: 13
    c_not: 10
    c_equal: 0
    c_some: 5
    c_all: 1
    r_restrict: 5
    r_and: 0
    r_inverse: 5
    r_transitive_closure: 1
    b_empty: 7
    n_count: 17
    n_concept_distance: 7
[t=20.9118s, 3521004 KB] Complexity 5:
Total concept elements: 82
Total role elements: 13
Total numerical elements: 42
Total boolean elements: 12
    b_nullary: 0
    c_one_of: 0
    c_top: 1
    c_bot: 1
    c_primitive: 5
    r_primitive: 2
    c_and: 34
    c_not: 22
    c_equal: 0
    c_some: 10
    c_all: 9
    r_restrict: 5
    r_and: 0
    r_inverse: 5
    r_transitive_closure: 1
    b_empty: 12
    n_count: 29
    n_concept_distance: 13
[t=20.9154s, 3521004 KB] Complexity 6:
Total concept elements: 160
Total role elements: 13
Total numerical elements: 84
Total boolean elements: 22
    b_nullary: 0
    c_one_of: 0
    c_top: 1
    c_bot: 1
    c_primitive: 5
    r_primitive: 2
    c_and: 70
    c_not: 54
    c_equal: 0
    c_some: 13
    c_all: 16
    r_restrict: 5
    r_and: 0
    r_inverse: 5
    r_transitive_closure: 1
    b_empty: 22
    n_count: 61
    n_concept_distance: 23
[t=20.9238s, 3521004 KB] Complexity 7:
Total concept elements: 320
Total role elements: 16
Total numerical elements: 169
Total boolean elements: 27
    b_nullary: 0
    c_one_of: 0
    c_top: 1
    c_bot: 1
    c_primitive: 5
    r_primitive: 2
    c_and: 163
    c_not: 92
    c_equal: 0
    c_some: 33
    c_all: 25
    r_restrict: 5
    r_and: 3
    r_inverse: 5
    r_transitive_closure: 1
    b_empty: 27
    n_count: 117
    n_concept_distance: 52
[t=20.9411s, 3521004 KB] Complexity 8:
Total concept elements: 656
Total role elements: 43
Total numerical elements: 306
Total boolean elements: 47
    b_nullary: 0
    c_one_of: 0
    c_top: 1
    c_bot: 1
    c_primitive: 5
    r_primitive: 2
    c_and: 381
    c_not: 190
    c_equal: 0
    c_some: 44
    c_all: 34
    r_restrict: 5
    r_and: 27
    r_inverse: 8
    r_transitive_closure: 1
    b_empty: 47
    n_count: 208
    n_concept_distance: 98
[t=20.9812s, 3521004 KB] Complexity 9:
Total concept elements: 1317
Total role elements: 43
Total numerical elements: 578
Total boolean elements: 87
    b_nullary: 0
    c_one_of: 0
    c_top: 1
    c_bot: 1
    c_primitive: 5
    r_primitive: 2
    c_and: 729
    c_not: 407
    c_equal: 0
    c_some: 82
    c_all: 92
    r_restrict: 5
    r_and: 27
    r_inverse: 8
    r_transitive_closure: 1
    b_empty: 87
    n_count: 387
    n_concept_distance: 191
[t=20.9813s, 3521004 KB] Finished generating composite features.
DomainFeatureDataStatistics:
    num_dlplan_states: 12
    num_boolean_features: 87
    num_numerical_features: 578
2022-11-17 12:13:03 INFO     [40m[34m..done[0m
2022-11-17 12:13:03 INFO     [40m[34mInitializing InstanceFeatureDatas...[0m
2022-11-17 12:13:03 INFO     [40m[34m..done[0m
2022-11-17 12:13:03 INFO     [40m[34mInitializing StatePairEquivalenceDatas...[0m
2022-11-17 12:13:03 INFO     [40m[34m..done[0m
2022-11-17 12:13:03 INFO     [40m[34mInitializing TupleGraphEquivalences...[0m
2022-11-17 12:13:03 INFO     [40m[34m..done[0m
2022-11-17 12:13:03 INFO     [40m[34mInitializing TupleGraphEquivalenceMinimizer...[0m
Num subgoals: 4
Num of selected subgoals: 2
Num rules: 2
Num of selected rules: 2
Num subgoals: 6
Num of selected subgoals: 4
Num rules: 4
Num of selected rules: 4
Num subgoals: 5
Num of selected subgoals: 3
Num rules: 3
Num of selected rules: 3
Num subgoals: 5
Num of selected subgoals: 3
Num rules: 3
Num of selected rules: 3
Num subgoals: 4
Num of selected subgoals: 2
Num rules: 2
Num of selected rules: 2
Num subgoals: 4
Num of selected subgoals: 2
Num rules: 2
Num of selected rules: 2
Num subgoals: 5
Num of selected subgoals: 3
Num rules: 3
Num of selected rules: 3
Num subgoals: 6
Num of selected subgoals: 4
Num rules: 4
Num of selected rules: 4
Num subgoals: 4
Num of selected subgoals: 2
Num rules: 2
Num of selected rules: 2
2022-11-17 12:13:03 INFO     [40m[34m..done[0m
Number of initial D2 facts: 25
Number of D2 facts: 25 of 625
2022-11-17 12:13:03 INFO     [40m[34mGrounding Logic Program...[0m
2022-11-17 12:13:03 INFO     [40m[34m..done[0m
2022-11-17 12:13:03 INFO     [40m[34mSolving Logic Program...[0m
2022-11-17 12:13:03 INFO     [40m[34m..done[0m
Clingo statistics:
Total time:  0.47443318367004395
CPU time:  0.5464910000000005
Solve time:  0.015720129013061523
2022-11-17 12:13:04 INFO     Learned the following sketch:
(:policy
(:boolean_features )
(:numerical_features "n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_primitive(reward,0))")
(:rule (:conditions (:c_n_eq 0)) (:effects (:e_n_inc 0)))
(:rule (:conditions (:c_n_gt 0)) (:effects (:e_n_dec 0)))
)
Numer of sketch rules: 2
Number of selected features: 1
Maximum complexity of selected feature: 4
[40m[31mSketch cycles[0m
Instance: 24 instance_2x2_4
9 (instance index=24, state index=9, atoms={at(c_0_0), picked(c_1_1), reward(c_1_0)})
7 (instance index=24, state index=7, atoms={at(c_1_0), picked(c_1_1), reward(c_1_0)})
9 (instance index=24, state index=9, atoms={at(c_0_0), picked(c_1_1), reward(c_1_0)})
Number of unsatisfied D2 facts: 16
Number of D2 facts: 41 of 625
2022-11-17 12:13:04 INFO     [40m[34mGrounding Logic Program...[0m
2022-11-17 12:13:05 INFO     [40m[34m..done[0m
2022-11-17 12:13:05 INFO     [40m[34mSolving Logic Program...[0m
2022-11-17 12:13:05 INFO     [40m[34m..done[0m
Clingo statistics:
Total time:  1.0158209800720215
CPU time:  1.2142220000000004
Solve time:  0.018601179122924805
2022-11-17 12:13:05 INFO     Learned the following sketch:
(:policy
(:boolean_features )
(:numerical_features "n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_primitive(picked,0))" "n_count(c_primitive(picked,0))")
(:rule (:conditions (:c_n_eq 1) (:c_n_gt 0)) (:effects (:e_n_bot 1) (:e_n_bot 0)))
(:rule (:conditions (:c_n_eq 1) (:c_n_gt 0)) (:effects (:e_n_inc 1) (:e_n_dec 0)))
(:rule (:conditions (:c_n_gt 1) (:c_n_eq 0)) (:effects (:e_n_bot 1) (:e_n_inc 0)))
(:rule (:conditions (:c_n_gt 1) (:c_n_gt 0)) (:effects (:e_n_bot 1) (:e_n_dec 0)))
(:rule (:conditions (:c_n_gt 1) (:c_n_gt 0)) (:effects (:e_n_inc 1) (:e_n_dec 0)))
)
Numer of sketch rules: 5
Number of selected features: 2
Maximum complexity of selected feature: 4
[40m[31mSketch cycles[0m
Instance: 24 instance_2x2_4
9 (instance index=24, state index=9, atoms={at(c_0_0), picked(c_1_1), reward(c_1_0)})
4 (instance index=24, state index=4, atoms={at(c_1_1), picked(c_1_1), reward(c_1_0)})
7 (instance index=24, state index=7, atoms={at(c_1_0), picked(c_1_1), reward(c_1_0)})
7 (instance index=24, state index=7, atoms={at(c_1_0), picked(c_1_1), reward(c_1_0)})
Number of unsatisfied D2 facts: 12
Number of D2 facts: 53 of 625
2022-11-17 12:13:06 INFO     [40m[34mGrounding Logic Program...[0m
2022-11-17 12:13:06 INFO     [40m[34m..done[0m
2022-11-17 12:13:06 INFO     [40m[34mSolving Logic Program...[0m
2022-11-17 12:13:06 INFO     [40m[34m..done[0m
Clingo statistics:
Total time:  1.0093269348144531
CPU time:  1.2289219999999998
Solve time:  0.022169113159179688
2022-11-17 12:13:06 INFO     Learned the following sketch:
(:policy
(:boolean_features )
(:numerical_features "n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_primitive(reward,0))" "n_count(c_primitive(reward,0))")
(:rule (:conditions (:c_n_gt 1) (:c_n_eq 0)) (:effects (:e_n_bot 1) (:e_n_bot 0)))
(:rule (:conditions (:c_n_gt 1) (:c_n_eq 0)) (:effects (:e_n_dec 1) (:e_n_inc 0)))
(:rule (:conditions (:c_n_gt 1) (:c_n_gt 0)) (:effects (:e_n_bot 1) (:e_n_dec 0)))
)
Numer of sketch rules: 3
Number of selected features: 2
Maximum complexity of selected feature: 4
[40m[31mSketch cycles[0m
Instance: 24 instance_2x2_4
9 (instance index=24, state index=9, atoms={at(c_0_0), picked(c_1_1), reward(c_1_0)})
7 (instance index=24, state index=7, atoms={at(c_1_0), picked(c_1_1), reward(c_1_0)})
7 (instance index=24, state index=7, atoms={at(c_1_0), picked(c_1_1), reward(c_1_0)})
Number of unsatisfied D2 facts: 5
Number of D2 facts: 58 of 625
2022-11-17 12:13:07 INFO     [40m[34mGrounding Logic Program...[0m
2022-11-17 12:13:07 INFO     [40m[34m..done[0m
2022-11-17 12:13:07 INFO     [40m[34mSolving Logic Program...[0m
2022-11-17 12:13:07 INFO     [40m[34m..done[0m
Clingo statistics:
Total time:  0.982475996017456
CPU time:  1.2100100000000005
Solve time:  0.0183260440826416
2022-11-17 12:13:07 INFO     Learned the following sketch:
(:policy
(:boolean_features )
(:numerical_features "n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_primitive(reward,0))" "n_count(c_primitive(reward,0))")
(:rule (:conditions (:c_n_gt 1) (:c_n_eq 0)) (:effects (:e_n_dec 1) (:e_n_inc 0)))
(:rule (:conditions (:c_n_gt 1) (:c_n_gt 0)) (:effects (:e_n_bot 1) (:e_n_dec 0)))
)
Numer of sketch rules: 2
Number of selected features: 2
Maximum complexity of selected feature: 4
2022-11-17 12:13:07 INFO     [40m[34mVerifying learned sketch...[0m
[40m[31mSketch fails to bound width of a state[0m
Instance: 33 instance_3x3_11
Source_state: 6 (instance index=33, state index=6, atoms={at(c_1_2), reward(c_1_0)})
2022-11-17 12:13:07 INFO     [40m[34m..done[0m
2022-11-17 12:13:07 INFO     [40m[33mIteration summary:[0m
DomainFeatureDataStatistics:
    num_dlplan_states: 12
    num_boolean_features: 87
    num_numerical_features: 578
StatePairEquivalenceStatistics:
    num_state_pairs: 25
    num_equivalences: 25
TupleGraphEquivalenceMinimizerStatistics:
    Number of input tuples: 43
    Number of output tuples: 25
Smallest unsolved instance: 33
Selected instances: [33]

2022-11-17 12:13:07 INFO     [40m[31mIteration: 3[0m
Number of selected instances: 1
Selected instances:
    id: 33 name: instance_3x3_11
initial states: [0, 1, 2, 3, 4, 6, 7]
2022-11-17 12:13:07 INFO     [40m[34mInitializing DomainFeatureData...[0m
[t=25.2616s, 3521004 KB] Started generating base features of complexity 1.
[t=25.2618s, 3521004 KB] Complexity 1:
    b_nullary: 0
    c_one_of: 0
    c_top: 1
    c_bot: 1
    c_primitive: 5
    r_primitive: 2
    c_and: 0
    c_not: 0
    c_equal: 0
    c_some: 0
    c_all: 0
    r_restrict: 0
    r_and: 0
    r_inverse: 0
    r_transitive_closure: 0
    b_empty: 0
    n_count: 0
    n_concept_distance: 0
[t=25.2619s, 3521004 KB] Finished generating base features.
[t=25.2619s, 3521004 KB] Started generating composite features. 
[t=25.2621s, 3521004 KB] Complexity 2:
Total concept elements: 12
Total role elements: 3
Total numerical elements: 7
Total boolean elements: 4
    b_nullary: 0
    c_one_of: 0
    c_top: 1
    c_bot: 1
    c_primitive: 5
    r_primitive: 2
    c_and: 0
    c_not: 5
    c_equal: 0
    c_some: 0
    c_all: 0
    r_restrict: 0
    r_and: 0
    r_inverse: 0
    r_transitive_closure: 1
    b_empty: 4
    n_count: 7
    n_concept_distance: 0
[t=25.2629s, 3521004 KB] Complexity 3:
Total concept elements: 20
Total role elements: 8
Total numerical elements: 12
Total boolean elements: 4
    b_nullary: 0
    c_one_of: 0
    c_top: 1
    c_bot: 1
    c_primitive: 5
    r_primitive: 2
    c_and: 3
    c_not: 5
    c_equal: 0
    c_some: 4
    c_all: 1
    r_restrict: 5
    r_and: 0
    r_inverse: 0
    r_transitive_closure: 1
    b_empty: 4
    n_count: 12
    n_concept_distance: 0
[t=25.2641s, 3521004 KB] Complexity 4:
Total concept elements: 40
Total role elements: 13
Total numerical elements: 30
Total boolean elements: 7
    b_nullary: 0
    c_one_of: 0
    c_top: 1
    c_bot: 1
    c_primitive: 5
    r_primitive: 2
    c_and: 13
    c_not: 13
    c_equal: 0
    c_some: 6
    c_all: 1
    r_restrict: 5
    r_and: 0
    r_inverse: 5
    r_transitive_closure: 1
    b_empty: 7
    n_count: 21
    n_concept_distance: 9
[t=25.2662s, 3521004 KB] Complexity 5:
Total concept elements: 78
Total role elements: 13
Total numerical elements: 51
Total boolean elements: 12
    b_nullary: 0
    c_one_of: 0
    c_top: 1
    c_bot: 1
    c_primitive: 5
    r_primitive: 2
    c_and: 28
    c_not: 23
    c_equal: 0
    c_some: 12
    c_all: 8
    r_restrict: 5
    r_and: 0
    r_inverse: 5
    r_transitive_closure: 1
    b_empty: 12
    n_count: 38
    n_concept_distance: 13
[t=25.2709s, 3521004 KB] Complexity 6:
Total concept elements: 145
Total role elements: 13
Total numerical elements: 98
Total boolean elements: 17
    b_nullary: 0
    c_one_of: 0
    c_top: 1
    c_bot: 1
    c_primitive: 5
    r_primitive: 2
    c_and: 59
    c_not: 51
    c_equal: 0
    c_some: 15
    c_all: 13
    r_restrict: 5
    r_and: 0
    r_inverse: 5
    r_transitive_closure: 1
    b_empty: 17
    n_count: 67
    n_concept_distance: 31
[t=25.2797s, 3521004 KB] Complexity 7:
Total concept elements: 290
Total role elements: 16
Total numerical elements: 164
Total boolean elements: 23
    b_nullary: 0
    c_one_of: 0
    c_top: 1
    c_bot: 1
    c_primitive: 5
    r_primitive: 2
    c_and: 121
    c_not: 88
    c_equal: 0
    c_some: 38
    c_all: 36
    r_restrict: 5
    r_and: 3
    r_inverse: 5
    r_transitive_closure: 1
    b_empty: 23
    n_count: 117
    n_concept_distance: 47
[t=25.2982s, 3521004 KB] Complexity 8:
Total concept elements: 508
Total role elements: 34
Total numerical elements: 296
Total boolean elements: 28
    b_nullary: 0
    c_one_of: 0
    c_top: 1
    c_bot: 1
    c_primitive: 5
    r_primitive: 2
    c_and: 224
    c_not: 184
    c_equal: 0
    c_some: 47
    c_all: 46
    r_restrict: 5
    r_and: 18
    r_inverse: 8
    r_transitive_closure: 1
    b_empty: 28
    n_count: 231
    n_concept_distance: 65
[t=25.3384s, 3521004 KB] Complexity 9:
Total concept elements: 1005
Total role elements: 34
Total numerical elements: 517
Total boolean elements: 38
    b_nullary: 0
    c_one_of: 0
    c_top: 1
    c_bot: 1
    c_primitive: 5
    r_primitive: 2
    c_and: 495
    c_not: 291
    c_equal: 0
    c_some: 102
    c_all: 110
    r_restrict: 5
    r_and: 18
    r_inverse: 8
    r_transitive_closure: 1
    b_empty: 38
    n_count: 406
    n_concept_distance: 111
[t=25.3385s, 3521004 KB] Finished generating composite features.
DomainFeatureDataStatistics:
    num_dlplan_states: 14
    num_boolean_features: 38
    num_numerical_features: 517
2022-11-17 12:13:07 INFO     [40m[34m..done[0m
2022-11-17 12:13:07 INFO     [40m[34mInitializing InstanceFeatureDatas...[0m
2022-11-17 12:13:07 INFO     [40m[34m..done[0m
2022-11-17 12:13:07 INFO     [40m[34mInitializing StatePairEquivalenceDatas...[0m
2022-11-17 12:13:07 INFO     [40m[34m..done[0m
2022-11-17 12:13:07 INFO     [40m[34mInitializing TupleGraphEquivalences...[0m
2022-11-17 12:13:07 INFO     [40m[34m..done[0m
2022-11-17 12:13:07 INFO     [40m[34mInitializing TupleGraphEquivalenceMinimizer...[0m
Num subgoals: 4
Num of selected subgoals: 3
Num rules: 3
Num of selected rules: 3
Num subgoals: 4
Num of selected subgoals: 3
Num rules: 3
Num of selected rules: 3
Num subgoals: 5
Num of selected subgoals: 4
Num rules: 4
Num of selected rules: 4
Num subgoals: 4
Num of selected subgoals: 3
Num rules: 3
Num of selected rules: 3
Num subgoals: 4
Num of selected subgoals: 3
Num rules: 3
Num of selected rules: 3
Num subgoals: 3
Num of selected subgoals: 2
Num rules: 2
Num of selected rules: 2
Num subgoals: 3
Num of selected subgoals: 2
Num rules: 2
Num of selected rules: 2
2022-11-17 12:13:07 INFO     [40m[34m..done[0m
Number of initial D2 facts: 20
Number of D2 facts: 20 of 400
2022-11-17 12:13:08 INFO     [40m[34mGrounding Logic Program...[0m
2022-11-17 12:13:08 INFO     [40m[34m..done[0m
2022-11-17 12:13:08 INFO     [40m[34mSolving Logic Program...[0m
2022-11-17 12:13:08 INFO     [40m[34m..done[0m
Clingo statistics:
Total time:  0.362382173538208
CPU time:  0.452407
Solve time:  0.011039018630981445
2022-11-17 12:13:08 INFO     Learned the following sketch:
(:policy
(:boolean_features )
(:numerical_features "n_concept_distance(c_primitive(at,0),r_restrict(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_primitive(picked_g,0))" "n_count(c_primitive(picked,0))")
(:rule (:conditions (:c_n_eq 1) (:c_n_eq 0)) (:effects (:e_n_inc 1) (:e_n_bot 0)))
(:rule (:conditions (:c_n_eq 1) (:c_n_gt 0)) (:effects (:e_n_bot 1) (:e_n_dec 0)))
)
Numer of sketch rules: 2
Number of selected features: 2
Maximum complexity of selected feature: 6
2022-11-17 12:13:08 INFO     [40m[34mVerifying learned sketch...[0m
[40m[31mSketch fails to bound width of a state[0m
Instance: 24 instance_2x2_4
Source_state: 9 (instance index=24, state index=9, atoms={at(c_0_0), picked(c_1_1), reward(c_1_0)})
2022-11-17 12:13:08 INFO     [40m[34m..done[0m
2022-11-17 12:13:08 INFO     [40m[33mIteration summary:[0m
DomainFeatureDataStatistics:
    num_dlplan_states: 14
    num_boolean_features: 38
    num_numerical_features: 517
StatePairEquivalenceStatistics:
    num_state_pairs: 20
    num_equivalences: 20
TupleGraphEquivalenceMinimizerStatistics:
    Number of input tuples: 27
    Number of output tuples: 20
Smallest unsolved instance: 24
Selected instances: [33, 24]

2022-11-17 12:13:08 INFO     [40m[31mIteration: 4[0m
Number of selected instances: 2
Selected instances:
    id: 33 name: instance_3x3_11
initial states: [0, 1, 2, 3, 4, 6, 7]
    id: 24 name: instance_2x2_4
initial states: [0, 1, 2, 3, 4, 5, 6, 7, 9]
2022-11-17 12:13:08 INFO     [40m[34mInitializing DomainFeatureData...[0m
[t=25.9443s, 3521004 KB] Started generating base features of complexity 1.
[t=25.9446s, 3521004 KB] Complexity 1:
    b_nullary: 0
    c_one_of: 0
    c_top: 1
    c_bot: 1
    c_primitive: 5
    r_primitive: 2
    c_and: 0
    c_not: 0
    c_equal: 0
    c_some: 0
    c_all: 0
    r_restrict: 0
    r_and: 0
    r_inverse: 0
    r_transitive_closure: 0
    b_empty: 0
    n_count: 0
    n_concept_distance: 0
[t=25.9447s, 3521004 KB] Finished generating base features.
[t=25.9448s, 3521004 KB] Started generating composite features. 
[t=25.945s, 3521004 KB] Complexity 2:
Total concept elements: 12
Total role elements: 3
Total numerical elements: 8
Total boolean elements: 4
    b_nullary: 0
    c_one_of: 0
    c_top: 1
    c_bot: 1
    c_primitive: 5
    r_primitive: 2
    c_and: 0
    c_not: 5
    c_equal: 0
    c_some: 0
    c_all: 0
    r_restrict: 0
    r_and: 0
    r_inverse: 0
    r_transitive_closure: 1
    b_empty: 4
    n_count: 8
    n_concept_distance: 0
[t=25.9465s, 3521004 KB] Complexity 3:
Total concept elements: 20
Total role elements: 8
Total numerical elements: 14
Total boolean elements: 4
    b_nullary: 0
    c_one_of: 0
    c_top: 1
    c_bot: 1
    c_primitive: 5
    r_primitive: 2
    c_and: 3
    c_not: 5
    c_equal: 0
    c_some: 4
    c_all: 1
    r_restrict: 5
    r_and: 0
    r_inverse: 0
    r_transitive_closure: 1
    b_empty: 4
    n_count: 14
    n_concept_distance: 0
[t=25.9498s, 3521004 KB] Complexity 4:
Total concept elements: 40
Total role elements: 13
Total numerical elements: 30
Total boolean elements: 7
    b_nullary: 0
    c_one_of: 0
    c_top: 1
    c_bot: 1
    c_primitive: 5
    r_primitive: 2
    c_and: 13
    c_not: 13
    c_equal: 0
    c_some: 6
    c_all: 1
    r_restrict: 5
    r_and: 0
    r_inverse: 5
    r_transitive_closure: 1
    b_empty: 7
    n_count: 23
    n_concept_distance: 7
[t=25.956s, 3521004 KB] Complexity 5:
Total concept elements: 100
Total role elements: 13
Total numerical elements: 54
Total boolean elements: 16
    b_nullary: 0
    c_one_of: 0
    c_top: 1
    c_bot: 1
    c_primitive: 5
    r_primitive: 2
    c_and: 40
    c_not: 25
    c_equal: 0
    c_some: 13
    c_all: 15
    r_restrict: 5
    r_and: 0
    r_inverse: 5
    r_transitive_closure: 1
    b_empty: 16
    n_count: 43
    n_concept_distance: 11
[t=25.9659s, 3521004 KB] Complexity 6:
Total concept elements: 219
Total role elements: 13
Total numerical elements: 123
Total boolean elements: 34
    b_nullary: 0
    c_one_of: 0
    c_top: 1
    c_bot: 1
    c_primitive: 5
    r_primitive: 2
    c_and: 97
    c_not: 73
    c_equal: 0
    c_some: 16
    c_all: 26
    r_restrict: 5
    r_and: 0
    r_inverse: 5
    r_transitive_closure: 1
    b_empty: 34
    n_count: 94
    n_concept_distance: 29
[t=25.9818s, 3521004 KB] Complexity 7:
Total concept elements: 506
Total role elements: 16
Total numerical elements: 245
Total boolean elements: 52
    b_nullary: 0
    c_one_of: 0
    c_top: 1
    c_bot: 1
    c_primitive: 5
    r_primitive: 2
    c_and: 238
    c_not: 135
    c_equal: 0
    c_some: 56
    c_all: 70
    r_restrict: 5
    r_and: 3
    r_inverse: 5
    r_transitive_closure: 1
    b_empty: 52
    n_count: 196
    n_concept_distance: 49
[t=26.0182s, 3521004 KB] Complexity 8:
Total concept elements: 1124
Total role elements: 43
Total numerical elements: 554
Total boolean elements: 94
    b_nullary: 0
    c_one_of: 0
    c_top: 1
    c_bot: 1
    c_primitive: 5
    r_primitive: 2
    c_and: 586
    c_not: 341
    c_equal: 0
    c_some: 79
    c_all: 111
    r_restrict: 5
    r_and: 27
    r_inverse: 8
    r_transitive_closure: 1
    b_empty: 94
    n_count: 443
    n_concept_distance: 111
[t=26.1098s, 3521004 KB] Complexity 9:
Total concept elements: 2505
Total role elements: 43
Total numerical elements: 1193
Total boolean elements: 195
    b_nullary: 0
    c_one_of: 0
    c_top: 1
    c_bot: 1
    c_primitive: 5
    r_primitive: 2
    c_and: 1269
    c_not: 713
    c_equal: 0
    c_some: 216
    c_all: 300
    r_restrict: 5
    r_and: 27
    r_inverse: 8
    r_transitive_closure: 1
    b_empty: 195
    n_count: 948
    n_concept_distance: 245
[t=26.11s, 3521004 KB] Finished generating composite features.
DomainFeatureDataStatistics:
    num_dlplan_states: 26
    num_boolean_features: 195
    num_numerical_features: 1193
2022-11-17 12:13:08 INFO     [40m[34m..done[0m
2022-11-17 12:13:08 INFO     [40m[34mInitializing InstanceFeatureDatas...[0m
2022-11-17 12:13:08 INFO     [40m[34m..done[0m
2022-11-17 12:13:08 INFO     [40m[34mInitializing StatePairEquivalenceDatas...[0m
2022-11-17 12:13:09 INFO     [40m[34m..done[0m
2022-11-17 12:13:09 INFO     [40m[34mInitializing TupleGraphEquivalences...[0m
2022-11-17 12:13:09 INFO     [40m[34m..done[0m
2022-11-17 12:13:09 INFO     [40m[34mInitializing TupleGraphEquivalenceMinimizer...[0m
Num subgoals: 4
Num of selected subgoals: 3
Num rules: 3
Num of selected rules: 3
Num subgoals: 4
Num of selected subgoals: 3
Num rules: 3
Num of selected rules: 3
Num subgoals: 5
Num of selected subgoals: 4
Num rules: 4
Num of selected rules: 4
Num subgoals: 4
Num of selected subgoals: 3
Num rules: 3
Num of selected rules: 3
Num subgoals: 4
Num of selected subgoals: 3
Num rules: 3
Num of selected rules: 3
Num subgoals: 3
Num of selected subgoals: 2
Num rules: 2
Num of selected rules: 2
Num subgoals: 3
Num of selected subgoals: 2
Num rules: 2
Num of selected rules: 2
Num subgoals: 4
Num of selected subgoals: 2
Num rules: 2
Num of selected rules: 2
Num subgoals: 6
Num of selected subgoals: 4
Num rules: 4
Num of selected rules: 4
Num subgoals: 5
Num of selected subgoals: 3
Num rules: 3
Num of selected rules: 3
Num subgoals: 5
Num of selected subgoals: 3
Num rules: 3
Num of selected rules: 3
Num subgoals: 4
Num of selected subgoals: 2
Num rules: 2
Num of selected rules: 2
Num subgoals: 4
Num of selected subgoals: 2
Num rules: 2
Num of selected rules: 2
Num subgoals: 5
Num of selected subgoals: 3
Num rules: 3
Num of selected rules: 3
Num subgoals: 6
Num of selected subgoals: 4
Num rules: 4
Num of selected rules: 4
Num subgoals: 4
Num of selected subgoals: 2
Num rules: 2
Num of selected rules: 2
2022-11-17 12:13:09 INFO     [40m[34m..done[0m
Number of initial D2 facts: 45
Number of D2 facts: 45 of 2025
2022-11-17 12:13:10 INFO     [40m[34mGrounding Logic Program...[0m
2022-11-17 12:13:11 INFO     [40m[34m..done[0m
2022-11-17 12:13:11 INFO     [40m[34mSolving Logic Program...[0m
2022-11-17 12:13:11 INFO     [40m[34m..done[0m
Clingo statistics:
Total time:  2.2183868885040283
CPU time:  2.7588030000000003
Solve time:  0.05697894096374512
2022-11-17 12:13:11 INFO     Learned the following sketch:
(:policy
(:boolean_features )
(:numerical_features "n_concept_distance(c_primitive(at,0),r_restrict(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_primitive(reward,0))" "n_count(c_primitive(reward,0))")
(:rule (:conditions (:c_n_gt 1) (:c_n_eq 0)) (:effects (:e_n_bot 1) (:e_n_bot 0)))
(:rule (:conditions (:c_n_gt 1) (:c_n_eq 0)) (:effects (:e_n_dec 1) (:e_n_inc 0)))
(:rule (:conditions (:c_n_gt 1) (:c_n_gt 0)) (:effects (:e_n_bot 1) (:e_n_dec 0)))
)
Numer of sketch rules: 3
Number of selected features: 2
Maximum complexity of selected feature: 6
[40m[31mSketch cycles[0m
Instance: 33 instance_3x3_11
2 (instance index=33, state index=2, atoms={at(c_1_0), reward(c_1_0)})
4 (instance index=33, state index=4, atoms={at(c_2_0), reward(c_1_0)})
7 (instance index=33, state index=7, atoms={at(c_2_1), reward(c_1_0)})
2 (instance index=33, state index=2, atoms={at(c_1_0), reward(c_1_0)})
Number of unsatisfied D2 facts: 6
Number of D2 facts: 51 of 2025
2022-11-17 12:13:14 INFO     [40m[34mGrounding Logic Program...[0m
2022-11-17 12:13:15 INFO     [40m[34m..done[0m
2022-11-17 12:13:15 INFO     [40m[34mSolving Logic Program...[0m
2022-11-17 12:13:15 INFO     [40m[34m..done[0m
Clingo statistics:
Total time:  3.862550973892212
CPU time:  4.449009000000002
Solve time:  0.03614401817321777
2022-11-17 12:13:16 INFO     Learned the following sketch:
(:policy
(:boolean_features )
(:numerical_features "n_concept_distance(c_primitive(at,0),r_restrict(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_primitive(reward,0))" "n_count(c_primitive(reward,0))")
(:rule (:conditions (:c_n_gt 1) (:c_n_eq 0)) (:effects (:e_n_dec 1) (:e_n_inc 0)))
(:rule (:conditions (:c_n_gt 1) (:c_n_gt 0)) (:effects (:e_n_bot 1) (:e_n_dec 0)))
)
Numer of sketch rules: 2
Number of selected features: 2
Maximum complexity of selected feature: 6
2022-11-17 12:13:16 INFO     [40m[34mVerifying learned sketch...[0m
2022-11-17 12:13:16 INFO     [40m[34m..done[0m
2022-11-17 12:13:16 INFO     [40m[33mIteration summary:[0m
DomainFeatureDataStatistics:
    num_dlplan_states: 26
    num_boolean_features: 195
    num_numerical_features: 1193
StatePairEquivalenceStatistics:
    num_state_pairs: 45
    num_equivalences: 45
TupleGraphEquivalenceMinimizerStatistics:
    Number of input tuples: 70
    Number of output tuples: 45
[40m[31mSketch solves all instances![0m
2022-11-17 12:13:16 INFO     [40m[32mSummary:[0m
Boolean features:
b_empty(c_top)
b_empty(c_bot)
b_empty(c_primitive(reward,0))
b_empty(c_primitive(picked,0))
b_empty(c_and(c_primitive(at,0),c_primitive(reward,0)))
b_empty(c_and(c_primitive(at,0),c_primitive(picked,0)))
b_empty(c_and(c_primitive(at,0),c_primitive(picked_g,0)))
b_empty(c_and(c_not(c_primitive(reward,0)),c_primitive(at,0)))
b_empty(c_and(c_not(c_primitive(picked,0)),c_primitive(at,0)))
b_empty(c_and(c_not(c_primitive(picked_g,0)),c_primitive(at,0)))
b_empty(c_and(c_not(c_primitive(at,0)),c_primitive(reward,0)))
b_empty(c_and(c_not(c_primitive(at,0)),c_primitive(picked,0)))
b_empty(c_and(c_not(c_primitive(at,0)),c_primitive(picked_g,0)))
b_empty(c_not(c_some(r_primitive(adjacent,0,1),c_primitive(reward,0))))
b_empty(c_not(c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))))
b_empty(c_not(c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))))
b_empty(c_and(c_primitive(at,0),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0))))
b_empty(c_and(c_primitive(at,0),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))))
b_empty(c_and(c_primitive(at,0),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))))
b_empty(c_and(c_all(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_primitive(at,0)))
b_empty(c_and(c_primitive(reward,0),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0))))
b_empty(c_and(c_primitive(reward,0),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))))
b_empty(c_and(c_primitive(reward,0),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))))
b_empty(c_and(c_all(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_primitive(reward,0)))
b_empty(c_and(c_primitive(picked,0),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))))
b_empty(c_and(c_primitive(picked,0),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))))
b_empty(c_and(c_all(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_primitive(picked,0)))
b_empty(c_and(c_primitive(picked_g,0),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))))
b_empty(c_not(c_some(r_transitive_closure(r_primitive(adjacent,0,1)),c_primitive(reward,0))))
b_empty(c_not(c_some(r_transitive_closure(r_primitive(adjacent,0,1)),c_primitive(picked,0))))
b_empty(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(reward,0)),c_primitive(at,0)))
b_empty(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_primitive(at,0)))
b_empty(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(picked,0)),c_primitive(at,0)))
b_empty(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(picked_g,0)),c_primitive(at,0)))
b_empty(c_and(c_not(c_some(r_primitive(adjacent,0,1),c_primitive(reward,0))),c_primitive(at,0)))
b_empty(c_and(c_not(c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))),c_primitive(at,0)))
b_empty(c_and(c_not(c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))),c_primitive(at,0)))
b_empty(c_and(c_not(c_all(r_primitive(adjacent,0,1),c_primitive(unblocked,0))),c_primitive(at,0)))
b_empty(c_and(c_not(c_some(r_primitive(adjacent,0,1),c_primitive(at,0))),c_primitive(reward,0)))
b_empty(c_and(c_not(c_some(r_primitive(adjacent,0,1),c_primitive(reward,0))),c_primitive(reward,0)))
b_empty(c_and(c_not(c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))),c_primitive(reward,0)))
b_empty(c_and(c_not(c_all(r_primitive(adjacent,0,1),c_primitive(unblocked,0))),c_primitive(reward,0)))
b_empty(c_and(c_not(c_some(r_primitive(adjacent,0,1),c_primitive(at,0))),c_primitive(picked,0)))
b_empty(c_and(c_not(c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))),c_primitive(picked,0)))
b_empty(c_and(c_not(c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))),c_primitive(picked,0)))
b_empty(c_and(c_not(c_all(r_primitive(adjacent,0,1),c_primitive(unblocked,0))),c_primitive(picked,0)))
b_empty(c_and(c_not(c_and(c_primitive(at,0),c_primitive(reward,0))),c_primitive(picked_g,0)))
b_empty(c_and(c_not(c_and(c_primitive(at,0),c_primitive(picked,0))),c_primitive(picked_g,0)))
b_empty(c_and(c_not(c_some(r_primitive(adjacent,0,1),c_primitive(at,0))),c_primitive(picked_g,0)))
b_empty(c_all(r_primitive(adjacent,0,1),c_and(c_not(c_primitive(at,0)),c_primitive(unblocked,0))))
b_empty(c_all(r_primitive(adjacent,0,1),c_and(c_not(c_primitive(reward,0)),c_primitive(unblocked,0))))
b_empty(c_all(r_primitive(adjacent,0,1),c_and(c_not(c_primitive(picked,0)),c_primitive(unblocked,0))))
b_empty(c_and(c_and(c_primitive(reward,0),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0))),c_primitive(at,0)))
b_empty(c_and(c_and(c_primitive(reward,0),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))),c_primitive(at,0)))
b_empty(c_and(c_and(c_primitive(reward,0),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))),c_primitive(at,0)))
b_empty(c_and(c_and(c_all(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_primitive(reward,0)),c_primitive(at,0)))
b_empty(c_and(c_and(c_primitive(picked,0),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0))),c_primitive(at,0)))
b_empty(c_and(c_and(c_primitive(picked,0),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))),c_primitive(at,0)))
b_empty(c_and(c_and(c_primitive(picked,0),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))),c_primitive(at,0)))
b_empty(c_and(c_and(c_all(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_primitive(picked,0)),c_primitive(at,0)))
b_empty(c_and(c_and(c_primitive(picked_g,0),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0))),c_primitive(at,0)))
b_empty(c_and(c_and(c_primitive(picked_g,0),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))),c_primitive(at,0)))
b_empty(c_and(c_and(c_primitive(picked_g,0),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))),c_primitive(at,0)))
b_empty(c_and(c_and(c_all(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_primitive(picked_g,0)),c_primitive(at,0)))
b_empty(c_and(c_primitive(at,0),c_some(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0)))))
b_empty(c_and(c_primitive(at,0),c_some(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0)))))
b_empty(c_and(c_primitive(at,0),c_some(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0)))))
b_empty(c_and(c_all(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0))),c_primitive(at,0)))
b_empty(c_and(c_all(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))),c_primitive(at,0)))
b_empty(c_and(c_all(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))),c_primitive(at,0)))
b_empty(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_primitive(reward,0)),c_primitive(at,0)))
b_empty(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_primitive(picked,0)),c_primitive(at,0)))
b_empty(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_primitive(picked_g,0)),c_primitive(at,0)))
b_empty(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(at,0)),c_primitive(picked,0)),c_primitive(reward,0)))
b_empty(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(reward,0)),c_primitive(at,0)),c_primitive(reward,0)))
b_empty(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_primitive(at,0)),c_primitive(reward,0)))
b_empty(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_primitive(picked,0)),c_primitive(reward,0)))
b_empty(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_primitive(picked_g,0)),c_primitive(reward,0)))
b_empty(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(picked,0)),c_primitive(at,0)),c_primitive(reward,0)))
b_empty(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(picked_g,0)),c_primitive(at,0)),c_primitive(reward,0)))
b_empty(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(at,0)),c_primitive(reward,0)),c_primitive(picked,0)))
b_empty(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(reward,0)),c_primitive(at,0)),c_primitive(picked,0)))
b_empty(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_primitive(at,0)),c_primitive(picked,0)))
b_empty(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_primitive(reward,0)),c_primitive(picked,0)))
b_empty(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_primitive(picked_g,0)),c_primitive(picked,0)))
b_empty(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(picked,0)),c_primitive(at,0)),c_primitive(picked,0)))
b_empty(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(picked_g,0)),c_primitive(at,0)),c_primitive(picked,0)))
b_empty(c_and(c_not(c_and(c_not(c_primitive(at,0)),c_primitive(reward,0))),c_primitive(picked_g,0)))
b_empty(c_and(c_not(c_and(c_not(c_primitive(at,0)),c_primitive(picked,0))),c_primitive(picked_g,0)))
b_empty(c_and(c_not(c_primitive(unblocked,0)),c_not(c_some(r_primitive(adjacent,0,1),c_primitive(at,0)))))
b_empty(c_all(r_primitive(adjacent,0,1),c_and(c_not(c_primitive(at,0)),c_not(c_primitive(reward,0)))))
b_empty(c_all(r_primitive(adjacent,0,1),c_and(c_not(c_primitive(at,0)),c_not(c_primitive(picked,0)))))
b_empty(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(picked_g,0)),c_and(c_primitive(at,0),c_primitive(reward,0))))
b_empty(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(picked_g,0)),c_and(c_primitive(at,0),c_primitive(picked,0))))
b_empty(c_and(c_and(c_not(c_some(r_primitive(adjacent,0,1),c_primitive(reward,0))),c_primitive(reward,0)),c_primitive(at,0)))
b_empty(c_and(c_and(c_not(c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))),c_primitive(reward,0)),c_primitive(at,0)))
b_empty(c_and(c_and(c_not(c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))),c_primitive(reward,0)),c_primitive(at,0)))
b_empty(c_and(c_and(c_not(c_all(r_primitive(adjacent,0,1),c_primitive(unblocked,0))),c_primitive(reward,0)),c_primitive(at,0)))
b_empty(c_and(c_and(c_not(c_some(r_primitive(adjacent,0,1),c_primitive(reward,0))),c_primitive(picked,0)),c_primitive(at,0)))
b_empty(c_and(c_and(c_not(c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))),c_primitive(picked,0)),c_primitive(at,0)))
b_empty(c_and(c_and(c_not(c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))),c_primitive(picked,0)),c_primitive(at,0)))
b_empty(c_and(c_and(c_not(c_all(r_primitive(adjacent,0,1),c_primitive(unblocked,0))),c_primitive(picked,0)),c_primitive(at,0)))
b_empty(c_and(c_and(c_not(c_some(r_primitive(adjacent,0,1),c_primitive(reward,0))),c_primitive(picked_g,0)),c_primitive(at,0)))
b_empty(c_and(c_and(c_not(c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))),c_primitive(picked_g,0)),c_primitive(at,0)))
b_empty(c_and(c_and(c_not(c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))),c_primitive(picked_g,0)),c_primitive(at,0)))
b_empty(c_and(c_and(c_not(c_all(r_primitive(adjacent,0,1),c_primitive(unblocked,0))),c_primitive(picked_g,0)),c_primitive(at,0)))
b_empty(c_and(c_and(c_primitive(picked_g,0),c_some(r_transitive_closure(r_primitive(adjacent,0,1)),c_primitive(reward,0))),c_primitive(at,0)))
b_empty(c_and(c_and(c_primitive(picked_g,0),c_some(r_transitive_closure(r_primitive(adjacent,0,1)),c_primitive(picked,0))),c_primitive(at,0)))
b_empty(c_and(c_and(c_not(c_primitive(reward,0)),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0))),c_primitive(at,0)))
b_empty(c_and(c_and(c_not(c_primitive(reward,0)),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))),c_primitive(at,0)))
b_empty(c_and(c_and(c_not(c_primitive(reward,0)),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))),c_primitive(at,0)))
b_empty(c_and(c_and(c_all(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_not(c_primitive(reward,0))),c_primitive(at,0)))
b_empty(c_and(c_and(c_not(c_primitive(picked,0)),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0))),c_primitive(at,0)))
b_empty(c_and(c_and(c_not(c_primitive(picked,0)),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))),c_primitive(at,0)))
b_empty(c_and(c_and(c_not(c_primitive(picked,0)),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))),c_primitive(at,0)))
b_empty(c_and(c_and(c_all(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_not(c_primitive(picked,0))),c_primitive(at,0)))
b_empty(c_and(c_and(c_not(c_primitive(picked_g,0)),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0))),c_primitive(at,0)))
b_empty(c_and(c_and(c_not(c_primitive(picked_g,0)),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))),c_primitive(at,0)))
b_empty(c_and(c_and(c_not(c_primitive(picked_g,0)),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))),c_primitive(at,0)))
b_empty(c_and(c_and(c_all(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_not(c_primitive(picked_g,0))),c_primitive(at,0)))
b_empty(c_and(c_not(c_and(c_primitive(reward,0),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0)))),c_primitive(at,0)))
b_empty(c_and(c_not(c_and(c_primitive(reward,0),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0)))),c_primitive(at,0)))
b_empty(c_and(c_not(c_and(c_primitive(reward,0),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0)))),c_primitive(at,0)))
b_empty(c_and(c_not(c_and(c_all(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_primitive(reward,0))),c_primitive(at,0)))
b_empty(c_and(c_not(c_and(c_primitive(picked,0),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0)))),c_primitive(at,0)))
b_empty(c_and(c_not(c_and(c_primitive(picked,0),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0)))),c_primitive(at,0)))
b_empty(c_and(c_not(c_and(c_primitive(picked,0),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0)))),c_primitive(at,0)))
b_empty(c_and(c_not(c_and(c_all(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_primitive(picked,0))),c_primitive(at,0)))
b_empty(c_and(c_not(c_and(c_primitive(picked_g,0),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0)))),c_primitive(at,0)))
b_empty(c_and(c_not(c_and(c_primitive(picked_g,0),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0)))),c_primitive(at,0)))
b_empty(c_and(c_not(c_and(c_primitive(picked_g,0),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0)))),c_primitive(at,0)))
b_empty(c_and(c_not(c_and(c_all(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_primitive(picked_g,0))),c_primitive(at,0)))
b_empty(c_and(c_not(c_some(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0)))),c_primitive(at,0)))
b_empty(c_and(c_not(c_some(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0)))),c_primitive(at,0)))
b_empty(c_and(c_not(c_all(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0)))),c_primitive(at,0)))
b_empty(c_and(c_not(c_all(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0)))),c_primitive(at,0)))
b_empty(c_and(c_not(c_all(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0)))),c_primitive(at,0)))
b_empty(c_and(c_not(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_primitive(reward,0))),c_primitive(at,0)))
b_empty(c_and(c_not(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_primitive(picked,0))),c_primitive(at,0)))
b_empty(c_and(c_all(r_primitive(adjacent,0,1),c_and(c_not(c_primitive(reward,0)),c_primitive(unblocked,0))),c_primitive(at,0)))
b_empty(c_and(c_all(r_primitive(adjacent,0,1),c_and(c_not(c_primitive(picked,0)),c_primitive(unblocked,0))),c_primitive(at,0)))
b_empty(c_and(c_all(r_primitive(adjacent,0,1),c_and(c_not(c_primitive(picked_g,0)),c_primitive(unblocked,0))),c_primitive(at,0)))
b_empty(c_and(c_all(r_inverse(r_restrict(r_primitive(adjacent,0,1),c_primitive(reward,0))),c_primitive(unblocked,0)),c_primitive(at,0)))
b_empty(c_and(c_all(r_inverse(r_restrict(r_primitive(adjacent,0,1),c_primitive(picked,0))),c_primitive(unblocked,0)),c_primitive(at,0)))
b_empty(c_and(c_all(r_inverse(r_restrict(r_primitive(adjacent,0,1),c_primitive(picked_g,0))),c_primitive(unblocked,0)),c_primitive(at,0)))
b_empty(c_and(c_and(c_not(c_primitive(at,0)),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))),c_primitive(reward,0)))
b_empty(c_and(c_and(c_not(c_primitive(at,0)),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))),c_primitive(reward,0)))
b_empty(c_and(c_not(c_and(c_primitive(at,0),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0)))),c_primitive(reward,0)))
b_empty(c_and(c_not(c_and(c_all(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_primitive(at,0))),c_primitive(reward,0)))
b_empty(c_and(c_not(c_some(r_primitive(adjacent,0,1),c_and(c_primitive(at,0),c_primitive(picked,0)))),c_primitive(reward,0)))
b_empty(c_and(c_not(c_some(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(at,0)))),c_primitive(reward,0)))
b_empty(c_and(c_not(c_all(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(at,0)))),c_primitive(reward,0)))
b_empty(c_and(c_not(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_primitive(at,0))),c_primitive(reward,0)))
b_empty(c_and(c_not(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_primitive(picked,0))),c_primitive(reward,0)))
b_empty(c_and(c_not(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(picked,0)),c_primitive(at,0))),c_primitive(reward,0)))
b_empty(c_and(c_not(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(picked_g,0)),c_primitive(at,0))),c_primitive(reward,0)))
b_empty(c_and(c_all(r_inverse(r_restrict(r_primitive(adjacent,0,1),c_primitive(at,0))),c_primitive(unblocked,0)),c_primitive(reward,0)))
b_empty(c_and(c_and(c_not(c_primitive(at,0)),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))),c_primitive(unblocked,0)))
b_empty(c_and(c_and(c_not(c_primitive(reward,0)),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))),c_primitive(unblocked,0)))
b_empty(c_and(c_and(c_all(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_not(c_primitive(reward,0))),c_primitive(unblocked,0)))
b_empty(c_and(c_and(c_all(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_not(c_primitive(picked,0))),c_primitive(unblocked,0)))
b_empty(c_and(c_and(c_not(c_primitive(at,0)),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))),c_primitive(picked,0)))
b_empty(c_and(c_not(c_and(c_primitive(at,0),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0)))),c_primitive(picked,0)))
b_empty(c_and(c_not(c_and(c_all(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_primitive(at,0))),c_primitive(picked,0)))
b_empty(c_and(c_not(c_some(r_primitive(adjacent,0,1),c_and(c_primitive(at,0),c_primitive(reward,0)))),c_primitive(picked,0)))
b_empty(c_and(c_not(c_some(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(at,0)))),c_primitive(picked,0)))
b_empty(c_and(c_not(c_all(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(at,0)))),c_primitive(picked,0)))
b_empty(c_and(c_not(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(picked_g,0)),c_primitive(at,0))),c_primitive(picked,0)))
b_empty(c_and(c_all(r_inverse(r_restrict(r_primitive(adjacent,0,1),c_primitive(at,0))),c_primitive(unblocked,0)),c_primitive(picked,0)))
b_empty(c_and(c_not(c_and(c_primitive(reward,0),c_some(r_primitive(adjacent,0,1),c_primitive(at,0)))),c_primitive(picked_g,0)))
b_empty(c_and(c_not(c_and(c_primitive(picked,0),c_some(r_primitive(adjacent,0,1),c_primitive(at,0)))),c_primitive(picked_g,0)))
b_empty(c_and(c_not(c_some(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(at,0)))),c_primitive(picked_g,0)))
b_empty(c_and(c_all(r_inverse(r_restrict(r_primitive(adjacent,0,1),c_primitive(reward,0))),c_primitive(unblocked,0)),c_primitive(picked_g,0)))
b_empty(c_and(c_all(r_inverse(r_restrict(r_primitive(adjacent,0,1),c_primitive(picked,0))),c_primitive(unblocked,0)),c_primitive(picked_g,0)))
b_empty(c_and(c_all(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0))),c_not(c_primitive(at,0))))
b_empty(c_and(c_all(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))),c_not(c_primitive(at,0))))
b_empty(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(at,0)),c_primitive(reward,0)),c_not(c_primitive(unblocked,0))))
b_empty(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(at,0)),c_primitive(picked,0)),c_not(c_primitive(unblocked,0))))
b_empty(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(at,0)),c_primitive(picked_g,0)),c_not(c_primitive(unblocked,0))))
b_empty(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(reward,0)),c_primitive(at,0)),c_not(c_primitive(unblocked,0))))
b_empty(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(picked,0)),c_primitive(at,0)),c_not(c_primitive(unblocked,0))))
b_empty(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(picked_g,0)),c_primitive(at,0)),c_not(c_primitive(unblocked,0))))
b_empty(c_not(c_some(r_primitive(adjacent,0,1),c_and(c_not(c_primitive(at,0)),c_not(c_primitive(reward,0))))))
b_empty(c_not(c_some(r_primitive(adjacent,0,1),c_and(c_not(c_primitive(at,0)),c_not(c_primitive(picked,0))))))
b_empty(c_not(c_some(r_primitive(adjacent,0,1),c_and(c_not(c_primitive(at,0)),c_not(c_primitive(picked_g,0))))))
b_empty(c_not(c_some(r_transitive_closure(r_primitive(adjacent,0,1)),c_and(c_not(c_primitive(at,0)),c_primitive(reward,0)))))
b_empty(c_not(c_some(r_transitive_closure(r_primitive(adjacent,0,1)),c_and(c_not(c_primitive(at,0)),c_primitive(picked,0)))))
b_empty(c_all(r_primitive(adjacent,0,1),c_and(c_not(c_and(c_primitive(at,0),c_primitive(reward,0))),c_primitive(unblocked,0))))
b_empty(c_all(r_primitive(adjacent,0,1),c_and(c_not(c_and(c_primitive(at,0),c_primitive(picked,0))),c_primitive(unblocked,0))))
b_empty(c_all(r_primitive(adjacent,0,1),c_and(c_not(c_and(c_primitive(at,0),c_primitive(picked_g,0))),c_primitive(unblocked,0))))
b_empty(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_and(c_not(c_primitive(reward,0)),c_primitive(at,0))))
b_empty(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_and(c_not(c_primitive(picked,0)),c_primitive(at,0))))
b_empty(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_and(c_not(c_primitive(picked_g,0)),c_primitive(at,0))))
b_empty(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(picked_g,0)),c_and(c_not(c_primitive(at,0)),c_primitive(reward,0))))
b_empty(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(picked_g,0)),c_and(c_not(c_primitive(at,0)),c_primitive(picked,0))))
Numerical features:
n_count(c_top)
n_count(c_bot)
n_count(c_primitive(at,0))
n_count(c_primitive(reward,0))
n_count(c_primitive(unblocked,0))
n_count(c_primitive(picked,0))
n_count(c_primitive(picked_g,0))
n_count(r_primitive(adjacent,0,1))
n_count(c_not(c_primitive(at,0)))
n_count(c_not(c_primitive(reward,0)))
n_count(c_not(c_primitive(unblocked,0)))
n_count(c_not(c_primitive(picked,0)))
n_count(c_not(c_primitive(picked_g,0)))
n_count(r_transitive_closure(r_primitive(adjacent,0,1)))
n_count(c_and(c_primitive(at,0),c_primitive(reward,0)))
n_count(c_and(c_primitive(at,0),c_primitive(picked,0)))
n_count(c_and(c_primitive(at,0),c_primitive(picked_g,0)))
n_count(c_some(r_primitive(adjacent,0,1),c_primitive(at,0)))
n_count(c_some(r_primitive(adjacent,0,1),c_primitive(reward,0)))
n_count(c_some(r_primitive(adjacent,0,1),c_primitive(picked,0)))
n_count(c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0)))
n_count(c_all(r_primitive(adjacent,0,1),c_primitive(unblocked,0)))
n_count(r_restrict(r_primitive(adjacent,0,1),c_primitive(unblocked,0)))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_bot)
n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_primitive(reward,0))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_primitive(picked,0))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_primitive(picked_g,0))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent_g,0,1),c_primitive(reward,0))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent_g,0,1),c_primitive(picked,0))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent_g,0,1),c_primitive(picked_g,0))
n_count(c_and(c_not(c_primitive(reward,0)),c_primitive(at,0)))
n_count(c_and(c_not(c_primitive(picked,0)),c_primitive(at,0)))
n_count(c_and(c_not(c_primitive(picked_g,0)),c_primitive(at,0)))
n_count(c_and(c_not(c_primitive(at,0)),c_primitive(reward,0)))
n_count(c_and(c_not(c_primitive(at,0)),c_primitive(unblocked,0)))
n_count(c_and(c_not(c_primitive(reward,0)),c_primitive(unblocked,0)))
n_count(c_and(c_not(c_primitive(picked,0)),c_primitive(unblocked,0)))
n_count(c_and(c_not(c_primitive(picked_g,0)),c_primitive(unblocked,0)))
n_count(c_and(c_not(c_primitive(at,0)),c_primitive(picked,0)))
n_count(c_and(c_not(c_primitive(at,0)),c_primitive(picked_g,0)))
n_count(c_not(c_and(c_primitive(at,0),c_primitive(reward,0))))
n_count(c_not(c_and(c_primitive(at,0),c_primitive(picked,0))))
n_count(c_not(c_and(c_primitive(at,0),c_primitive(picked_g,0))))
n_count(c_not(c_some(r_primitive(adjacent,0,1),c_primitive(at,0))))
n_count(c_not(c_some(r_primitive(adjacent,0,1),c_primitive(reward,0))))
n_count(c_not(c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))))
n_count(c_not(c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))))
n_count(c_not(c_all(r_primitive(adjacent,0,1),c_primitive(unblocked,0))))
n_count(c_some(r_transitive_closure(r_primitive(adjacent,0,1)),c_primitive(reward,0)))
n_count(c_some(r_transitive_closure(r_primitive(adjacent,0,1)),c_primitive(picked,0)))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_not(c_primitive(unblocked,0)))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent_g,0,1),c_not(c_primitive(reward,0)))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent_g,0,1),c_not(c_primitive(picked,0)))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent_g,0,1),c_not(c_primitive(picked_g,0)))
n_count(c_and(c_primitive(at,0),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0))))
n_count(c_and(c_primitive(at,0),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))))
n_count(c_and(c_primitive(at,0),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))))
n_count(c_and(c_all(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_primitive(at,0)))
n_count(c_and(c_primitive(reward,0),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0))))
n_count(c_and(c_primitive(reward,0),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))))
n_count(c_and(c_primitive(reward,0),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))))
n_count(c_and(c_all(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_primitive(reward,0)))
n_count(c_and(c_primitive(unblocked,0),c_some(r_primitive(adjacent,0,1),c_primitive(at,0))))
n_count(c_and(c_primitive(unblocked,0),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0))))
n_count(c_and(c_primitive(unblocked,0),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))))
n_count(c_and(c_primitive(unblocked,0),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))))
n_count(c_and(c_all(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_primitive(unblocked,0)))
n_count(c_and(c_primitive(picked,0),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))))
n_count(c_and(c_primitive(picked,0),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))))
n_count(c_and(c_all(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_primitive(picked,0)))
n_count(c_and(c_primitive(picked_g,0),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))))
n_count(c_and(c_all(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_primitive(picked_g,0)))
n_count(c_and(c_not(c_primitive(at,0)),c_not(c_primitive(reward,0))))
n_count(c_and(c_not(c_primitive(at,0)),c_not(c_primitive(picked,0))))
n_count(c_and(c_not(c_primitive(at,0)),c_not(c_primitive(picked_g,0))))
n_count(c_not(c_and(c_not(c_primitive(reward,0)),c_primitive(at,0))))
n_count(c_not(c_and(c_not(c_primitive(picked,0)),c_primitive(at,0))))
n_count(c_not(c_and(c_not(c_primitive(picked_g,0)),c_primitive(at,0))))
n_count(c_not(c_and(c_not(c_primitive(at,0)),c_primitive(reward,0))))
n_count(c_not(c_and(c_not(c_primitive(at,0)),c_primitive(unblocked,0))))
n_count(c_not(c_and(c_not(c_primitive(reward,0)),c_primitive(unblocked,0))))
n_count(c_not(c_and(c_not(c_primitive(picked,0)),c_primitive(unblocked,0))))
n_count(c_not(c_and(c_not(c_primitive(picked_g,0)),c_primitive(unblocked,0))))
n_count(c_not(c_and(c_not(c_primitive(at,0)),c_primitive(picked,0))))
n_count(c_not(c_and(c_not(c_primitive(at,0)),c_primitive(picked_g,0))))
n_count(c_not(c_some(r_transitive_closure(r_primitive(adjacent,0,1)),c_primitive(reward,0))))
n_count(c_not(c_some(r_transitive_closure(r_primitive(adjacent,0,1)),c_primitive(picked,0))))
n_count(c_some(r_primitive(adjacent,0,1),c_and(c_primitive(at,0),c_primitive(reward,0))))
n_count(c_some(r_primitive(adjacent,0,1),c_and(c_primitive(at,0),c_primitive(picked,0))))
n_count(c_some(r_primitive(adjacent,0,1),c_and(c_primitive(at,0),c_primitive(picked_g,0))))
n_count(c_some(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0))))
n_count(c_some(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))))
n_count(c_some(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))))
n_count(c_all(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0))))
n_count(c_all(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))))
n_count(c_all(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))))
n_count(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(at,0)),c_primitive(reward,0)))
n_count(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(at,0)),c_primitive(picked,0)))
n_count(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(at,0)),c_primitive(picked_g,0)))
n_count(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(reward,0)),c_primitive(at,0)))
n_count(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_primitive(at,0)))
n_count(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_primitive(reward,0)))
n_count(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_primitive(picked,0)))
n_count(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(picked,0)),c_primitive(at,0)))
n_count(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(picked_g,0)),c_primitive(at,0)))
n_concept_distance(c_primitive(at,0),r_restrict(r_primitive(adjacent,0,1),c_primitive(reward,0)),c_primitive(reward,0))
n_concept_distance(c_primitive(at,0),r_restrict(r_primitive(adjacent,0,1),c_primitive(reward,0)),c_primitive(picked_g,0))
n_concept_distance(c_primitive(at,0),r_restrict(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_primitive(reward,0))
n_concept_distance(c_primitive(at,0),r_restrict(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_primitive(picked,0))
n_concept_distance(c_primitive(at,0),r_restrict(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_primitive(picked_g,0))
n_concept_distance(c_primitive(at,0),r_restrict(r_primitive(adjacent,0,1),c_primitive(picked,0)),c_primitive(picked,0))
n_concept_distance(c_primitive(at,0),r_restrict(r_primitive(adjacent,0,1),c_primitive(picked,0)),c_primitive(picked_g,0))
n_concept_distance(c_primitive(at,0),r_restrict(r_primitive(adjacent,0,1),c_primitive(picked_g,0)),c_primitive(reward,0))
n_concept_distance(c_primitive(at,0),r_restrict(r_primitive(adjacent,0,1),c_primitive(picked_g,0)),c_primitive(picked,0))
n_concept_distance(c_primitive(at,0),r_restrict(r_primitive(adjacent,0,1),c_primitive(picked_g,0)),c_primitive(picked_g,0))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0)))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0)))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0)))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_all(r_primitive(adjacent,0,1),c_primitive(unblocked,0)))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent_g,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0)))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent_g,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0)))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent_g,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0)))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent_g,0,1),c_all(r_primitive(adjacent,0,1),c_primitive(unblocked,0)))
n_count(c_and(c_not(c_some(r_primitive(adjacent,0,1),c_primitive(reward,0))),c_primitive(at,0)))
n_count(c_and(c_not(c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))),c_primitive(at,0)))
n_count(c_and(c_not(c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))),c_primitive(at,0)))
n_count(c_and(c_primitive(at,0),c_some(r_transitive_closure(r_primitive(adjacent,0,1)),c_primitive(reward,0))))
n_count(c_and(c_primitive(at,0),c_some(r_transitive_closure(r_primitive(adjacent,0,1)),c_primitive(picked,0))))
n_count(c_and(c_not(c_some(r_primitive(adjacent,0,1),c_primitive(at,0))),c_primitive(reward,0)))
n_count(c_and(c_not(c_some(r_primitive(adjacent,0,1),c_primitive(reward,0))),c_primitive(reward,0)))
n_count(c_and(c_not(c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))),c_primitive(reward,0)))
n_count(c_and(c_not(c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))),c_primitive(reward,0)))
n_count(c_and(c_not(c_all(r_primitive(adjacent,0,1),c_primitive(unblocked,0))),c_primitive(reward,0)))
n_count(c_and(c_not(c_and(c_primitive(at,0),c_primitive(reward,0))),c_primitive(unblocked,0)))
n_count(c_and(c_not(c_and(c_primitive(at,0),c_primitive(picked,0))),c_primitive(unblocked,0)))
n_count(c_and(c_not(c_and(c_primitive(at,0),c_primitive(picked_g,0))),c_primitive(unblocked,0)))
n_count(c_and(c_not(c_some(r_primitive(adjacent,0,1),c_primitive(at,0))),c_primitive(unblocked,0)))
n_count(c_and(c_not(c_some(r_primitive(adjacent,0,1),c_primitive(reward,0))),c_primitive(unblocked,0)))
n_count(c_and(c_not(c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))),c_primitive(unblocked,0)))
n_count(c_and(c_not(c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))),c_primitive(unblocked,0)))
n_count(c_and(c_primitive(unblocked,0),c_some(r_transitive_closure(r_primitive(adjacent,0,1)),c_primitive(reward,0))))
n_count(c_and(c_primitive(unblocked,0),c_some(r_transitive_closure(r_primitive(adjacent,0,1)),c_primitive(picked,0))))
n_count(c_and(c_not(c_some(r_primitive(adjacent,0,1),c_primitive(at,0))),c_primitive(picked,0)))
n_count(c_and(c_not(c_some(r_primitive(adjacent,0,1),c_primitive(reward,0))),c_primitive(picked,0)))
n_count(c_and(c_not(c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))),c_primitive(picked,0)))
n_count(c_and(c_not(c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))),c_primitive(picked,0)))
n_count(c_and(c_not(c_all(r_primitive(adjacent,0,1),c_primitive(unblocked,0))),c_primitive(picked,0)))
n_count(c_and(c_not(c_and(c_primitive(at,0),c_primitive(reward,0))),c_primitive(picked_g,0)))
n_count(c_and(c_not(c_and(c_primitive(at,0),c_primitive(picked,0))),c_primitive(picked_g,0)))
n_count(c_and(c_not(c_some(r_primitive(adjacent,0,1),c_primitive(at,0))),c_primitive(picked_g,0)))
n_count(c_and(c_not(c_some(r_primitive(adjacent,0,1),c_primitive(reward,0))),c_primitive(picked_g,0)))
n_count(c_and(c_not(c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))),c_primitive(picked_g,0)))
n_count(c_and(c_not(c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))),c_primitive(picked_g,0)))
n_count(c_and(c_primitive(picked_g,0),c_some(r_transitive_closure(r_primitive(adjacent,0,1)),c_primitive(reward,0))))
n_count(c_and(c_primitive(picked_g,0),c_some(r_transitive_closure(r_primitive(adjacent,0,1)),c_primitive(picked,0))))
n_count(c_and(c_not(c_primitive(at,0)),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0))))
n_count(c_and(c_not(c_primitive(at,0)),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))))
n_count(c_and(c_not(c_primitive(at,0)),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))))
n_count(c_and(c_all(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_not(c_primitive(at,0))))
n_count(c_and(c_not(c_primitive(reward,0)),c_some(r_primitive(adjacent,0,1),c_primitive(at,0))))
n_count(c_and(c_not(c_primitive(reward,0)),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0))))
n_count(c_and(c_not(c_primitive(reward,0)),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))))
n_count(c_and(c_not(c_primitive(reward,0)),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))))
n_count(c_and(c_all(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_not(c_primitive(reward,0))))
n_count(c_and(c_not(c_primitive(unblocked,0)),c_some(r_primitive(adjacent,0,1),c_primitive(at,0))))
n_count(c_and(c_not(c_primitive(picked,0)),c_some(r_primitive(adjacent,0,1),c_primitive(at,0))))
n_count(c_and(c_not(c_primitive(picked,0)),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0))))
n_count(c_and(c_not(c_primitive(picked,0)),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))))
n_count(c_and(c_not(c_primitive(picked,0)),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))))
n_count(c_and(c_all(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_not(c_primitive(picked,0))))
n_count(c_and(c_not(c_primitive(picked_g,0)),c_some(r_primitive(adjacent,0,1),c_primitive(at,0))))
n_count(c_and(c_not(c_primitive(picked_g,0)),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0))))
n_count(c_and(c_not(c_primitive(picked_g,0)),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))))
n_count(c_and(c_all(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_not(c_primitive(picked_g,0))))
n_count(c_not(c_and(c_primitive(at,0),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0)))))
n_count(c_not(c_and(c_primitive(at,0),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0)))))
n_count(c_not(c_and(c_primitive(at,0),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0)))))
n_count(c_not(c_and(c_all(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_primitive(at,0))))
n_count(c_not(c_and(c_primitive(reward,0),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0)))))
n_count(c_not(c_and(c_primitive(reward,0),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0)))))
n_count(c_not(c_and(c_primitive(reward,0),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0)))))
n_count(c_not(c_and(c_all(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_primitive(reward,0))))
n_count(c_not(c_and(c_primitive(unblocked,0),c_some(r_primitive(adjacent,0,1),c_primitive(at,0)))))
n_count(c_not(c_and(c_primitive(unblocked,0),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0)))))
n_count(c_not(c_and(c_primitive(unblocked,0),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0)))))
n_count(c_not(c_and(c_primitive(unblocked,0),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0)))))
n_count(c_not(c_and(c_all(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_primitive(unblocked,0))))
n_count(c_not(c_and(c_primitive(picked,0),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0)))))
n_count(c_not(c_and(c_primitive(picked,0),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0)))))
n_count(c_not(c_and(c_all(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_primitive(picked,0))))
n_count(c_not(c_and(c_primitive(picked_g,0),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0)))))
n_count(c_not(c_and(c_all(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_primitive(picked_g,0))))
n_count(c_not(c_and(c_not(c_primitive(at,0)),c_not(c_primitive(reward,0)))))
n_count(c_not(c_and(c_not(c_primitive(at,0)),c_not(c_primitive(picked,0)))))
n_count(c_not(c_and(c_not(c_primitive(at,0)),c_not(c_primitive(picked_g,0)))))
n_count(c_not(c_some(r_primitive(adjacent,0,1),c_and(c_primitive(at,0),c_primitive(reward,0)))))
n_count(c_not(c_some(r_primitive(adjacent,0,1),c_and(c_primitive(at,0),c_primitive(picked,0)))))
n_count(c_not(c_some(r_primitive(adjacent,0,1),c_and(c_primitive(at,0),c_primitive(picked_g,0)))))
n_count(c_not(c_some(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0)))))
n_count(c_not(c_some(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0)))))
n_count(c_not(c_all(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0)))))
n_count(c_not(c_all(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0)))))
n_count(c_not(c_all(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0)))))
n_count(c_not(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(at,0)),c_primitive(reward,0))))
n_count(c_not(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(at,0)),c_primitive(picked,0))))
n_count(c_not(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(at,0)),c_primitive(picked_g,0))))
n_count(c_not(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(reward,0)),c_primitive(at,0))))
n_count(c_not(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_primitive(at,0))))
n_count(c_not(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_primitive(reward,0))))
n_count(c_not(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_primitive(picked,0))))
n_count(c_not(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(picked,0)),c_primitive(at,0))))
n_count(c_not(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(picked_g,0)),c_primitive(at,0))))
n_count(c_some(r_transitive_closure(r_primitive(adjacent,0,1)),c_and(c_primitive(at,0),c_primitive(reward,0))))
n_count(c_some(r_transitive_closure(r_primitive(adjacent,0,1)),c_and(c_primitive(at,0),c_primitive(picked,0))))
n_count(c_some(r_transitive_closure(r_primitive(adjacent,0,1)),c_and(c_primitive(at,0),c_primitive(picked_g,0))))
n_count(c_all(r_primitive(adjacent,0,1),c_and(c_not(c_primitive(at,0)),c_primitive(unblocked,0))))
n_count(c_all(r_primitive(adjacent,0,1),c_and(c_not(c_primitive(reward,0)),c_primitive(unblocked,0))))
n_count(c_all(r_primitive(adjacent,0,1),c_and(c_not(c_primitive(picked,0)),c_primitive(unblocked,0))))
n_count(c_all(r_primitive(adjacent,0,1),c_and(c_not(c_primitive(picked_g,0)),c_primitive(unblocked,0))))
n_count(c_all(r_transitive_closure(r_primitive(adjacent,0,1)),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0))))
n_count(c_all(r_transitive_closure(r_primitive(adjacent,0,1)),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))))
n_count(c_all(r_transitive_closure(r_primitive(adjacent,0,1)),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))))
n_count(c_all(r_inverse(r_restrict(r_primitive(adjacent,0,1),c_primitive(at,0))),c_primitive(unblocked,0)))
n_count(c_all(r_inverse(r_restrict(r_primitive(adjacent,0,1),c_primitive(reward,0))),c_primitive(unblocked,0)))
n_count(c_all(r_inverse(r_restrict(r_primitive(adjacent,0,1),c_primitive(picked,0))),c_primitive(unblocked,0)))
n_concept_distance(c_primitive(at,0),r_restrict(r_primitive(adjacent,0,1),c_primitive(reward,0)),c_not(c_primitive(at,0)))
n_concept_distance(c_primitive(at,0),r_restrict(r_primitive(adjacent,0,1),c_primitive(reward,0)),c_not(c_primitive(picked,0)))
n_concept_distance(c_primitive(at,0),r_restrict(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_not(c_primitive(reward,0)))
n_concept_distance(c_primitive(at,0),r_restrict(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_not(c_primitive(picked,0)))
n_concept_distance(c_primitive(at,0),r_restrict(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_not(c_primitive(picked_g,0)))
n_concept_distance(c_primitive(at,0),r_restrict(r_primitive(adjacent,0,1),c_primitive(picked,0)),c_not(c_primitive(at,0)))
n_concept_distance(c_primitive(at,0),r_restrict(r_primitive(adjacent,0,1),c_primitive(picked,0)),c_not(c_primitive(reward,0)))
n_concept_distance(c_primitive(at,0),r_restrict(r_primitive(adjacent,0,1),c_primitive(picked_g,0)),c_not(c_primitive(at,0)))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_and(c_not(c_primitive(at,0)),c_primitive(reward,0)))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_and(c_not(c_primitive(at,0)),c_primitive(picked,0)))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_and(c_not(c_primitive(at,0)),c_primitive(picked_g,0)))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_not(c_some(r_primitive(adjacent,0,1),c_primitive(reward,0))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_not(c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_not(c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_some(r_transitive_closure(r_primitive(adjacent,0,1)),c_primitive(reward,0)))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_some(r_transitive_closure(r_primitive(adjacent,0,1)),c_primitive(picked,0)))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent_g,0,1),c_not(c_some(r_primitive(adjacent,0,1),c_primitive(reward,0))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent_g,0,1),c_not(c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent_g,0,1),c_not(c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent_g,0,1),c_not(c_all(r_primitive(adjacent,0,1),c_primitive(unblocked,0))))
n_count(c_and(c_and(c_primitive(reward,0),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0))),c_primitive(at,0)))
n_count(c_and(c_and(c_primitive(reward,0),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))),c_primitive(at,0)))
n_count(c_and(c_and(c_primitive(reward,0),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))),c_primitive(at,0)))
n_count(c_and(c_and(c_all(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_primitive(reward,0)),c_primitive(at,0)))
n_count(c_and(c_and(c_primitive(picked,0),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0))),c_primitive(at,0)))
n_count(c_and(c_and(c_primitive(picked,0),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))),c_primitive(at,0)))
n_count(c_and(c_and(c_primitive(picked,0),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))),c_primitive(at,0)))
n_count(c_and(c_and(c_all(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_primitive(picked,0)),c_primitive(at,0)))
n_count(c_and(c_and(c_primitive(picked_g,0),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0))),c_primitive(at,0)))
n_count(c_and(c_and(c_primitive(picked_g,0),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))),c_primitive(at,0)))
n_count(c_and(c_and(c_primitive(picked_g,0),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))),c_primitive(at,0)))
n_count(c_and(c_and(c_all(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_primitive(picked_g,0)),c_primitive(at,0)))
n_count(c_and(c_not(c_some(r_transitive_closure(r_primitive(adjacent,0,1)),c_primitive(reward,0))),c_primitive(at,0)))
n_count(c_and(c_not(c_some(r_transitive_closure(r_primitive(adjacent,0,1)),c_primitive(picked,0))),c_primitive(at,0)))
n_count(c_and(c_primitive(at,0),c_some(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0)))))
n_count(c_and(c_primitive(at,0),c_some(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0)))))
n_count(c_and(c_primitive(at,0),c_some(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0)))))
n_count(c_and(c_all(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0))),c_primitive(at,0)))
n_count(c_and(c_all(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))),c_primitive(at,0)))
n_count(c_and(c_all(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))),c_primitive(at,0)))
n_count(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_primitive(reward,0)),c_primitive(at,0)))
n_count(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_primitive(picked,0)),c_primitive(at,0)))
n_count(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_primitive(picked_g,0)),c_primitive(at,0)))
n_count(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(at,0)),c_primitive(reward,0)),c_primitive(reward,0)))
n_count(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(at,0)),c_primitive(picked,0)),c_primitive(reward,0)))
n_count(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(at,0)),c_primitive(picked_g,0)),c_primitive(reward,0)))
n_count(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(reward,0)),c_primitive(at,0)),c_primitive(reward,0)))
n_count(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_primitive(at,0)),c_primitive(reward,0)))
n_count(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_primitive(reward,0)),c_primitive(reward,0)))
n_count(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_primitive(picked,0)),c_primitive(reward,0)))
n_count(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_primitive(picked_g,0)),c_primitive(reward,0)))
n_count(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(picked,0)),c_primitive(at,0)),c_primitive(reward,0)))
n_count(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(picked_g,0)),c_primitive(at,0)),c_primitive(reward,0)))
n_count(c_and(c_and(c_not(c_primitive(at,0)),c_not(c_primitive(reward,0))),c_primitive(unblocked,0)))
n_count(c_and(c_and(c_not(c_primitive(at,0)),c_not(c_primitive(picked,0))),c_primitive(unblocked,0)))
n_count(c_and(c_and(c_not(c_primitive(at,0)),c_not(c_primitive(picked_g,0))),c_primitive(unblocked,0)))
n_count(c_and(c_not(c_and(c_not(c_primitive(reward,0)),c_primitive(at,0))),c_primitive(unblocked,0)))
n_count(c_and(c_not(c_and(c_not(c_primitive(picked,0)),c_primitive(at,0))),c_primitive(unblocked,0)))
n_count(c_and(c_not(c_and(c_not(c_primitive(picked_g,0)),c_primitive(at,0))),c_primitive(unblocked,0)))
n_count(c_and(c_not(c_and(c_not(c_primitive(at,0)),c_primitive(reward,0))),c_primitive(unblocked,0)))
n_count(c_and(c_not(c_and(c_not(c_primitive(at,0)),c_primitive(picked,0))),c_primitive(unblocked,0)))
n_count(c_and(c_not(c_and(c_not(c_primitive(at,0)),c_primitive(picked_g,0))),c_primitive(unblocked,0)))
n_count(c_and(c_not(c_some(r_transitive_closure(r_primitive(adjacent,0,1)),c_primitive(reward,0))),c_primitive(unblocked,0)))
n_count(c_and(c_not(c_some(r_transitive_closure(r_primitive(adjacent,0,1)),c_primitive(picked,0))),c_primitive(unblocked,0)))
n_count(c_and(c_primitive(unblocked,0),c_some(r_primitive(adjacent,0,1),c_and(c_primitive(at,0),c_primitive(reward,0)))))
n_count(c_and(c_primitive(unblocked,0),c_some(r_primitive(adjacent,0,1),c_and(c_primitive(at,0),c_primitive(picked,0)))))
n_count(c_and(c_primitive(unblocked,0),c_some(r_primitive(adjacent,0,1),c_and(c_primitive(at,0),c_primitive(picked_g,0)))))
n_count(c_and(c_primitive(unblocked,0),c_some(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(at,0)))))
n_count(c_and(c_primitive(unblocked,0),c_some(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0)))))
n_count(c_and(c_primitive(unblocked,0),c_some(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0)))))
n_count(c_and(c_primitive(unblocked,0),c_some(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0)))))
n_count(c_and(c_all(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(at,0))),c_primitive(unblocked,0)))
n_count(c_and(c_all(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0))),c_primitive(unblocked,0)))
n_count(c_and(c_all(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))),c_primitive(unblocked,0)))
n_count(c_and(c_all(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))),c_primitive(unblocked,0)))
n_count(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(at,0)),c_primitive(reward,0)),c_primitive(unblocked,0)))
n_count(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(at,0)),c_primitive(picked,0)),c_primitive(unblocked,0)))
n_count(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(at,0)),c_primitive(picked_g,0)),c_primitive(unblocked,0)))
n_count(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(reward,0)),c_primitive(at,0)),c_primitive(unblocked,0)))
n_count(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(picked,0)),c_primitive(at,0)),c_primitive(unblocked,0)))
n_count(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(picked_g,0)),c_primitive(at,0)),c_primitive(unblocked,0)))
n_count(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(at,0)),c_primitive(reward,0)),c_primitive(picked,0)))
n_count(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(at,0)),c_primitive(picked,0)),c_primitive(picked,0)))
n_count(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(at,0)),c_primitive(picked_g,0)),c_primitive(picked,0)))
n_count(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(reward,0)),c_primitive(at,0)),c_primitive(picked,0)))
n_count(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_primitive(at,0)),c_primitive(picked,0)))
n_count(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_primitive(reward,0)),c_primitive(picked,0)))
n_count(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_primitive(picked,0)),c_primitive(picked,0)))
n_count(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_primitive(picked_g,0)),c_primitive(picked,0)))
n_count(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(picked,0)),c_primitive(at,0)),c_primitive(picked,0)))
n_count(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(picked_g,0)),c_primitive(at,0)),c_primitive(picked,0)))
n_count(c_and(c_not(c_and(c_not(c_primitive(at,0)),c_primitive(reward,0))),c_primitive(picked_g,0)))
n_count(c_and(c_not(c_and(c_not(c_primitive(at,0)),c_primitive(picked,0))),c_primitive(picked_g,0)))
n_count(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(at,0)),c_primitive(reward,0)),c_primitive(picked_g,0)))
n_count(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(at,0)),c_primitive(picked,0)),c_primitive(picked_g,0)))
n_count(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(at,0)),c_primitive(picked_g,0)),c_primitive(picked_g,0)))
n_count(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(reward,0)),c_primitive(at,0)),c_primitive(picked_g,0)))
n_count(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(picked,0)),c_primitive(at,0)),c_primitive(picked_g,0)))
n_count(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(picked_g,0)),c_primitive(at,0)),c_primitive(picked_g,0)))
n_count(c_and(c_not(c_primitive(at,0)),c_not(c_some(r_primitive(adjacent,0,1),c_primitive(at,0)))))
n_count(c_and(c_not(c_primitive(at,0)),c_not(c_some(r_primitive(adjacent,0,1),c_primitive(reward,0)))))
n_count(c_and(c_not(c_primitive(at,0)),c_not(c_some(r_primitive(adjacent,0,1),c_primitive(picked,0)))))
n_count(c_and(c_not(c_primitive(at,0)),c_not(c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0)))))
n_count(c_and(c_not(c_all(r_primitive(adjacent,0,1),c_primitive(unblocked,0))),c_not(c_primitive(at,0))))
n_count(c_and(c_not(c_primitive(at,0)),c_some(r_transitive_closure(r_primitive(adjacent,0,1)),c_primitive(reward,0))))
n_count(c_and(c_not(c_primitive(at,0)),c_some(r_transitive_closure(r_primitive(adjacent,0,1)),c_primitive(picked,0))))
n_count(c_and(c_not(c_and(c_primitive(at,0),c_primitive(picked,0))),c_not(c_primitive(reward,0))))
n_count(c_and(c_not(c_primitive(reward,0)),c_not(c_some(r_primitive(adjacent,0,1),c_primitive(at,0)))))
n_count(c_and(c_not(c_primitive(reward,0)),c_not(c_some(r_primitive(adjacent,0,1),c_primitive(reward,0)))))
n_count(c_and(c_not(c_primitive(reward,0)),c_not(c_some(r_primitive(adjacent,0,1),c_primitive(picked,0)))))
n_count(c_and(c_not(c_primitive(reward,0)),c_not(c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0)))))
n_count(c_and(c_not(c_all(r_primitive(adjacent,0,1),c_primitive(unblocked,0))),c_not(c_primitive(reward,0))))
n_count(c_and(c_not(c_primitive(reward,0)),c_some(r_transitive_closure(r_primitive(adjacent,0,1)),c_primitive(reward,0))))
n_count(c_and(c_not(c_primitive(reward,0)),c_some(r_transitive_closure(r_primitive(adjacent,0,1)),c_primitive(picked,0))))
n_count(c_and(c_not(c_primitive(unblocked,0)),c_not(c_some(r_primitive(adjacent,0,1),c_primitive(at,0)))))
n_count(c_and(c_not(c_primitive(unblocked,0)),c_not(c_some(r_primitive(adjacent,0,1),c_primitive(reward,0)))))
n_count(c_and(c_not(c_primitive(unblocked,0)),c_not(c_some(r_primitive(adjacent,0,1),c_primitive(picked,0)))))
n_count(c_and(c_not(c_primitive(unblocked,0)),c_some(r_transitive_closure(r_primitive(adjacent,0,1)),c_primitive(reward,0))))
n_count(c_and(c_not(c_primitive(unblocked,0)),c_some(r_transitive_closure(r_primitive(adjacent,0,1)),c_primitive(picked,0))))
n_count(c_and(c_not(c_and(c_primitive(at,0),c_primitive(reward,0))),c_not(c_primitive(picked,0))))
n_count(c_and(c_not(c_primitive(picked,0)),c_not(c_some(r_primitive(adjacent,0,1),c_primitive(at,0)))))
n_count(c_and(c_not(c_primitive(picked,0)),c_not(c_some(r_primitive(adjacent,0,1),c_primitive(reward,0)))))
n_count(c_and(c_not(c_primitive(picked,0)),c_not(c_some(r_primitive(adjacent,0,1),c_primitive(picked,0)))))
n_count(c_and(c_not(c_primitive(picked,0)),c_not(c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0)))))
n_count(c_and(c_not(c_all(r_primitive(adjacent,0,1),c_primitive(unblocked,0))),c_not(c_primitive(picked,0))))
n_count(c_and(c_not(c_primitive(picked,0)),c_some(r_transitive_closure(r_primitive(adjacent,0,1)),c_primitive(reward,0))))
n_count(c_and(c_not(c_primitive(picked,0)),c_some(r_transitive_closure(r_primitive(adjacent,0,1)),c_primitive(picked,0))))
n_count(c_and(c_not(c_primitive(picked_g,0)),c_not(c_some(r_primitive(adjacent,0,1),c_primitive(at,0)))))
n_count(c_and(c_not(c_primitive(picked_g,0)),c_not(c_some(r_primitive(adjacent,0,1),c_primitive(reward,0)))))
n_count(c_and(c_not(c_primitive(picked_g,0)),c_not(c_some(r_primitive(adjacent,0,1),c_primitive(picked,0)))))
n_count(c_and(c_not(c_primitive(picked_g,0)),c_some(r_transitive_closure(r_primitive(adjacent,0,1)),c_primitive(reward,0))))
n_count(c_and(c_not(c_primitive(picked_g,0)),c_some(r_transitive_closure(r_primitive(adjacent,0,1)),c_primitive(picked,0))))
n_count(c_and(c_some(r_primitive(adjacent,0,1),c_primitive(at,0)),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0))))
n_count(c_and(c_some(r_primitive(adjacent,0,1),c_primitive(at,0)),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))))
n_count(c_and(c_some(r_primitive(adjacent,0,1),c_primitive(at,0)),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))))
n_count(c_and(c_all(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_some(r_primitive(adjacent,0,1),c_primitive(at,0))))
n_count(c_and(c_all(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0))))
n_count(c_and(c_all(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))))
n_count(c_not(c_and(c_not(c_some(r_primitive(adjacent,0,1),c_primitive(reward,0))),c_primitive(at,0))))
n_count(c_not(c_and(c_not(c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))),c_primitive(at,0))))
n_count(c_not(c_and(c_not(c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))),c_primitive(at,0))))
n_count(c_not(c_and(c_primitive(at,0),c_some(r_transitive_closure(r_primitive(adjacent,0,1)),c_primitive(reward,0)))))
n_count(c_not(c_and(c_primitive(at,0),c_some(r_transitive_closure(r_primitive(adjacent,0,1)),c_primitive(picked,0)))))
n_count(c_not(c_and(c_not(c_some(r_primitive(adjacent,0,1),c_primitive(at,0))),c_primitive(reward,0))))
n_count(c_not(c_and(c_not(c_some(r_primitive(adjacent,0,1),c_primitive(reward,0))),c_primitive(reward,0))))
n_count(c_not(c_and(c_not(c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))),c_primitive(reward,0))))
n_count(c_not(c_and(c_not(c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))),c_primitive(reward,0))))
n_count(c_not(c_and(c_not(c_and(c_primitive(at,0),c_primitive(reward,0))),c_primitive(unblocked,0))))
n_count(c_not(c_and(c_not(c_and(c_primitive(at,0),c_primitive(picked,0))),c_primitive(unblocked,0))))
n_count(c_not(c_and(c_not(c_and(c_primitive(at,0),c_primitive(picked_g,0))),c_primitive(unblocked,0))))
n_count(c_not(c_and(c_not(c_some(r_primitive(adjacent,0,1),c_primitive(at,0))),c_primitive(unblocked,0))))
n_count(c_not(c_and(c_not(c_some(r_primitive(adjacent,0,1),c_primitive(reward,0))),c_primitive(unblocked,0))))
n_count(c_not(c_and(c_not(c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))),c_primitive(unblocked,0))))
n_count(c_not(c_and(c_primitive(unblocked,0),c_some(r_transitive_closure(r_primitive(adjacent,0,1)),c_primitive(reward,0)))))
n_count(c_not(c_and(c_primitive(unblocked,0),c_some(r_transitive_closure(r_primitive(adjacent,0,1)),c_primitive(picked,0)))))
n_count(c_not(c_and(c_not(c_some(r_primitive(adjacent,0,1),c_primitive(at,0))),c_primitive(picked,0))))
n_count(c_not(c_and(c_not(c_some(r_primitive(adjacent,0,1),c_primitive(reward,0))),c_primitive(picked,0))))
n_count(c_not(c_and(c_not(c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))),c_primitive(picked,0))))
n_count(c_not(c_and(c_not(c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))),c_primitive(picked,0))))
n_count(c_not(c_and(c_not(c_and(c_primitive(at,0),c_primitive(reward,0))),c_primitive(picked_g,0))))
n_count(c_not(c_and(c_not(c_and(c_primitive(at,0),c_primitive(picked,0))),c_primitive(picked_g,0))))
n_count(c_not(c_and(c_not(c_some(r_primitive(adjacent,0,1),c_primitive(at,0))),c_primitive(picked_g,0))))
n_count(c_not(c_and(c_not(c_some(r_primitive(adjacent,0,1),c_primitive(reward,0))),c_primitive(picked_g,0))))
n_count(c_not(c_and(c_not(c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))),c_primitive(picked_g,0))))
n_count(c_not(c_and(c_not(c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))),c_primitive(picked_g,0))))
n_count(c_not(c_and(c_primitive(picked_g,0),c_some(r_transitive_closure(r_primitive(adjacent,0,1)),c_primitive(reward,0)))))
n_count(c_not(c_and(c_primitive(picked_g,0),c_some(r_transitive_closure(r_primitive(adjacent,0,1)),c_primitive(picked,0)))))
n_count(c_not(c_and(c_not(c_primitive(at,0)),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0)))))
n_count(c_not(c_and(c_not(c_primitive(at,0)),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0)))))
n_count(c_not(c_and(c_not(c_primitive(at,0)),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0)))))
n_count(c_not(c_and(c_all(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_not(c_primitive(at,0)))))
n_count(c_not(c_and(c_not(c_primitive(reward,0)),c_some(r_primitive(adjacent,0,1),c_primitive(at,0)))))
n_count(c_not(c_and(c_not(c_primitive(reward,0)),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0)))))
n_count(c_not(c_and(c_not(c_primitive(reward,0)),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0)))))
n_count(c_not(c_and(c_not(c_primitive(reward,0)),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0)))))
n_count(c_not(c_and(c_all(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_not(c_primitive(reward,0)))))
n_count(c_not(c_and(c_not(c_primitive(unblocked,0)),c_some(r_primitive(adjacent,0,1),c_primitive(at,0)))))
n_count(c_not(c_and(c_not(c_primitive(picked,0)),c_some(r_primitive(adjacent,0,1),c_primitive(at,0)))))
n_count(c_not(c_and(c_not(c_primitive(picked,0)),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0)))))
n_count(c_not(c_and(c_not(c_primitive(picked,0)),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0)))))
n_count(c_not(c_and(c_not(c_primitive(picked,0)),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0)))))
n_count(c_not(c_and(c_all(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_not(c_primitive(picked,0)))))
n_count(c_not(c_and(c_not(c_primitive(picked_g,0)),c_some(r_primitive(adjacent,0,1),c_primitive(at,0)))))
n_count(c_not(c_and(c_not(c_primitive(picked_g,0)),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0)))))
n_count(c_not(c_and(c_not(c_primitive(picked_g,0)),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0)))))
n_count(c_not(c_some(r_transitive_closure(r_primitive(adjacent,0,1)),c_and(c_primitive(at,0),c_primitive(reward,0)))))
n_count(c_not(c_some(r_transitive_closure(r_primitive(adjacent,0,1)),c_and(c_primitive(at,0),c_primitive(picked,0)))))
n_count(c_not(c_some(r_transitive_closure(r_primitive(adjacent,0,1)),c_and(c_primitive(at,0),c_primitive(picked_g,0)))))
n_count(c_not(c_all(r_primitive(adjacent,0,1),c_and(c_not(c_primitive(at,0)),c_primitive(unblocked,0)))))
n_count(c_not(c_all(r_primitive(adjacent,0,1),c_and(c_not(c_primitive(reward,0)),c_primitive(unblocked,0)))))
n_count(c_not(c_all(r_primitive(adjacent,0,1),c_and(c_not(c_primitive(picked,0)),c_primitive(unblocked,0)))))
n_count(c_not(c_all(r_primitive(adjacent,0,1),c_and(c_not(c_primitive(picked_g,0)),c_primitive(unblocked,0)))))
n_count(c_not(c_all(r_transitive_closure(r_primitive(adjacent,0,1)),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0)))))
n_count(c_not(c_all(r_transitive_closure(r_primitive(adjacent,0,1)),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0)))))
n_count(c_not(c_all(r_transitive_closure(r_primitive(adjacent,0,1)),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0)))))
n_count(c_some(r_primitive(adjacent,0,1),c_and(c_primitive(at,0),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0)))))
n_count(c_some(r_primitive(adjacent,0,1),c_and(c_primitive(at,0),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0)))))
n_count(c_some(r_primitive(adjacent,0,1),c_and(c_primitive(at,0),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0)))))
n_count(c_some(r_primitive(adjacent,0,1),c_and(c_all(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_primitive(at,0))))
n_count(c_some(r_primitive(adjacent,0,1),c_and(c_primitive(reward,0),c_some(r_primitive(adjacent,0,1),c_primitive(at,0)))))
n_count(c_some(r_primitive(adjacent,0,1),c_and(c_primitive(reward,0),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0)))))
n_count(c_some(r_primitive(adjacent,0,1),c_and(c_primitive(reward,0),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0)))))
n_count(c_some(r_primitive(adjacent,0,1),c_and(c_primitive(unblocked,0),c_some(r_primitive(adjacent,0,1),c_primitive(at,0)))))
n_count(c_some(r_primitive(adjacent,0,1),c_and(c_primitive(picked,0),c_some(r_primitive(adjacent,0,1),c_primitive(at,0)))))
n_count(c_some(r_primitive(adjacent,0,1),c_and(c_primitive(picked,0),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0)))))
n_count(c_some(r_primitive(adjacent,0,1),c_and(c_primitive(picked_g,0),c_some(r_primitive(adjacent,0,1),c_primitive(at,0)))))
n_count(c_some(r_primitive(adjacent,0,1),c_and(c_not(c_primitive(at,0)),c_not(c_primitive(reward,0)))))
n_count(c_some(r_primitive(adjacent,0,1),c_and(c_not(c_primitive(at,0)),c_not(c_primitive(picked,0)))))
n_count(c_some(r_primitive(adjacent,0,1),c_and(c_not(c_primitive(at,0)),c_not(c_primitive(picked_g,0)))))
n_count(c_some(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_and(c_primitive(at,0),c_primitive(reward,0)))))
n_count(c_some(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_and(c_primitive(at,0),c_primitive(picked,0)))))
n_count(c_some(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_and(c_primitive(at,0),c_primitive(picked_g,0)))))
n_count(c_some(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(at,0)))))
n_count(c_some(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0)))))
n_count(c_some(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0)))))
n_count(c_some(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0)))))
n_count(c_some(r_primitive(adjacent,0,1),c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(at,0)),c_primitive(reward,0))))
n_count(c_some(r_primitive(adjacent,0,1),c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(at,0)),c_primitive(picked,0))))
n_count(c_some(r_primitive(adjacent,0,1),c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(at,0)),c_primitive(picked_g,0))))
n_count(c_some(r_primitive(adjacent,0,1),c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(reward,0)),c_primitive(at,0))))
n_count(c_some(r_primitive(adjacent,0,1),c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_primitive(at,0))))
n_count(c_some(r_primitive(adjacent,0,1),c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(picked,0)),c_primitive(at,0))))
n_count(c_some(r_primitive(adjacent,0,1),c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(picked_g,0)),c_primitive(at,0))))
n_count(c_some(r_transitive_closure(r_primitive(adjacent,0,1)),c_and(c_not(c_primitive(at,0)),c_primitive(reward,0))))
n_count(c_some(r_transitive_closure(r_primitive(adjacent,0,1)),c_and(c_not(c_primitive(at,0)),c_primitive(picked,0))))
n_count(c_some(r_transitive_closure(r_primitive(adjacent,0,1)),c_and(c_not(c_primitive(at,0)),c_primitive(picked_g,0))))
n_count(c_all(r_primitive(adjacent,0,1),c_and(c_primitive(unblocked,0),c_some(r_primitive(adjacent,0,1),c_primitive(at,0)))))
n_count(c_all(r_primitive(adjacent,0,1),c_and(c_not(c_primitive(at,0)),c_not(c_primitive(reward,0)))))
n_count(c_all(r_primitive(adjacent,0,1),c_and(c_not(c_primitive(at,0)),c_not(c_primitive(picked,0)))))
n_count(c_all(r_primitive(adjacent,0,1),c_and(c_not(c_primitive(at,0)),c_not(c_primitive(picked_g,0)))))
n_count(c_all(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_and(c_primitive(at,0),c_primitive(reward,0)))))
n_count(c_all(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_and(c_primitive(at,0),c_primitive(picked,0)))))
n_count(c_all(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_and(c_primitive(at,0),c_primitive(picked_g,0)))))
n_count(c_all(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(at,0)))))
n_count(c_all(r_primitive(adjacent,0,1),c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(at,0)),c_primitive(reward,0))))
n_count(c_all(r_primitive(adjacent,0,1),c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(at,0)),c_primitive(picked,0))))
n_count(c_all(r_primitive(adjacent,0,1),c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(at,0)),c_primitive(picked_g,0))))
n_count(c_all(r_primitive(adjacent,0,1),c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(reward,0)),c_primitive(at,0))))
n_count(c_all(r_primitive(adjacent,0,1),c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_primitive(at,0))))
n_count(c_all(r_primitive(adjacent,0,1),c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(picked,0)),c_primitive(at,0))))
n_count(c_all(r_primitive(adjacent,0,1),c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(picked_g,0)),c_primitive(at,0))))
n_count(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(at,0)),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0))))
n_count(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(at,0)),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))))
n_count(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(at,0)),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))))
n_count(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(at,0)),c_all(r_primitive(adjacent,0,1),c_primitive(unblocked,0))))
n_count(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(reward,0)),c_some(r_primitive(adjacent,0,1),c_primitive(at,0))))
n_count(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(reward,0)),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0))))
n_count(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(reward,0)),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))))
n_count(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(reward,0)),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))))
n_count(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(reward,0)),c_all(r_primitive(adjacent,0,1),c_primitive(unblocked,0))))
n_count(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_and(c_primitive(at,0),c_primitive(reward,0))))
n_count(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_and(c_primitive(at,0),c_primitive(picked,0))))
n_count(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_some(r_primitive(adjacent,0,1),c_primitive(at,0))))
n_count(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0))))
n_count(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))))
n_count(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))))
n_count(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(picked,0)),c_some(r_primitive(adjacent,0,1),c_primitive(at,0))))
n_count(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(picked,0)),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0))))
n_count(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(picked,0)),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))))
n_count(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(picked,0)),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))))
n_count(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(picked,0)),c_all(r_primitive(adjacent,0,1),c_primitive(unblocked,0))))
n_count(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(picked_g,0)),c_and(c_primitive(at,0),c_primitive(reward,0))))
n_count(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(picked_g,0)),c_and(c_primitive(at,0),c_primitive(picked,0))))
n_count(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(picked_g,0)),c_some(r_primitive(adjacent,0,1),c_primitive(at,0))))
n_count(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(picked_g,0)),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0))))
n_count(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(picked_g,0)),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))))
n_count(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(picked_g,0)),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))))
n_concept_distance(c_primitive(at,0),r_restrict(r_primitive(adjacent,0,1),c_primitive(reward,0)),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0)))
n_concept_distance(c_primitive(at,0),r_restrict(r_primitive(adjacent,0,1),c_primitive(reward,0)),c_all(r_primitive(adjacent,0,1),c_primitive(unblocked,0)))
n_concept_distance(c_primitive(at,0),r_restrict(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0)))
n_concept_distance(c_primitive(at,0),r_restrict(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0)))
n_concept_distance(c_primitive(at,0),r_restrict(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0)))
n_concept_distance(c_primitive(at,0),r_restrict(r_primitive(adjacent,0,1),c_primitive(picked,0)),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0)))
n_concept_distance(c_primitive(at,0),r_restrict(r_primitive(adjacent,0,1),c_primitive(picked,0)),c_all(r_primitive(adjacent,0,1),c_primitive(unblocked,0)))
n_concept_distance(c_primitive(at,0),r_restrict(r_primitive(adjacent,0,1),c_primitive(picked_g,0)),c_all(r_primitive(adjacent,0,1),c_primitive(unblocked,0)))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_and(c_primitive(reward,0),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_and(c_primitive(reward,0),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_and(c_primitive(reward,0),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_and(c_all(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_primitive(reward,0)))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_and(c_primitive(picked,0),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_and(c_primitive(picked,0),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_and(c_primitive(picked,0),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_and(c_all(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_primitive(picked,0)))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_and(c_primitive(picked_g,0),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_and(c_primitive(picked_g,0),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_and(c_primitive(picked_g,0),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_and(c_all(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_primitive(picked_g,0)))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_not(c_and(c_not(c_primitive(reward,0)),c_primitive(unblocked,0))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_not(c_and(c_not(c_primitive(picked,0)),c_primitive(unblocked,0))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_not(c_and(c_not(c_primitive(picked_g,0)),c_primitive(unblocked,0))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_not(c_some(r_transitive_closure(r_primitive(adjacent,0,1)),c_primitive(reward,0))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_not(c_some(r_transitive_closure(r_primitive(adjacent,0,1)),c_primitive(picked,0))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_and(c_primitive(at,0),c_primitive(reward,0))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_and(c_primitive(at,0),c_primitive(picked,0))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_and(c_primitive(at,0),c_primitive(picked_g,0))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_all(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_all(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_all(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(reward,0)),c_primitive(at,0)))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_primitive(at,0)))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_primitive(reward,0)))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_primitive(picked,0)))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_primitive(picked_g,0)))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(picked,0)),c_primitive(at,0)))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(picked_g,0)),c_primitive(at,0)))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent_g,0,1),c_and(c_primitive(reward,0),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent_g,0,1),c_and(c_primitive(reward,0),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent_g,0,1),c_and(c_primitive(reward,0),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent_g,0,1),c_and(c_all(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_primitive(reward,0)))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent_g,0,1),c_and(c_primitive(picked,0),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent_g,0,1),c_and(c_primitive(picked,0),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent_g,0,1),c_and(c_primitive(picked,0),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent_g,0,1),c_and(c_all(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_primitive(picked,0)))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent_g,0,1),c_and(c_primitive(picked_g,0),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent_g,0,1),c_and(c_primitive(picked_g,0),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent_g,0,1),c_and(c_primitive(picked_g,0),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent_g,0,1),c_and(c_all(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_primitive(picked_g,0)))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent_g,0,1),c_some(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent_g,0,1),c_some(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent_g,0,1),c_some(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent_g,0,1),c_all(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent_g,0,1),c_all(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent_g,0,1),c_all(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent_g,0,1),c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_primitive(reward,0)))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent_g,0,1),c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_primitive(picked,0)))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent_g,0,1),c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_primitive(picked_g,0)))
n_count(c_and(c_and(c_not(c_some(r_primitive(adjacent,0,1),c_primitive(reward,0))),c_primitive(reward,0)),c_primitive(at,0)))
n_count(c_and(c_and(c_not(c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))),c_primitive(reward,0)),c_primitive(at,0)))
n_count(c_and(c_and(c_not(c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))),c_primitive(reward,0)),c_primitive(at,0)))
n_count(c_and(c_and(c_not(c_all(r_primitive(adjacent,0,1),c_primitive(unblocked,0))),c_primitive(reward,0)),c_primitive(at,0)))
n_count(c_and(c_and(c_not(c_some(r_primitive(adjacent,0,1),c_primitive(reward,0))),c_primitive(picked,0)),c_primitive(at,0)))
n_count(c_and(c_and(c_not(c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))),c_primitive(picked,0)),c_primitive(at,0)))
n_count(c_and(c_and(c_not(c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))),c_primitive(picked,0)),c_primitive(at,0)))
n_count(c_and(c_and(c_not(c_all(r_primitive(adjacent,0,1),c_primitive(unblocked,0))),c_primitive(picked,0)),c_primitive(at,0)))
n_count(c_and(c_and(c_not(c_some(r_primitive(adjacent,0,1),c_primitive(reward,0))),c_primitive(picked_g,0)),c_primitive(at,0)))
n_count(c_and(c_and(c_not(c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))),c_primitive(picked_g,0)),c_primitive(at,0)))
n_count(c_and(c_and(c_not(c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))),c_primitive(picked_g,0)),c_primitive(at,0)))
n_count(c_and(c_and(c_not(c_all(r_primitive(adjacent,0,1),c_primitive(unblocked,0))),c_primitive(picked_g,0)),c_primitive(at,0)))
n_count(c_and(c_and(c_primitive(picked_g,0),c_some(r_transitive_closure(r_primitive(adjacent,0,1)),c_primitive(reward,0))),c_primitive(at,0)))
n_count(c_and(c_and(c_primitive(picked_g,0),c_some(r_transitive_closure(r_primitive(adjacent,0,1)),c_primitive(picked,0))),c_primitive(at,0)))
n_count(c_and(c_and(c_not(c_primitive(reward,0)),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0))),c_primitive(at,0)))
n_count(c_and(c_and(c_not(c_primitive(reward,0)),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))),c_primitive(at,0)))
n_count(c_and(c_and(c_not(c_primitive(reward,0)),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))),c_primitive(at,0)))
n_count(c_and(c_and(c_all(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_not(c_primitive(reward,0))),c_primitive(at,0)))
n_count(c_and(c_and(c_not(c_primitive(picked,0)),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0))),c_primitive(at,0)))
n_count(c_and(c_and(c_not(c_primitive(picked,0)),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))),c_primitive(at,0)))
n_count(c_and(c_and(c_not(c_primitive(picked,0)),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))),c_primitive(at,0)))
n_count(c_and(c_and(c_all(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_not(c_primitive(picked,0))),c_primitive(at,0)))
n_count(c_and(c_and(c_not(c_primitive(picked_g,0)),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0))),c_primitive(at,0)))
n_count(c_and(c_and(c_not(c_primitive(picked_g,0)),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))),c_primitive(at,0)))
n_count(c_and(c_and(c_not(c_primitive(picked_g,0)),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))),c_primitive(at,0)))
n_count(c_and(c_not(c_and(c_primitive(reward,0),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0)))),c_primitive(at,0)))
n_count(c_and(c_not(c_and(c_primitive(reward,0),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0)))),c_primitive(at,0)))
n_count(c_and(c_not(c_and(c_primitive(reward,0),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0)))),c_primitive(at,0)))
n_count(c_and(c_not(c_and(c_all(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_primitive(reward,0))),c_primitive(at,0)))
n_count(c_and(c_not(c_and(c_primitive(picked,0),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0)))),c_primitive(at,0)))
n_count(c_and(c_not(c_and(c_primitive(picked,0),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0)))),c_primitive(at,0)))
n_count(c_and(c_not(c_and(c_primitive(picked,0),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0)))),c_primitive(at,0)))
n_count(c_and(c_not(c_and(c_all(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_primitive(picked,0))),c_primitive(at,0)))
n_count(c_and(c_not(c_and(c_primitive(picked_g,0),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0)))),c_primitive(at,0)))
n_count(c_and(c_not(c_and(c_primitive(picked_g,0),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0)))),c_primitive(at,0)))
n_count(c_and(c_not(c_and(c_primitive(picked_g,0),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0)))),c_primitive(at,0)))
n_count(c_and(c_not(c_and(c_all(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_primitive(picked_g,0))),c_primitive(at,0)))
n_count(c_and(c_not(c_some(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0)))),c_primitive(at,0)))
n_count(c_and(c_not(c_some(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0)))),c_primitive(at,0)))
n_count(c_and(c_not(c_all(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0)))),c_primitive(at,0)))
n_count(c_and(c_not(c_all(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0)))),c_primitive(at,0)))
n_count(c_and(c_not(c_all(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0)))),c_primitive(at,0)))
n_count(c_and(c_not(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_primitive(reward,0))),c_primitive(at,0)))
n_count(c_and(c_not(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_primitive(picked,0))),c_primitive(at,0)))
n_count(c_and(c_not(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_primitive(picked_g,0))),c_primitive(at,0)))
n_count(c_and(c_all(r_primitive(adjacent,0,1),c_and(c_not(c_primitive(reward,0)),c_primitive(unblocked,0))),c_primitive(at,0)))
n_count(c_and(c_all(r_primitive(adjacent,0,1),c_and(c_not(c_primitive(picked,0)),c_primitive(unblocked,0))),c_primitive(at,0)))
n_count(c_and(c_all(r_primitive(adjacent,0,1),c_and(c_not(c_primitive(picked_g,0)),c_primitive(unblocked,0))),c_primitive(at,0)))
n_count(c_and(c_all(r_inverse(r_restrict(r_primitive(adjacent,0,1),c_primitive(reward,0))),c_primitive(unblocked,0)),c_primitive(at,0)))
n_count(c_and(c_all(r_inverse(r_restrict(r_primitive(adjacent,0,1),c_primitive(picked,0))),c_primitive(unblocked,0)),c_primitive(at,0)))
n_count(c_and(c_all(r_inverse(r_restrict(r_primitive(adjacent,0,1),c_primitive(picked_g,0))),c_primitive(unblocked,0)),c_primitive(at,0)))
n_count(c_and(c_and(c_not(c_primitive(at,0)),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0))),c_primitive(reward,0)))
n_count(c_and(c_and(c_not(c_primitive(at,0)),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))),c_primitive(reward,0)))
n_count(c_and(c_and(c_not(c_primitive(at,0)),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))),c_primitive(reward,0)))
n_count(c_and(c_not(c_and(c_primitive(at,0),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0)))),c_primitive(reward,0)))
n_count(c_and(c_not(c_and(c_primitive(at,0),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0)))),c_primitive(reward,0)))
n_count(c_and(c_not(c_and(c_primitive(at,0),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0)))),c_primitive(reward,0)))
n_count(c_and(c_not(c_and(c_all(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_primitive(at,0))),c_primitive(reward,0)))
n_count(c_and(c_not(c_some(r_primitive(adjacent,0,1),c_and(c_primitive(at,0),c_primitive(picked,0)))),c_primitive(reward,0)))
n_count(c_and(c_not(c_some(r_primitive(adjacent,0,1),c_and(c_primitive(at,0),c_primitive(picked_g,0)))),c_primitive(reward,0)))
n_count(c_and(c_not(c_some(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(at,0)))),c_primitive(reward,0)))
n_count(c_and(c_not(c_all(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(at,0)))),c_primitive(reward,0)))
n_count(c_and(c_not(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_primitive(at,0))),c_primitive(reward,0)))
n_count(c_and(c_not(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_primitive(picked,0))),c_primitive(reward,0)))
n_count(c_and(c_not(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_primitive(picked_g,0))),c_primitive(reward,0)))
n_count(c_and(c_not(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(picked,0)),c_primitive(at,0))),c_primitive(reward,0)))
n_count(c_and(c_not(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(picked_g,0)),c_primitive(at,0))),c_primitive(reward,0)))
n_count(c_and(c_primitive(reward,0),c_some(r_transitive_closure(r_primitive(adjacent,0,1)),c_and(c_primitive(at,0),c_primitive(reward,0)))))
n_count(c_and(c_primitive(reward,0),c_some(r_transitive_closure(r_primitive(adjacent,0,1)),c_and(c_primitive(at,0),c_primitive(picked_g,0)))))
n_count(c_and(c_all(r_inverse(r_restrict(r_primitive(adjacent,0,1),c_primitive(at,0))),c_primitive(unblocked,0)),c_primitive(reward,0)))
n_count(c_and(c_and(c_not(c_primitive(at,0)),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0))),c_primitive(unblocked,0)))
n_count(c_and(c_and(c_not(c_primitive(at,0)),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))),c_primitive(unblocked,0)))
n_count(c_and(c_and(c_not(c_primitive(at,0)),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))),c_primitive(unblocked,0)))
n_count(c_and(c_and(c_all(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_not(c_primitive(at,0))),c_primitive(unblocked,0)))
n_count(c_and(c_and(c_not(c_primitive(reward,0)),c_some(r_primitive(adjacent,0,1),c_primitive(at,0))),c_primitive(unblocked,0)))
n_count(c_and(c_and(c_not(c_primitive(reward,0)),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0))),c_primitive(unblocked,0)))
n_count(c_and(c_and(c_not(c_primitive(reward,0)),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))),c_primitive(unblocked,0)))
n_count(c_and(c_and(c_not(c_primitive(reward,0)),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))),c_primitive(unblocked,0)))
n_count(c_and(c_and(c_all(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_not(c_primitive(reward,0))),c_primitive(unblocked,0)))
n_count(c_and(c_and(c_not(c_primitive(picked,0)),c_some(r_primitive(adjacent,0,1),c_primitive(at,0))),c_primitive(unblocked,0)))
n_count(c_and(c_and(c_not(c_primitive(picked,0)),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0))),c_primitive(unblocked,0)))
n_count(c_and(c_and(c_not(c_primitive(picked,0)),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))),c_primitive(unblocked,0)))
n_count(c_and(c_and(c_not(c_primitive(picked,0)),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))),c_primitive(unblocked,0)))
n_count(c_and(c_and(c_all(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_not(c_primitive(picked,0))),c_primitive(unblocked,0)))
n_count(c_and(c_and(c_not(c_primitive(picked_g,0)),c_some(r_primitive(adjacent,0,1),c_primitive(at,0))),c_primitive(unblocked,0)))
n_count(c_and(c_and(c_not(c_primitive(picked_g,0)),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0))),c_primitive(unblocked,0)))
n_count(c_and(c_and(c_not(c_primitive(picked_g,0)),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))),c_primitive(unblocked,0)))
n_count(c_and(c_and(c_all(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_not(c_primitive(picked_g,0))),c_primitive(unblocked,0)))
n_count(c_and(c_not(c_and(c_primitive(at,0),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0)))),c_primitive(unblocked,0)))
n_count(c_and(c_not(c_and(c_primitive(at,0),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0)))),c_primitive(unblocked,0)))
n_count(c_and(c_not(c_and(c_primitive(at,0),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0)))),c_primitive(unblocked,0)))
n_count(c_and(c_not(c_and(c_all(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_primitive(at,0))),c_primitive(unblocked,0)))
n_count(c_and(c_not(c_and(c_primitive(reward,0),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0)))),c_primitive(unblocked,0)))
n_count(c_and(c_not(c_and(c_primitive(reward,0),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0)))),c_primitive(unblocked,0)))
n_count(c_and(c_not(c_and(c_primitive(reward,0),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0)))),c_primitive(unblocked,0)))
n_count(c_and(c_not(c_and(c_all(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_primitive(reward,0))),c_primitive(unblocked,0)))
n_count(c_and(c_not(c_and(c_primitive(picked,0),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0)))),c_primitive(unblocked,0)))
n_count(c_and(c_not(c_and(c_primitive(picked,0),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0)))),c_primitive(unblocked,0)))
n_count(c_and(c_not(c_and(c_all(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_primitive(picked,0))),c_primitive(unblocked,0)))
n_count(c_and(c_not(c_and(c_all(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_primitive(picked_g,0))),c_primitive(unblocked,0)))
n_count(c_and(c_not(c_some(r_primitive(adjacent,0,1),c_and(c_primitive(at,0),c_primitive(reward,0)))),c_primitive(unblocked,0)))
n_count(c_and(c_not(c_some(r_primitive(adjacent,0,1),c_and(c_primitive(at,0),c_primitive(picked,0)))),c_primitive(unblocked,0)))
n_count(c_and(c_not(c_some(r_primitive(adjacent,0,1),c_and(c_primitive(at,0),c_primitive(picked_g,0)))),c_primitive(unblocked,0)))
n_count(c_and(c_not(c_some(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(at,0)))),c_primitive(unblocked,0)))
n_count(c_and(c_not(c_some(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0)))),c_primitive(unblocked,0)))
n_count(c_and(c_not(c_some(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0)))),c_primitive(unblocked,0)))
n_count(c_and(c_not(c_all(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(at,0)))),c_primitive(unblocked,0)))
n_count(c_and(c_not(c_all(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0)))),c_primitive(unblocked,0)))
n_count(c_and(c_not(c_all(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0)))),c_primitive(unblocked,0)))
n_count(c_and(c_not(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(at,0)),c_primitive(reward,0))),c_primitive(unblocked,0)))
n_count(c_and(c_not(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(at,0)),c_primitive(picked,0))),c_primitive(unblocked,0)))
n_count(c_and(c_not(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(at,0)),c_primitive(picked_g,0))),c_primitive(unblocked,0)))
n_count(c_and(c_not(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(reward,0)),c_primitive(at,0))),c_primitive(unblocked,0)))
n_count(c_and(c_not(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_primitive(at,0))),c_primitive(unblocked,0)))
n_count(c_and(c_not(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_primitive(reward,0))),c_primitive(unblocked,0)))
n_count(c_and(c_not(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_primitive(picked,0))),c_primitive(unblocked,0)))
n_count(c_and(c_not(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(picked,0)),c_primitive(at,0))),c_primitive(unblocked,0)))
n_count(c_and(c_not(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(picked_g,0)),c_primitive(at,0))),c_primitive(unblocked,0)))
n_count(c_and(c_primitive(unblocked,0),c_some(r_transitive_closure(r_primitive(adjacent,0,1)),c_and(c_primitive(at,0),c_primitive(reward,0)))))
n_count(c_and(c_primitive(unblocked,0),c_some(r_transitive_closure(r_primitive(adjacent,0,1)),c_and(c_primitive(at,0),c_primitive(picked,0)))))
n_count(c_and(c_primitive(unblocked,0),c_some(r_transitive_closure(r_primitive(adjacent,0,1)),c_and(c_primitive(at,0),c_primitive(picked_g,0)))))
n_count(c_and(c_all(r_primitive(adjacent,0,1),c_and(c_not(c_primitive(at,0)),c_primitive(unblocked,0))),c_primitive(unblocked,0)))
n_count(c_and(c_all(r_primitive(adjacent,0,1),c_and(c_not(c_primitive(reward,0)),c_primitive(unblocked,0))),c_primitive(unblocked,0)))
n_count(c_and(c_all(r_primitive(adjacent,0,1),c_and(c_not(c_primitive(picked,0)),c_primitive(unblocked,0))),c_primitive(unblocked,0)))
n_count(c_and(c_all(r_transitive_closure(r_primitive(adjacent,0,1)),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0))),c_primitive(unblocked,0)))
n_count(c_and(c_all(r_transitive_closure(r_primitive(adjacent,0,1)),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))),c_primitive(unblocked,0)))
n_count(c_and(c_all(r_transitive_closure(r_primitive(adjacent,0,1)),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))),c_primitive(unblocked,0)))
n_count(c_and(c_all(r_inverse(r_restrict(r_primitive(adjacent,0,1),c_primitive(at,0))),c_primitive(unblocked,0)),c_primitive(unblocked,0)))
n_count(c_and(c_all(r_inverse(r_restrict(r_primitive(adjacent,0,1),c_primitive(reward,0))),c_primitive(unblocked,0)),c_primitive(unblocked,0)))
n_count(c_and(c_all(r_inverse(r_restrict(r_primitive(adjacent,0,1),c_primitive(picked,0))),c_primitive(unblocked,0)),c_primitive(unblocked,0)))
n_count(c_and(c_and(c_not(c_primitive(at,0)),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))),c_primitive(picked,0)))
n_count(c_and(c_and(c_not(c_primitive(at,0)),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))),c_primitive(picked,0)))
n_count(c_and(c_not(c_and(c_primitive(at,0),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0)))),c_primitive(picked,0)))
n_count(c_and(c_not(c_and(c_primitive(at,0),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0)))),c_primitive(picked,0)))
n_count(c_and(c_not(c_and(c_primitive(at,0),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0)))),c_primitive(picked,0)))
n_count(c_and(c_not(c_and(c_all(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_primitive(at,0))),c_primitive(picked,0)))
n_count(c_and(c_not(c_some(r_primitive(adjacent,0,1),c_and(c_primitive(at,0),c_primitive(reward,0)))),c_primitive(picked,0)))
n_count(c_and(c_not(c_some(r_primitive(adjacent,0,1),c_and(c_primitive(at,0),c_primitive(picked_g,0)))),c_primitive(picked,0)))
n_count(c_and(c_not(c_some(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(at,0)))),c_primitive(picked,0)))
n_count(c_and(c_not(c_all(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(at,0)))),c_primitive(picked,0)))
n_count(c_and(c_not(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_primitive(at,0))),c_primitive(picked,0)))
n_count(c_and(c_not(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_primitive(reward,0))),c_primitive(picked,0)))
n_count(c_and(c_not(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_primitive(picked_g,0))),c_primitive(picked,0)))
n_count(c_and(c_not(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(picked_g,0)),c_primitive(at,0))),c_primitive(picked,0)))
n_count(c_and(c_primitive(picked,0),c_some(r_transitive_closure(r_primitive(adjacent,0,1)),c_and(c_primitive(at,0),c_primitive(picked,0)))))
n_count(c_and(c_primitive(picked,0),c_some(r_transitive_closure(r_primitive(adjacent,0,1)),c_and(c_primitive(at,0),c_primitive(picked_g,0)))))
n_count(c_and(c_all(r_inverse(r_restrict(r_primitive(adjacent,0,1),c_primitive(at,0))),c_primitive(unblocked,0)),c_primitive(picked,0)))
n_count(c_and(c_and(c_not(c_primitive(at,0)),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))),c_primitive(picked_g,0)))
n_count(c_and(c_not(c_and(c_primitive(at,0),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0)))),c_primitive(picked_g,0)))
n_count(c_and(c_not(c_and(c_primitive(at,0),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0)))),c_primitive(picked_g,0)))
n_count(c_and(c_not(c_and(c_primitive(at,0),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0)))),c_primitive(picked_g,0)))
n_count(c_and(c_not(c_and(c_primitive(reward,0),c_some(r_primitive(adjacent,0,1),c_primitive(at,0)))),c_primitive(picked_g,0)))
n_count(c_and(c_not(c_and(c_primitive(reward,0),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0)))),c_primitive(picked_g,0)))
n_count(c_and(c_not(c_and(c_primitive(reward,0),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0)))),c_primitive(picked_g,0)))
n_count(c_and(c_not(c_and(c_all(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_primitive(reward,0))),c_primitive(picked_g,0)))
n_count(c_and(c_not(c_and(c_primitive(picked,0),c_some(r_primitive(adjacent,0,1),c_primitive(at,0)))),c_primitive(picked_g,0)))
n_count(c_and(c_not(c_and(c_primitive(picked,0),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0)))),c_primitive(picked_g,0)))
n_count(c_and(c_not(c_and(c_all(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_primitive(picked,0))),c_primitive(picked_g,0)))
n_count(c_and(c_not(c_some(r_primitive(adjacent,0,1),c_and(c_primitive(at,0),c_primitive(reward,0)))),c_primitive(picked_g,0)))
n_count(c_and(c_not(c_some(r_primitive(adjacent,0,1),c_and(c_primitive(at,0),c_primitive(picked,0)))),c_primitive(picked_g,0)))
n_count(c_and(c_not(c_some(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(at,0)))),c_primitive(picked_g,0)))
n_count(c_and(c_not(c_all(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(at,0)))),c_primitive(picked_g,0)))
n_count(c_and(c_all(r_inverse(r_restrict(r_primitive(adjacent,0,1),c_primitive(at,0))),c_primitive(unblocked,0)),c_primitive(picked_g,0)))
n_count(c_and(c_all(r_inverse(r_restrict(r_primitive(adjacent,0,1),c_primitive(reward,0))),c_primitive(unblocked,0)),c_primitive(picked_g,0)))
n_count(c_and(c_all(r_inverse(r_restrict(r_primitive(adjacent,0,1),c_primitive(picked,0))),c_primitive(unblocked,0)),c_primitive(picked_g,0)))
n_count(c_and(c_not(c_and(c_not(c_primitive(reward,0)),c_primitive(unblocked,0))),c_not(c_primitive(at,0))))
n_count(c_and(c_not(c_and(c_not(c_primitive(picked,0)),c_primitive(unblocked,0))),c_not(c_primitive(at,0))))
n_count(c_and(c_not(c_and(c_not(c_primitive(picked_g,0)),c_primitive(unblocked,0))),c_not(c_primitive(at,0))))
n_count(c_and(c_not(c_primitive(at,0)),c_not(c_some(r_transitive_closure(r_primitive(adjacent,0,1)),c_primitive(reward,0)))))
n_count(c_and(c_not(c_primitive(at,0)),c_not(c_some(r_transitive_closure(r_primitive(adjacent,0,1)),c_primitive(picked,0)))))
n_count(c_and(c_not(c_primitive(at,0)),c_some(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0)))))
n_count(c_and(c_not(c_primitive(at,0)),c_some(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0)))))
n_count(c_and(c_not(c_primitive(at,0)),c_some(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0)))))
n_count(c_and(c_all(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0))),c_not(c_primitive(at,0))))
n_count(c_and(c_all(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))),c_not(c_primitive(at,0))))
n_count(c_and(c_all(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))),c_not(c_primitive(at,0))))
n_count(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(at,0)),c_primitive(reward,0)),c_not(c_primitive(at,0))))
n_count(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(at,0)),c_primitive(picked,0)),c_not(c_primitive(at,0))))
n_count(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(at,0)),c_primitive(picked_g,0)),c_not(c_primitive(at,0))))
n_count(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(reward,0)),c_primitive(at,0)),c_not(c_primitive(at,0))))
n_count(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_primitive(reward,0)),c_not(c_primitive(at,0))))
n_count(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_primitive(picked,0)),c_not(c_primitive(at,0))))
n_count(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_primitive(picked_g,0)),c_not(c_primitive(at,0))))
n_count(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(picked,0)),c_primitive(at,0)),c_not(c_primitive(at,0))))
n_count(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(picked_g,0)),c_primitive(at,0)),c_not(c_primitive(at,0))))
n_count(c_and(c_not(c_and(c_not(c_primitive(picked,0)),c_primitive(at,0))),c_not(c_primitive(reward,0))))
n_count(c_and(c_not(c_and(c_not(c_primitive(at,0)),c_primitive(unblocked,0))),c_not(c_primitive(reward,0))))
n_count(c_and(c_not(c_primitive(reward,0)),c_not(c_some(r_transitive_closure(r_primitive(adjacent,0,1)),c_primitive(picked,0)))))
n_count(c_and(c_not(c_primitive(reward,0)),c_some(r_primitive(adjacent,0,1),c_and(c_primitive(at,0),c_primitive(reward,0)))))
n_count(c_and(c_not(c_primitive(reward,0)),c_some(r_primitive(adjacent,0,1),c_and(c_primitive(at,0),c_primitive(picked,0)))))
n_count(c_and(c_not(c_primitive(reward,0)),c_some(r_primitive(adjacent,0,1),c_and(c_primitive(at,0),c_primitive(picked_g,0)))))
n_count(c_and(c_not(c_primitive(reward,0)),c_some(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(at,0)))))
n_count(c_and(c_not(c_primitive(reward,0)),c_some(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0)))))
n_count(c_and(c_all(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(at,0))),c_not(c_primitive(reward,0))))
n_count(c_and(c_all(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))),c_not(c_primitive(reward,0))))
n_count(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(at,0)),c_primitive(reward,0)),c_not(c_primitive(reward,0))))
n_count(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(at,0)),c_primitive(picked,0)),c_not(c_primitive(reward,0))))
n_count(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(at,0)),c_primitive(picked_g,0)),c_not(c_primitive(reward,0))))
n_count(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(reward,0)),c_primitive(at,0)),c_not(c_primitive(reward,0))))
n_count(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_primitive(at,0)),c_not(c_primitive(reward,0))))
n_count(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_primitive(reward,0)),c_not(c_primitive(reward,0))))
n_count(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_primitive(picked,0)),c_not(c_primitive(reward,0))))
n_count(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_primitive(picked_g,0)),c_not(c_primitive(reward,0))))
n_count(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(picked,0)),c_primitive(at,0)),c_not(c_primitive(reward,0))))
n_count(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(picked_g,0)),c_primitive(at,0)),c_not(c_primitive(reward,0))))
n_count(c_and(c_not(c_primitive(unblocked,0)),c_not(c_some(r_transitive_closure(r_primitive(adjacent,0,1)),c_primitive(reward,0)))))
n_count(c_and(c_not(c_primitive(unblocked,0)),c_not(c_some(r_transitive_closure(r_primitive(adjacent,0,1)),c_primitive(picked,0)))))
n_count(c_and(c_not(c_primitive(unblocked,0)),c_some(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(at,0)))))
n_count(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(at,0)),c_primitive(reward,0)),c_not(c_primitive(unblocked,0))))
n_count(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(at,0)),c_primitive(picked,0)),c_not(c_primitive(unblocked,0))))
n_count(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(at,0)),c_primitive(picked_g,0)),c_not(c_primitive(unblocked,0))))
n_count(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(reward,0)),c_primitive(at,0)),c_not(c_primitive(unblocked,0))))
n_count(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(picked,0)),c_primitive(at,0)),c_not(c_primitive(unblocked,0))))
n_count(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(picked_g,0)),c_primitive(at,0)),c_not(c_primitive(unblocked,0))))
n_count(c_and(c_not(c_and(c_not(c_primitive(reward,0)),c_primitive(at,0))),c_not(c_primitive(picked,0))))
n_count(c_and(c_not(c_and(c_not(c_primitive(at,0)),c_primitive(unblocked,0))),c_not(c_primitive(picked,0))))
n_count(c_and(c_not(c_primitive(picked,0)),c_not(c_some(r_transitive_closure(r_primitive(adjacent,0,1)),c_primitive(reward,0)))))
n_count(c_and(c_not(c_primitive(picked,0)),c_some(r_primitive(adjacent,0,1),c_and(c_primitive(at,0),c_primitive(reward,0)))))
n_count(c_and(c_not(c_primitive(picked,0)),c_some(r_primitive(adjacent,0,1),c_and(c_primitive(at,0),c_primitive(picked,0)))))
n_count(c_and(c_not(c_primitive(picked,0)),c_some(r_primitive(adjacent,0,1),c_and(c_primitive(at,0),c_primitive(picked_g,0)))))
n_count(c_and(c_not(c_primitive(picked,0)),c_some(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(at,0)))))
n_count(c_and(c_not(c_primitive(picked,0)),c_some(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0)))))
n_count(c_and(c_all(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(at,0))),c_not(c_primitive(picked,0))))
n_count(c_and(c_all(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))),c_not(c_primitive(picked,0))))
n_count(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(at,0)),c_primitive(reward,0)),c_not(c_primitive(picked,0))))
n_count(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(at,0)),c_primitive(picked,0)),c_not(c_primitive(picked,0))))
n_count(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(at,0)),c_primitive(picked_g,0)),c_not(c_primitive(picked,0))))
n_count(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(reward,0)),c_primitive(at,0)),c_not(c_primitive(picked,0))))
n_count(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_primitive(at,0)),c_not(c_primitive(picked,0))))
n_count(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_primitive(reward,0)),c_not(c_primitive(picked,0))))
n_count(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_primitive(picked,0)),c_not(c_primitive(picked,0))))
n_count(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_primitive(picked_g,0)),c_not(c_primitive(picked,0))))
n_count(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(picked,0)),c_primitive(at,0)),c_not(c_primitive(picked,0))))
n_count(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(picked_g,0)),c_primitive(at,0)),c_not(c_primitive(picked,0))))
n_count(c_and(c_not(c_and(c_not(c_primitive(at,0)),c_primitive(unblocked,0))),c_not(c_primitive(picked_g,0))))
n_count(c_and(c_not(c_primitive(picked_g,0)),c_some(r_primitive(adjacent,0,1),c_and(c_primitive(at,0),c_primitive(reward,0)))))
n_count(c_and(c_not(c_primitive(picked_g,0)),c_some(r_primitive(adjacent,0,1),c_and(c_primitive(at,0),c_primitive(picked,0)))))
n_count(c_and(c_not(c_primitive(picked_g,0)),c_some(r_primitive(adjacent,0,1),c_and(c_primitive(at,0),c_primitive(picked_g,0)))))
n_count(c_and(c_not(c_primitive(picked_g,0)),c_some(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(at,0)))))
n_count(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(at,0)),c_primitive(reward,0)),c_not(c_primitive(picked_g,0))))
n_count(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(at,0)),c_primitive(picked,0)),c_not(c_primitive(picked_g,0))))
n_count(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(at,0)),c_primitive(picked_g,0)),c_not(c_primitive(picked_g,0))))
n_count(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(reward,0)),c_primitive(at,0)),c_not(c_primitive(picked_g,0))))
n_count(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_primitive(at,0)),c_not(c_primitive(picked_g,0))))
n_count(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(picked,0)),c_primitive(at,0)),c_not(c_primitive(picked_g,0))))
n_count(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(picked_g,0)),c_primitive(at,0)),c_not(c_primitive(picked_g,0))))
n_count(c_and(c_not(c_some(r_primitive(adjacent,0,1),c_primitive(reward,0))),c_some(r_primitive(adjacent,0,1),c_primitive(at,0))))
n_count(c_and(c_not(c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))),c_some(r_primitive(adjacent,0,1),c_primitive(at,0))))
n_count(c_and(c_not(c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))),c_some(r_primitive(adjacent,0,1),c_primitive(at,0))))
n_count(c_and(c_some(r_primitive(adjacent,0,1),c_primitive(at,0)),c_some(r_transitive_closure(r_primitive(adjacent,0,1)),c_primitive(reward,0))))
n_count(c_and(c_some(r_primitive(adjacent,0,1),c_primitive(at,0)),c_some(r_transitive_closure(r_primitive(adjacent,0,1)),c_primitive(picked,0))))
n_count(c_and(c_not(c_and(c_primitive(at,0),c_primitive(reward,0))),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0))))
n_count(c_and(c_not(c_and(c_primitive(at,0),c_primitive(picked,0))),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0))))
n_count(c_and(c_not(c_and(c_primitive(at,0),c_primitive(picked_g,0))),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0))))
n_count(c_and(c_not(c_some(r_primitive(adjacent,0,1),c_primitive(at,0))),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0))))
n_count(c_and(c_not(c_and(c_primitive(at,0),c_primitive(reward,0))),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))))
n_count(c_and(c_not(c_and(c_primitive(at,0),c_primitive(picked,0))),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))))
n_count(c_and(c_not(c_and(c_primitive(at,0),c_primitive(picked_g,0))),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))))
n_count(c_and(c_not(c_some(r_primitive(adjacent,0,1),c_primitive(at,0))),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))))
n_count(c_and(c_not(c_and(c_primitive(at,0),c_primitive(reward,0))),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))))
n_count(c_and(c_not(c_and(c_primitive(at,0),c_primitive(picked,0))),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))))
n_count(c_and(c_not(c_and(c_primitive(at,0),c_primitive(picked_g,0))),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))))
n_count(c_and(c_not(c_some(r_primitive(adjacent,0,1),c_primitive(at,0))),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))))
n_count(c_and(c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0)),c_some(r_transitive_closure(r_primitive(adjacent,0,1)),c_primitive(reward,0))))
n_count(c_and(c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0)),c_some(r_transitive_closure(r_primitive(adjacent,0,1)),c_primitive(picked,0))))
n_count(c_and(c_all(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_not(c_and(c_primitive(at,0),c_primitive(reward,0)))))
n_count(c_and(c_all(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_not(c_and(c_primitive(at,0),c_primitive(picked,0)))))
n_count(c_and(c_all(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_not(c_and(c_primitive(at,0),c_primitive(picked_g,0)))))
n_count(c_and(c_all(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_some(r_transitive_closure(r_primitive(adjacent,0,1)),c_primitive(reward,0))))
n_count(c_and(c_all(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_some(r_transitive_closure(r_primitive(adjacent,0,1)),c_primitive(picked,0))))
n_count(c_not(c_and(c_and(c_primitive(reward,0),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0))),c_primitive(at,0))))
n_count(c_not(c_and(c_and(c_primitive(reward,0),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))),c_primitive(at,0))))
n_count(c_not(c_and(c_and(c_primitive(reward,0),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))),c_primitive(at,0))))
n_count(c_not(c_and(c_and(c_all(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_primitive(reward,0)),c_primitive(at,0))))
n_count(c_not(c_and(c_and(c_primitive(picked,0),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0))),c_primitive(at,0))))
n_count(c_not(c_and(c_and(c_primitive(picked,0),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))),c_primitive(at,0))))
n_count(c_not(c_and(c_and(c_primitive(picked,0),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))),c_primitive(at,0))))
n_count(c_not(c_and(c_and(c_all(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_primitive(picked,0)),c_primitive(at,0))))
n_count(c_not(c_and(c_and(c_primitive(picked_g,0),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0))),c_primitive(at,0))))
n_count(c_not(c_and(c_and(c_primitive(picked_g,0),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))),c_primitive(at,0))))
n_count(c_not(c_and(c_and(c_primitive(picked_g,0),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))),c_primitive(at,0))))
n_count(c_not(c_and(c_and(c_all(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_primitive(picked_g,0)),c_primitive(at,0))))
n_count(c_not(c_and(c_not(c_some(r_transitive_closure(r_primitive(adjacent,0,1)),c_primitive(reward,0))),c_primitive(at,0))))
n_count(c_not(c_and(c_not(c_some(r_transitive_closure(r_primitive(adjacent,0,1)),c_primitive(picked,0))),c_primitive(at,0))))
n_count(c_not(c_and(c_primitive(at,0),c_some(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0))))))
n_count(c_not(c_and(c_primitive(at,0),c_some(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))))))
n_count(c_not(c_and(c_primitive(at,0),c_some(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))))))
n_count(c_not(c_and(c_all(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0))),c_primitive(at,0))))
n_count(c_not(c_and(c_all(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))),c_primitive(at,0))))
n_count(c_not(c_and(c_all(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))),c_primitive(at,0))))
n_count(c_not(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_primitive(reward,0)),c_primitive(at,0))))
n_count(c_not(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_primitive(picked,0)),c_primitive(at,0))))
n_count(c_not(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_primitive(picked_g,0)),c_primitive(at,0))))
n_count(c_not(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(at,0)),c_primitive(reward,0)),c_primitive(reward,0))))
n_count(c_not(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(at,0)),c_primitive(picked,0)),c_primitive(reward,0))))
n_count(c_not(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(at,0)),c_primitive(picked_g,0)),c_primitive(reward,0))))
n_count(c_not(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(reward,0)),c_primitive(at,0)),c_primitive(reward,0))))
n_count(c_not(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_primitive(at,0)),c_primitive(reward,0))))
n_count(c_not(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_primitive(reward,0)),c_primitive(reward,0))))
n_count(c_not(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_primitive(picked,0)),c_primitive(reward,0))))
n_count(c_not(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_primitive(picked_g,0)),c_primitive(reward,0))))
n_count(c_not(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(picked,0)),c_primitive(at,0)),c_primitive(reward,0))))
n_count(c_not(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(picked_g,0)),c_primitive(at,0)),c_primitive(reward,0))))
n_count(c_not(c_and(c_and(c_not(c_primitive(at,0)),c_not(c_primitive(reward,0))),c_primitive(unblocked,0))))
n_count(c_not(c_and(c_and(c_not(c_primitive(at,0)),c_not(c_primitive(picked,0))),c_primitive(unblocked,0))))
n_count(c_not(c_and(c_and(c_not(c_primitive(at,0)),c_not(c_primitive(picked_g,0))),c_primitive(unblocked,0))))
n_count(c_not(c_and(c_not(c_some(r_transitive_closure(r_primitive(adjacent,0,1)),c_primitive(reward,0))),c_primitive(unblocked,0))))
n_count(c_not(c_and(c_not(c_some(r_transitive_closure(r_primitive(adjacent,0,1)),c_primitive(picked,0))),c_primitive(unblocked,0))))
n_count(c_not(c_and(c_primitive(unblocked,0),c_some(r_primitive(adjacent,0,1),c_and(c_primitive(at,0),c_primitive(reward,0))))))
n_count(c_not(c_and(c_primitive(unblocked,0),c_some(r_primitive(adjacent,0,1),c_and(c_primitive(at,0),c_primitive(picked,0))))))
n_count(c_not(c_and(c_primitive(unblocked,0),c_some(r_primitive(adjacent,0,1),c_and(c_primitive(at,0),c_primitive(picked_g,0))))))
n_count(c_not(c_and(c_primitive(unblocked,0),c_some(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(at,0))))))
n_count(c_not(c_and(c_primitive(unblocked,0),c_some(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0))))))
n_count(c_not(c_and(c_primitive(unblocked,0),c_some(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))))))
n_count(c_not(c_and(c_all(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(at,0))),c_primitive(unblocked,0))))
n_count(c_not(c_and(c_all(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0))),c_primitive(unblocked,0))))
n_count(c_not(c_and(c_all(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))),c_primitive(unblocked,0))))
n_count(c_not(c_and(c_all(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))),c_primitive(unblocked,0))))
n_count(c_not(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(at,0)),c_primitive(reward,0)),c_primitive(unblocked,0))))
n_count(c_not(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(at,0)),c_primitive(picked,0)),c_primitive(unblocked,0))))
n_count(c_not(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(at,0)),c_primitive(picked_g,0)),c_primitive(unblocked,0))))
n_count(c_not(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(reward,0)),c_primitive(at,0)),c_primitive(unblocked,0))))
n_count(c_not(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(picked,0)),c_primitive(at,0)),c_primitive(unblocked,0))))
n_count(c_not(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(picked_g,0)),c_primitive(at,0)),c_primitive(unblocked,0))))
n_count(c_not(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(at,0)),c_primitive(reward,0)),c_primitive(picked,0))))
n_count(c_not(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(at,0)),c_primitive(picked,0)),c_primitive(picked,0))))
n_count(c_not(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(at,0)),c_primitive(picked_g,0)),c_primitive(picked,0))))
n_count(c_not(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(reward,0)),c_primitive(at,0)),c_primitive(picked,0))))
n_count(c_not(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_primitive(at,0)),c_primitive(picked,0))))
n_count(c_not(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_primitive(reward,0)),c_primitive(picked,0))))
n_count(c_not(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_primitive(picked,0)),c_primitive(picked,0))))
n_count(c_not(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_primitive(picked_g,0)),c_primitive(picked,0))))
n_count(c_not(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(picked,0)),c_primitive(at,0)),c_primitive(picked,0))))
n_count(c_not(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(picked_g,0)),c_primitive(at,0)),c_primitive(picked,0))))
n_count(c_not(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(at,0)),c_primitive(reward,0)),c_primitive(picked_g,0))))
n_count(c_not(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(at,0)),c_primitive(picked,0)),c_primitive(picked_g,0))))
n_count(c_not(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(at,0)),c_primitive(picked_g,0)),c_primitive(picked_g,0))))
n_count(c_not(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(reward,0)),c_primitive(at,0)),c_primitive(picked_g,0))))
n_count(c_not(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(picked,0)),c_primitive(at,0)),c_primitive(picked_g,0))))
n_count(c_not(c_and(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(picked_g,0)),c_primitive(at,0)),c_primitive(picked_g,0))))
n_count(c_not(c_and(c_not(c_primitive(at,0)),c_not(c_some(r_primitive(adjacent,0,1),c_primitive(at,0))))))
n_count(c_not(c_and(c_not(c_primitive(at,0)),c_not(c_some(r_primitive(adjacent,0,1),c_primitive(reward,0))))))
n_count(c_not(c_and(c_not(c_primitive(at,0)),c_not(c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))))))
n_count(c_not(c_and(c_not(c_primitive(at,0)),c_not(c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))))))
n_count(c_not(c_and(c_not(c_all(r_primitive(adjacent,0,1),c_primitive(unblocked,0))),c_not(c_primitive(at,0)))))
n_count(c_not(c_and(c_not(c_primitive(at,0)),c_some(r_transitive_closure(r_primitive(adjacent,0,1)),c_primitive(reward,0)))))
n_count(c_not(c_and(c_not(c_primitive(at,0)),c_some(r_transitive_closure(r_primitive(adjacent,0,1)),c_primitive(picked,0)))))
n_count(c_not(c_and(c_not(c_primitive(reward,0)),c_not(c_some(r_primitive(adjacent,0,1),c_primitive(at,0))))))
n_count(c_not(c_and(c_not(c_primitive(reward,0)),c_not(c_some(r_primitive(adjacent,0,1),c_primitive(reward,0))))))
n_count(c_not(c_and(c_not(c_primitive(reward,0)),c_not(c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))))))
n_count(c_not(c_and(c_not(c_primitive(reward,0)),c_not(c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))))))
n_count(c_not(c_and(c_not(c_all(r_primitive(adjacent,0,1),c_primitive(unblocked,0))),c_not(c_primitive(reward,0)))))
n_count(c_not(c_and(c_not(c_primitive(reward,0)),c_some(r_transitive_closure(r_primitive(adjacent,0,1)),c_primitive(reward,0)))))
n_count(c_not(c_and(c_not(c_primitive(reward,0)),c_some(r_transitive_closure(r_primitive(adjacent,0,1)),c_primitive(picked,0)))))
n_count(c_not(c_and(c_not(c_primitive(unblocked,0)),c_not(c_some(r_primitive(adjacent,0,1),c_primitive(at,0))))))
n_count(c_not(c_and(c_not(c_primitive(unblocked,0)),c_not(c_some(r_primitive(adjacent,0,1),c_primitive(reward,0))))))
n_count(c_not(c_and(c_not(c_primitive(unblocked,0)),c_not(c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))))))
n_count(c_not(c_and(c_not(c_primitive(unblocked,0)),c_some(r_transitive_closure(r_primitive(adjacent,0,1)),c_primitive(reward,0)))))
n_count(c_not(c_and(c_not(c_primitive(unblocked,0)),c_some(r_transitive_closure(r_primitive(adjacent,0,1)),c_primitive(picked,0)))))
n_count(c_not(c_and(c_not(c_primitive(picked,0)),c_not(c_some(r_primitive(adjacent,0,1),c_primitive(at,0))))))
n_count(c_not(c_and(c_not(c_primitive(picked,0)),c_not(c_some(r_primitive(adjacent,0,1),c_primitive(reward,0))))))
n_count(c_not(c_and(c_not(c_primitive(picked,0)),c_not(c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))))))
n_count(c_not(c_and(c_not(c_primitive(picked,0)),c_not(c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))))))
n_count(c_not(c_and(c_not(c_all(r_primitive(adjacent,0,1),c_primitive(unblocked,0))),c_not(c_primitive(picked,0)))))
n_count(c_not(c_and(c_not(c_primitive(picked,0)),c_some(r_transitive_closure(r_primitive(adjacent,0,1)),c_primitive(reward,0)))))
n_count(c_not(c_and(c_not(c_primitive(picked,0)),c_some(r_transitive_closure(r_primitive(adjacent,0,1)),c_primitive(picked,0)))))
n_count(c_not(c_and(c_not(c_primitive(picked_g,0)),c_not(c_some(r_primitive(adjacent,0,1),c_primitive(at,0))))))
n_count(c_not(c_and(c_not(c_primitive(picked_g,0)),c_not(c_some(r_primitive(adjacent,0,1),c_primitive(reward,0))))))
n_count(c_not(c_and(c_not(c_primitive(picked_g,0)),c_not(c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))))))
n_count(c_not(c_and(c_not(c_primitive(picked_g,0)),c_some(r_transitive_closure(r_primitive(adjacent,0,1)),c_primitive(reward,0)))))
n_count(c_not(c_and(c_not(c_primitive(picked_g,0)),c_some(r_transitive_closure(r_primitive(adjacent,0,1)),c_primitive(picked,0)))))
n_count(c_not(c_and(c_some(r_primitive(adjacent,0,1),c_primitive(at,0)),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0)))))
n_count(c_not(c_and(c_some(r_primitive(adjacent,0,1),c_primitive(at,0)),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0)))))
n_count(c_not(c_and(c_some(r_primitive(adjacent,0,1),c_primitive(at,0)),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0)))))
n_count(c_not(c_some(r_primitive(adjacent,0,1),c_and(c_primitive(at,0),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0))))))
n_count(c_not(c_some(r_primitive(adjacent,0,1),c_and(c_primitive(at,0),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))))))
n_count(c_not(c_some(r_primitive(adjacent,0,1),c_and(c_primitive(at,0),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))))))
n_count(c_not(c_some(r_primitive(adjacent,0,1),c_and(c_all(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_primitive(at,0)))))
n_count(c_not(c_some(r_primitive(adjacent,0,1),c_and(c_primitive(reward,0),c_some(r_primitive(adjacent,0,1),c_primitive(at,0))))))
n_count(c_not(c_some(r_primitive(adjacent,0,1),c_and(c_primitive(reward,0),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))))))
n_count(c_not(c_some(r_primitive(adjacent,0,1),c_and(c_primitive(reward,0),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))))))
n_count(c_not(c_some(r_primitive(adjacent,0,1),c_and(c_primitive(unblocked,0),c_some(r_primitive(adjacent,0,1),c_primitive(at,0))))))
n_count(c_not(c_some(r_primitive(adjacent,0,1),c_and(c_primitive(picked,0),c_some(r_primitive(adjacent,0,1),c_primitive(at,0))))))
n_count(c_not(c_some(r_primitive(adjacent,0,1),c_and(c_primitive(picked,0),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))))))
n_count(c_not(c_some(r_primitive(adjacent,0,1),c_and(c_primitive(picked_g,0),c_some(r_primitive(adjacent,0,1),c_primitive(at,0))))))
n_count(c_not(c_some(r_primitive(adjacent,0,1),c_and(c_not(c_primitive(at,0)),c_not(c_primitive(reward,0))))))
n_count(c_not(c_some(r_primitive(adjacent,0,1),c_and(c_not(c_primitive(at,0)),c_not(c_primitive(picked,0))))))
n_count(c_not(c_some(r_primitive(adjacent,0,1),c_and(c_not(c_primitive(at,0)),c_not(c_primitive(picked_g,0))))))
n_count(c_not(c_some(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_and(c_primitive(at,0),c_primitive(reward,0))))))
n_count(c_not(c_some(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_and(c_primitive(at,0),c_primitive(picked,0))))))
n_count(c_not(c_some(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_and(c_primitive(at,0),c_primitive(picked_g,0))))))
n_count(c_not(c_some(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(at,0))))))
n_count(c_not(c_some(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0))))))
n_count(c_not(c_some(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))))))
n_count(c_not(c_some(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))))))
n_count(c_not(c_some(r_primitive(adjacent,0,1),c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(at,0)),c_primitive(reward,0)))))
n_count(c_not(c_some(r_primitive(adjacent,0,1),c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(at,0)),c_primitive(picked,0)))))
n_count(c_not(c_some(r_primitive(adjacent,0,1),c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(at,0)),c_primitive(picked_g,0)))))
n_count(c_not(c_some(r_primitive(adjacent,0,1),c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(reward,0)),c_primitive(at,0)))))
n_count(c_not(c_some(r_primitive(adjacent,0,1),c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_primitive(at,0)))))
n_count(c_not(c_some(r_primitive(adjacent,0,1),c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(picked,0)),c_primitive(at,0)))))
n_count(c_not(c_some(r_primitive(adjacent,0,1),c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(picked_g,0)),c_primitive(at,0)))))
n_count(c_not(c_some(r_transitive_closure(r_primitive(adjacent,0,1)),c_and(c_not(c_primitive(at,0)),c_primitive(reward,0)))))
n_count(c_not(c_some(r_transitive_closure(r_primitive(adjacent,0,1)),c_and(c_not(c_primitive(at,0)),c_primitive(picked,0)))))
n_count(c_not(c_some(r_transitive_closure(r_primitive(adjacent,0,1)),c_and(c_not(c_primitive(at,0)),c_primitive(picked_g,0)))))
n_count(c_not(c_all(r_primitive(adjacent,0,1),c_and(c_primitive(unblocked,0),c_some(r_primitive(adjacent,0,1),c_primitive(at,0))))))
n_count(c_not(c_all(r_primitive(adjacent,0,1),c_and(c_not(c_primitive(at,0)),c_not(c_primitive(reward,0))))))
n_count(c_not(c_all(r_primitive(adjacent,0,1),c_and(c_not(c_primitive(at,0)),c_not(c_primitive(picked,0))))))
n_count(c_not(c_all(r_primitive(adjacent,0,1),c_and(c_not(c_primitive(at,0)),c_not(c_primitive(picked_g,0))))))
n_count(c_not(c_all(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_and(c_primitive(at,0),c_primitive(reward,0))))))
n_count(c_not(c_all(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_and(c_primitive(at,0),c_primitive(picked,0))))))
n_count(c_not(c_all(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_and(c_primitive(at,0),c_primitive(picked_g,0))))))
n_count(c_not(c_all(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(at,0))))))
n_count(c_not(c_all(r_primitive(adjacent,0,1),c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(at,0)),c_primitive(reward,0)))))
n_count(c_not(c_all(r_primitive(adjacent,0,1),c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(at,0)),c_primitive(picked,0)))))
n_count(c_not(c_all(r_primitive(adjacent,0,1),c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(at,0)),c_primitive(picked_g,0)))))
n_count(c_not(c_all(r_primitive(adjacent,0,1),c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(reward,0)),c_primitive(at,0)))))
n_count(c_not(c_all(r_primitive(adjacent,0,1),c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_primitive(at,0)))))
n_count(c_not(c_all(r_primitive(adjacent,0,1),c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(picked,0)),c_primitive(at,0)))))
n_count(c_not(c_all(r_primitive(adjacent,0,1),c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(picked_g,0)),c_primitive(at,0)))))
n_count(c_not(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(at,0)),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0)))))
n_count(c_not(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(at,0)),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0)))))
n_count(c_not(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(at,0)),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0)))))
n_count(c_not(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(reward,0)),c_some(r_primitive(adjacent,0,1),c_primitive(at,0)))))
n_count(c_not(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(reward,0)),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0)))))
n_count(c_not(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(reward,0)),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0)))))
n_count(c_not(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(reward,0)),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0)))))
n_count(c_not(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_and(c_primitive(at,0),c_primitive(reward,0)))))
n_count(c_not(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_and(c_primitive(at,0),c_primitive(picked,0)))))
n_count(c_not(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_some(r_primitive(adjacent,0,1),c_primitive(at,0)))))
n_count(c_not(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0)))))
n_count(c_not(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0)))))
n_count(c_not(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0)))))
n_count(c_not(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(picked,0)),c_some(r_primitive(adjacent,0,1),c_primitive(at,0)))))
n_count(c_not(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(picked,0)),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0)))))
n_count(c_not(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(picked,0)),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0)))))
n_count(c_not(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(picked,0)),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0)))))
n_count(c_not(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(picked_g,0)),c_and(c_primitive(at,0),c_primitive(reward,0)))))
n_count(c_not(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(picked_g,0)),c_and(c_primitive(at,0),c_primitive(picked,0)))))
n_count(c_not(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(picked_g,0)),c_some(r_primitive(adjacent,0,1),c_primitive(at,0)))))
n_count(c_not(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(picked_g,0)),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0)))))
n_count(c_not(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(picked_g,0)),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0)))))
n_count(c_some(r_primitive(adjacent,0,1),c_and(c_not(c_primitive(reward,0)),c_some(r_primitive(adjacent,0,1),c_primitive(at,0)))))
n_count(c_some(r_primitive(adjacent,0,1),c_and(c_not(c_primitive(unblocked,0)),c_some(r_primitive(adjacent,0,1),c_primitive(at,0)))))
n_count(c_some(r_primitive(adjacent,0,1),c_and(c_not(c_primitive(unblocked,0)),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0)))))
n_count(c_some(r_primitive(adjacent,0,1),c_and(c_not(c_primitive(unblocked,0)),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0)))))
n_count(c_some(r_primitive(adjacent,0,1),c_and(c_not(c_primitive(picked,0)),c_some(r_primitive(adjacent,0,1),c_primitive(at,0)))))
n_count(c_some(r_primitive(adjacent,0,1),c_and(c_not(c_primitive(picked_g,0)),c_some(r_primitive(adjacent,0,1),c_primitive(at,0)))))
n_count(c_some(r_primitive(adjacent,0,1),c_all(r_primitive(adjacent,0,1),c_and(c_not(c_primitive(at,0)),c_primitive(unblocked,0)))))
n_count(c_some(r_primitive(adjacent,0,1),c_all(r_primitive(adjacent,0,1),c_and(c_not(c_primitive(reward,0)),c_primitive(unblocked,0)))))
n_count(c_some(r_primitive(adjacent,0,1),c_all(r_primitive(adjacent,0,1),c_and(c_not(c_primitive(picked,0)),c_primitive(unblocked,0)))))
n_count(c_some(r_transitive_closure(r_primitive(adjacent,0,1)),c_and(c_primitive(at,0),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0)))))
n_count(c_some(r_transitive_closure(r_primitive(adjacent,0,1)),c_and(c_primitive(at,0),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0)))))
n_count(c_some(r_transitive_closure(r_primitive(adjacent,0,1)),c_and(c_primitive(at,0),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0)))))
n_count(c_some(r_transitive_closure(r_primitive(adjacent,0,1)),c_and(c_all(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_primitive(at,0))))
n_count(c_some(r_transitive_closure(r_primitive(adjacent,0,1)),c_and(c_primitive(reward,0),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0)))))
n_count(c_some(r_transitive_closure(r_primitive(adjacent,0,1)),c_and(c_primitive(reward,0),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0)))))
n_count(c_some(r_transitive_closure(r_primitive(adjacent,0,1)),c_and(c_all(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_primitive(reward,0))))
n_count(c_some(r_transitive_closure(r_primitive(adjacent,0,1)),c_and(c_primitive(picked,0),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0)))))
n_count(c_some(r_transitive_closure(r_primitive(adjacent,0,1)),c_and(c_all(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_primitive(picked,0))))
n_count(c_some(r_transitive_closure(r_primitive(adjacent,0,1)),c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(reward,0)),c_primitive(at,0))))
n_count(c_some(r_transitive_closure(r_primitive(adjacent,0,1)),c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_primitive(at,0))))
n_count(c_some(r_transitive_closure(r_primitive(adjacent,0,1)),c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(picked,0)),c_primitive(at,0))))
n_count(c_some(r_transitive_closure(r_primitive(adjacent,0,1)),c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(picked_g,0)),c_primitive(at,0))))
n_count(c_all(r_primitive(adjacent,0,1),c_and(c_not(c_and(c_primitive(at,0),c_primitive(reward,0))),c_primitive(unblocked,0))))
n_count(c_all(r_primitive(adjacent,0,1),c_and(c_not(c_and(c_primitive(at,0),c_primitive(picked,0))),c_primitive(unblocked,0))))
n_count(c_all(r_primitive(adjacent,0,1),c_and(c_not(c_and(c_primitive(at,0),c_primitive(picked_g,0))),c_primitive(unblocked,0))))
n_count(c_all(r_primitive(adjacent,0,1),c_and(c_not(c_some(r_primitive(adjacent,0,1),c_primitive(at,0))),c_primitive(unblocked,0))))
n_count(c_all(r_primitive(adjacent,0,1),c_and(c_not(c_some(r_primitive(adjacent,0,1),c_primitive(reward,0))),c_primitive(unblocked,0))))
n_count(c_all(r_primitive(adjacent,0,1),c_and(c_not(c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))),c_primitive(unblocked,0))))
n_count(c_all(r_primitive(adjacent,0,1),c_and(c_not(c_primitive(at,0)),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0)))))
n_count(c_all(r_primitive(adjacent,0,1),c_and(c_not(c_primitive(at,0)),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0)))))
n_count(c_all(r_primitive(adjacent,0,1),c_and(c_not(c_primitive(at,0)),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0)))))
n_count(c_all(r_primitive(adjacent,0,1),c_and(c_all(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_not(c_primitive(at,0)))))
n_count(c_all(r_primitive(adjacent,0,1),c_and(c_not(c_primitive(reward,0)),c_some(r_primitive(adjacent,0,1),c_primitive(at,0)))))
n_count(c_all(r_primitive(adjacent,0,1),c_and(c_not(c_primitive(reward,0)),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0)))))
n_count(c_all(r_primitive(adjacent,0,1),c_and(c_not(c_primitive(reward,0)),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0)))))
n_count(c_all(r_primitive(adjacent,0,1),c_and(c_not(c_primitive(reward,0)),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0)))))
n_count(c_all(r_primitive(adjacent,0,1),c_and(c_all(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_not(c_primitive(reward,0)))))
n_count(c_all(r_primitive(adjacent,0,1),c_and(c_not(c_primitive(picked,0)),c_some(r_primitive(adjacent,0,1),c_primitive(at,0)))))
n_count(c_all(r_primitive(adjacent,0,1),c_and(c_not(c_primitive(picked,0)),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0)))))
n_count(c_all(r_primitive(adjacent,0,1),c_and(c_not(c_primitive(picked,0)),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0)))))
n_count(c_all(r_primitive(adjacent,0,1),c_and(c_not(c_primitive(picked,0)),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0)))))
n_count(c_all(r_primitive(adjacent,0,1),c_and(c_all(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_not(c_primitive(picked,0)))))
n_count(c_all(r_primitive(adjacent,0,1),c_all(r_primitive(adjacent,0,1),c_and(c_not(c_primitive(at,0)),c_primitive(unblocked,0)))))
n_count(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(at,0)),c_some(r_transitive_closure(r_primitive(adjacent,0,1)),c_primitive(reward,0))))
n_count(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(at,0)),c_some(r_transitive_closure(r_primitive(adjacent,0,1)),c_primitive(picked,0))))
n_count(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_and(c_not(c_primitive(reward,0)),c_primitive(at,0))))
n_count(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_and(c_not(c_primitive(picked,0)),c_primitive(at,0))))
n_count(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_and(c_not(c_primitive(picked_g,0)),c_primitive(at,0))))
n_count(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_and(c_not(c_primitive(at,0)),c_primitive(reward,0))))
n_count(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_and(c_not(c_primitive(at,0)),c_primitive(picked,0))))
n_count(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_and(c_not(c_primitive(at,0)),c_primitive(picked_g,0))))
n_count(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(picked_g,0)),c_and(c_not(c_primitive(at,0)),c_primitive(reward,0))))
n_count(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(picked_g,0)),c_and(c_not(c_primitive(at,0)),c_primitive(picked,0))))
n_count(c_all(r_inverse(r_restrict(r_primitive(adjacent,0,1),c_primitive(at,0))),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0))))
n_count(c_all(r_inverse(r_restrict(r_primitive(adjacent,0,1),c_primitive(at,0))),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))))
n_count(c_all(r_inverse(r_restrict(r_primitive(adjacent,0,1),c_primitive(at,0))),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))))
n_count(c_all(r_inverse(r_restrict(r_primitive(adjacent,0,1),c_primitive(reward,0))),c_some(r_primitive(adjacent,0,1),c_primitive(at,0))))
n_count(c_all(r_inverse(r_restrict(r_primitive(adjacent,0,1),c_primitive(unblocked,0))),c_some(r_primitive(adjacent,0,1),c_primitive(at,0))))
n_count(c_all(r_inverse(r_restrict(r_primitive(adjacent,0,1),c_primitive(unblocked,0))),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0))))
n_count(c_all(r_inverse(r_restrict(r_primitive(adjacent,0,1),c_primitive(unblocked,0))),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))))
n_count(c_all(r_inverse(r_restrict(r_primitive(adjacent,0,1),c_primitive(picked,0))),c_some(r_primitive(adjacent,0,1),c_primitive(at,0))))
n_count(c_all(r_inverse(r_restrict(r_primitive(adjacent,0,1),c_primitive(picked_g,0))),c_some(r_primitive(adjacent,0,1),c_primitive(at,0))))
n_count(r_and(r_inverse(r_restrict(r_primitive(adjacent,0,1),c_primitive(unblocked,0))),r_restrict(r_primitive(adjacent,0,1),c_primitive(unblocked,0))))
n_concept_distance(c_primitive(at,0),r_restrict(r_primitive(adjacent,0,1),c_primitive(reward,0)),c_not(c_and(c_primitive(at,0),c_primitive(reward,0))))
n_concept_distance(c_primitive(at,0),r_restrict(r_primitive(adjacent,0,1),c_primitive(reward,0)),c_not(c_and(c_primitive(at,0),c_primitive(picked_g,0))))
n_concept_distance(c_primitive(at,0),r_restrict(r_primitive(adjacent,0,1),c_primitive(reward,0)),c_not(c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))))
n_concept_distance(c_primitive(at,0),r_restrict(r_primitive(adjacent,0,1),c_primitive(reward,0)),c_not(c_all(r_primitive(adjacent,0,1),c_primitive(unblocked,0))))
n_concept_distance(c_primitive(at,0),r_restrict(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_and(c_not(c_primitive(at,0)),c_primitive(reward,0)))
n_concept_distance(c_primitive(at,0),r_restrict(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_and(c_not(c_primitive(at,0)),c_primitive(picked,0)))
n_concept_distance(c_primitive(at,0),r_restrict(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_and(c_not(c_primitive(at,0)),c_primitive(picked_g,0)))
n_concept_distance(c_primitive(at,0),r_restrict(r_primitive(adjacent,0,1),c_primitive(picked,0)),c_not(c_and(c_primitive(at,0),c_primitive(picked,0))))
n_concept_distance(c_primitive(at,0),r_restrict(r_primitive(adjacent,0,1),c_primitive(picked,0)),c_not(c_and(c_primitive(at,0),c_primitive(picked_g,0))))
n_concept_distance(c_primitive(at,0),r_restrict(r_primitive(adjacent,0,1),c_primitive(picked,0)),c_not(c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))))
n_concept_distance(c_primitive(at,0),r_restrict(r_primitive(adjacent,0,1),c_primitive(picked,0)),c_not(c_all(r_primitive(adjacent,0,1),c_primitive(unblocked,0))))
n_concept_distance(c_primitive(at,0),r_restrict(r_primitive(adjacent,0,1),c_primitive(picked_g,0)),c_and(c_not(c_primitive(at,0)),c_primitive(reward,0)))
n_concept_distance(c_primitive(at,0),r_restrict(r_primitive(adjacent,0,1),c_primitive(picked_g,0)),c_and(c_not(c_primitive(at,0)),c_primitive(picked,0)))
n_concept_distance(c_primitive(at,0),r_restrict(r_primitive(adjacent,0,1),c_primitive(picked_g,0)),c_not(c_and(c_primitive(at,0),c_primitive(reward,0))))
n_concept_distance(c_primitive(at,0),r_restrict(r_primitive(adjacent,0,1),c_primitive(picked_g,0)),c_not(c_and(c_primitive(at,0),c_primitive(picked,0))))
n_concept_distance(c_primitive(at,0),r_restrict(r_primitive(adjacent,0,1),c_primitive(picked_g,0)),c_not(c_and(c_primitive(at,0),c_primitive(picked_g,0))))
n_concept_distance(c_primitive(at,0),r_restrict(r_primitive(adjacent,0,1),c_primitive(picked_g,0)),c_not(c_all(r_primitive(adjacent,0,1),c_primitive(unblocked,0))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_and(c_not(c_some(r_primitive(adjacent,0,1),c_primitive(at,0))),c_primitive(reward,0)))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_and(c_not(c_some(r_primitive(adjacent,0,1),c_primitive(reward,0))),c_primitive(reward,0)))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_and(c_not(c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))),c_primitive(reward,0)))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_and(c_not(c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))),c_primitive(reward,0)))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_and(c_not(c_all(r_primitive(adjacent,0,1),c_primitive(unblocked,0))),c_primitive(reward,0)))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_and(c_not(c_some(r_primitive(adjacent,0,1),c_primitive(at,0))),c_primitive(picked,0)))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_and(c_not(c_some(r_primitive(adjacent,0,1),c_primitive(reward,0))),c_primitive(picked,0)))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_and(c_not(c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))),c_primitive(picked,0)))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_and(c_not(c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))),c_primitive(picked,0)))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_and(c_not(c_all(r_primitive(adjacent,0,1),c_primitive(unblocked,0))),c_primitive(picked,0)))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_and(c_not(c_and(c_primitive(at,0),c_primitive(reward,0))),c_primitive(picked_g,0)))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_and(c_not(c_and(c_primitive(at,0),c_primitive(picked,0))),c_primitive(picked_g,0)))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_and(c_not(c_some(r_primitive(adjacent,0,1),c_primitive(at,0))),c_primitive(picked_g,0)))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_and(c_not(c_some(r_primitive(adjacent,0,1),c_primitive(reward,0))),c_primitive(picked_g,0)))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_and(c_not(c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))),c_primitive(picked_g,0)))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_and(c_not(c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))),c_primitive(picked_g,0)))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_and(c_not(c_all(r_primitive(adjacent,0,1),c_primitive(unblocked,0))),c_primitive(picked_g,0)))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_and(c_primitive(picked_g,0),c_some(r_transitive_closure(r_primitive(adjacent,0,1)),c_primitive(reward,0))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_and(c_primitive(picked_g,0),c_some(r_transitive_closure(r_primitive(adjacent,0,1)),c_primitive(picked,0))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_and(c_not(c_primitive(at,0)),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_and(c_not(c_primitive(at,0)),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_and(c_not(c_primitive(at,0)),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_and(c_not(c_primitive(reward,0)),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_and(c_not(c_primitive(reward,0)),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_and(c_not(c_primitive(reward,0)),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_and(c_all(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_not(c_primitive(reward,0))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_and(c_not(c_primitive(unblocked,0)),c_some(r_primitive(adjacent,0,1),c_primitive(at,0))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_and(c_not(c_primitive(unblocked,0)),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_and(c_not(c_primitive(unblocked,0)),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_and(c_not(c_primitive(picked,0)),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_and(c_not(c_primitive(picked,0)),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_and(c_not(c_primitive(picked,0)),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_and(c_all(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_not(c_primitive(picked,0))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_and(c_not(c_primitive(picked_g,0)),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_and(c_not(c_primitive(picked_g,0)),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_and(c_not(c_primitive(picked_g,0)),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_and(c_all(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_not(c_primitive(picked_g,0))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_not(c_and(c_primitive(unblocked,0),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0)))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_not(c_and(c_primitive(unblocked,0),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0)))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_not(c_and(c_primitive(unblocked,0),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0)))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_not(c_some(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0)))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_not(c_some(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0)))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_not(c_some(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0)))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_not(c_all(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0)))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_not(c_all(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0)))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_not(c_all(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0)))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_not(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(at,0)),c_primitive(reward,0))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_not(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(at,0)),c_primitive(picked,0))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_not(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(at,0)),c_primitive(picked_g,0))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_not(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(reward,0)),c_primitive(at,0))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_not(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(picked,0)),c_primitive(at,0))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_not(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(picked_g,0)),c_primitive(at,0))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_all(r_primitive(adjacent,0,1),c_and(c_not(c_primitive(at,0)),c_primitive(unblocked,0))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_all(r_primitive(adjacent,0,1),c_and(c_not(c_primitive(reward,0)),c_primitive(unblocked,0))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_all(r_primitive(adjacent,0,1),c_and(c_not(c_primitive(picked,0)),c_primitive(unblocked,0))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_all(r_primitive(adjacent,0,1),c_and(c_not(c_primitive(picked_g,0)),c_primitive(unblocked,0))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_all(r_transitive_closure(r_primitive(adjacent,0,1)),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_all(r_transitive_closure(r_primitive(adjacent,0,1)),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent,0,1),c_all(r_transitive_closure(r_primitive(adjacent,0,1)),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent_g,0,1),c_and(c_not(c_some(r_primitive(adjacent,0,1),c_primitive(reward,0))),c_primitive(reward,0)))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent_g,0,1),c_and(c_not(c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))),c_primitive(reward,0)))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent_g,0,1),c_and(c_not(c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))),c_primitive(reward,0)))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent_g,0,1),c_and(c_not(c_all(r_primitive(adjacent,0,1),c_primitive(unblocked,0))),c_primitive(reward,0)))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent_g,0,1),c_and(c_not(c_some(r_primitive(adjacent,0,1),c_primitive(reward,0))),c_primitive(picked,0)))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent_g,0,1),c_and(c_not(c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))),c_primitive(picked,0)))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent_g,0,1),c_and(c_not(c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))),c_primitive(picked,0)))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent_g,0,1),c_and(c_not(c_all(r_primitive(adjacent,0,1),c_primitive(unblocked,0))),c_primitive(picked,0)))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent_g,0,1),c_and(c_not(c_some(r_primitive(adjacent,0,1),c_primitive(reward,0))),c_primitive(picked_g,0)))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent_g,0,1),c_and(c_not(c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))),c_primitive(picked_g,0)))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent_g,0,1),c_and(c_not(c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))),c_primitive(picked_g,0)))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent_g,0,1),c_and(c_not(c_all(r_primitive(adjacent,0,1),c_primitive(unblocked,0))),c_primitive(picked_g,0)))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent_g,0,1),c_and(c_primitive(picked_g,0),c_some(r_transitive_closure(r_primitive(adjacent,0,1)),c_primitive(reward,0))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent_g,0,1),c_and(c_primitive(picked_g,0),c_some(r_transitive_closure(r_primitive(adjacent,0,1)),c_primitive(picked,0))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent_g,0,1),c_and(c_not(c_primitive(reward,0)),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent_g,0,1),c_and(c_not(c_primitive(reward,0)),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent_g,0,1),c_and(c_not(c_primitive(reward,0)),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent_g,0,1),c_and(c_all(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_not(c_primitive(reward,0))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent_g,0,1),c_and(c_not(c_primitive(picked,0)),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent_g,0,1),c_and(c_not(c_primitive(picked,0)),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent_g,0,1),c_and(c_not(c_primitive(picked,0)),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent_g,0,1),c_and(c_all(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_not(c_primitive(picked,0))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent_g,0,1),c_and(c_not(c_primitive(picked_g,0)),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent_g,0,1),c_and(c_not(c_primitive(picked_g,0)),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent_g,0,1),c_and(c_not(c_primitive(picked_g,0)),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent_g,0,1),c_and(c_all(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_not(c_primitive(picked_g,0))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent_g,0,1),c_not(c_and(c_primitive(reward,0),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0)))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent_g,0,1),c_not(c_and(c_primitive(reward,0),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0)))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent_g,0,1),c_not(c_and(c_primitive(reward,0),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0)))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent_g,0,1),c_not(c_and(c_all(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_primitive(reward,0))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent_g,0,1),c_not(c_and(c_primitive(picked,0),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0)))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent_g,0,1),c_not(c_and(c_primitive(picked,0),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0)))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent_g,0,1),c_not(c_and(c_primitive(picked,0),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0)))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent_g,0,1),c_not(c_and(c_all(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_primitive(picked,0))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent_g,0,1),c_not(c_and(c_primitive(picked_g,0),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0)))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent_g,0,1),c_not(c_and(c_primitive(picked_g,0),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0)))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent_g,0,1),c_not(c_and(c_primitive(picked_g,0),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0)))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent_g,0,1),c_not(c_and(c_all(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_primitive(picked_g,0))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent_g,0,1),c_not(c_some(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0)))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent_g,0,1),c_not(c_some(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0)))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent_g,0,1),c_not(c_all(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(reward,0)))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent_g,0,1),c_not(c_all(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(picked,0)))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent_g,0,1),c_not(c_all(r_primitive(adjacent,0,1),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0)))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent_g,0,1),c_not(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_primitive(reward,0))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent_g,0,1),c_not(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_primitive(picked,0))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent_g,0,1),c_not(c_all(r_restrict(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_primitive(picked_g,0))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent_g,0,1),c_all(r_primitive(adjacent,0,1),c_and(c_not(c_primitive(reward,0)),c_primitive(unblocked,0))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent_g,0,1),c_all(r_primitive(adjacent,0,1),c_and(c_not(c_primitive(picked,0)),c_primitive(unblocked,0))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent_g,0,1),c_all(r_primitive(adjacent,0,1),c_and(c_not(c_primitive(picked_g,0)),c_primitive(unblocked,0))))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent_g,0,1),c_all(r_inverse(r_restrict(r_primitive(adjacent,0,1),c_primitive(reward,0))),c_primitive(unblocked,0)))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent_g,0,1),c_all(r_inverse(r_restrict(r_primitive(adjacent,0,1),c_primitive(picked,0))),c_primitive(unblocked,0)))
n_concept_distance(c_primitive(at,0),r_primitive(adjacent_g,0,1),c_all(r_inverse(r_restrict(r_primitive(adjacent,0,1),c_primitive(picked_g,0))),c_primitive(unblocked,0)))
n_concept_distance(c_and(c_not(c_all(r_primitive(adjacent,0,1),c_primitive(unblocked,0))),c_primitive(picked_g,0)),r_primitive(adjacent,0,1),c_primitive(reward,0))
n_concept_distance(c_and(c_not(c_all(r_primitive(adjacent,0,1),c_primitive(unblocked,0))),c_primitive(picked_g,0)),r_primitive(adjacent,0,1),c_primitive(picked,0))
n_concept_distance(c_and(c_not(c_all(r_primitive(adjacent,0,1),c_primitive(unblocked,0))),c_primitive(picked_g,0)),r_primitive(adjacent_g,0,1),c_primitive(reward,0))
n_concept_distance(c_and(c_not(c_all(r_primitive(adjacent,0,1),c_primitive(unblocked,0))),c_primitive(picked_g,0)),r_primitive(adjacent_g,0,1),c_primitive(picked,0))
n_concept_distance(c_and(c_not(c_primitive(unblocked,0)),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))),r_primitive(adjacent,0,1),c_primitive(reward,0))
n_concept_distance(c_and(c_not(c_primitive(unblocked,0)),c_some(r_primitive(adjacent,0,1),c_primitive(picked_g,0))),r_primitive(adjacent,0,1),c_primitive(picked,0))
Number of selected training instances: 2
Sum of number of states in selected training instances: 26
Max of number of states in selected training instances: 14
Number of features in the pool: 1388
Resulting sketch:
(:policy
(:boolean_features )
(:numerical_features "n_concept_distance(c_primitive(at,0),r_restrict(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_primitive(reward,0))" "n_count(c_primitive(reward,0))")
(:rule (:conditions (:c_n_gt 1) (:c_n_eq 0)) (:effects (:e_n_dec 1) (:e_n_inc 0)))
(:rule (:conditions (:c_n_gt 1) (:c_n_gt 0)) (:effects (:e_n_bot 1) (:e_n_dec 0)))
)
Numer of sketch rules: 2
Number of selected features: 2
Maximum complexity of selected feature: 6
Resulting sketch minimized:
(:policy
(:boolean_features )
(:numerical_features "n_concept_distance(c_primitive(at,0),r_restrict(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_primitive(reward,0))" "n_count(c_primitive(reward,0))")
(:rule (:conditions (:c_n_gt 1) (:c_n_eq 0)) (:effects (:e_n_dec 1) (:e_n_inc 0)))
(:rule (:conditions (:c_n_gt 1) (:c_n_gt 0)) (:effects (:e_n_bot 1) (:e_n_dec 0)))
)
Numer of sketch rules: 2
Number of selected features: 2
Maximum complexity of selected feature: 6
Summary:
Resulting sketch:
(:policy
(:boolean_features )
(:numerical_features "n_concept_distance(c_primitive(at,0),r_restrict(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_primitive(reward,0))" "n_count(c_primitive(reward,0))")
(:rule (:conditions (:c_n_gt 1) (:c_n_eq 0)) (:effects (:e_n_dec 1) (:e_n_inc 0)))
(:rule (:conditions (:c_n_gt 1) (:c_n_gt 0)) (:effects (:e_n_bot 1) (:e_n_dec 0)))
)
Numer of sketch rules: 2
Number of selected features: 2
Maximum complexity of selected feature: 6
Resulting structurally minimized sketch:
(:policy
(:boolean_features )
(:numerical_features "n_concept_distance(c_primitive(at,0),r_restrict(r_primitive(adjacent,0,1),c_primitive(unblocked,0)),c_primitive(reward,0))" "n_count(c_primitive(reward,0))")
(:rule (:conditions (:c_n_gt 1) (:c_n_eq 0)) (:effects (:e_n_dec 1) (:e_n_inc 0)))
(:rule (:conditions (:c_n_gt 1) (:c_n_gt 0)) (:effects (:e_n_bot 1) (:e_n_dec 0)))
)
Numer of sketch rules: 2
Number of selected features: 2
Maximum complexity of selected feature: 6
Number of training instances: 100
Number of selected training instances: 2
Number of states in selected training instances: 26
Max number of states in selected training instance: 14
Number of features in the pool: 1388
RESOURCES FOR PREPROCESSING: 20.08 CPU sec - 215.46 MB
RESOURCES FOR LEARNING: 15.84 CPU sec - 215.46 MB
================================================================================
END OF STEP #1: Incremental learning module. 36.01 CPU sec - 329.61 MB
================================================================================
