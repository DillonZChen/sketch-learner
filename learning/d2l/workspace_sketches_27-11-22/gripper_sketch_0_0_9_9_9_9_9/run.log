Changing working directory:  /proj/ssiw/projects/code/sketch-learner/learning/d2l/workspace/gripper_sketch_0_0_9_9_9_9_9
Creating sym link: /proj/ssiw/projects/code/sketch-learner/learning/d2l/libs/dlplan/libs/scorpion/fast-downward.py /proj/ssiw/projects/code/sketch-learner/learning/d2l/workspace/gripper_sketch_0_0_9_9_9_9_9/fast-downward.py
================================================================================
SLTP v.0.2.0
================================================================================
================================================================================
(pid: 4614) STARTING STEP #1: Incremental learning module
================================================================================
2022-11-26 23:01:56 INFO     [40m[34mInitializing DomainData...[0m
2022-11-26 23:01:56 INFO     Constructing DomainData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/gripper/domain.pddl
2022-11-26 23:01:57 INFO     [40m[34m..done[0m
2022-11-26 23:01:57 INFO     [40m[34mInitializing InstanceDatas...[0m
2022-11-26 23:01:57 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/gripper/p-1-0.pddl
Num states: 8
2022-11-26 23:01:58 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/gripper/p-2-0.pddl
Num states: 28
2022-11-26 23:01:58 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/gripper/p-3-0.pddl
Num states: 88
2022-11-26 23:01:59 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/gripper/p-4-0.pddl
Num states: 256
2022-11-26 23:01:59 INFO     Constructing InstanceData for filename /proj/ssiw/projects/code/sketch-learner/learning/d2l/benchmarks/gripper/p-5-0.pddl
Num states: 704
2022-11-26 23:01:59 INFO     [40m[34m..done[0m
2022-11-26 23:01:59 INFO     [40m[34mInitializing TupleGraphs...[0m
2022-11-26 23:01:59 INFO     [40m[34m..done[0m

2022-11-26 23:01:59 INFO     [40m[31mIteration: 0[0m
Number of selected instances: 1
Selected instances:
    id: 0 name: p-1-0
initial states: [0, 1, 2, 3, 4, 5]
2022-11-26 23:01:59 INFO     [40m[34mInitializing DomainFeatureData...[0m
[t=8.03246s, 1329588 KB] Started generating base features of complexity 1.
[t=8.03279s, 1329588 KB] Complexity 1:
    b_nullary: 0
    c_one_of: 2
    c_top: 1
    c_bot: 1
    c_primitive: 5
    r_primitive: 4
    c_and: 0
    c_not: 0
    c_equal: 0
    c_some: 0
    c_all: 0
    r_restrict: 0
    r_and: 0
    r_inverse: 0
    r_transitive_closure: 0
    b_empty: 0
    n_count: 0
    n_concept_distance: 0
[t=8.03289s, 1329588 KB] Finished generating base features.
[t=8.03294s, 1329588 KB] Started generating composite features. 
[t=8.03314s, 1329588 KB] Complexity 2:
Total concept elements: 16
Total role elements: 7
Total numerical elements: 7
Total boolean elements: 4
    b_nullary: 0
    c_one_of: 2
    c_top: 1
    c_bot: 1
    c_primitive: 5
    r_primitive: 4
    c_and: 0
    c_not: 7
    c_equal: 0
    c_some: 0
    c_all: 0
    r_restrict: 0
    r_and: 0
    r_inverse: 3
    r_transitive_closure: 0
    b_empty: 4
    n_count: 7
    n_concept_distance: 0
[t=8.03417s, 1329588 KB] Complexity 3:
Total concept elements: 31
Total role elements: 11
Total numerical elements: 10
Total boolean elements: 4
    b_nullary: 0
    c_one_of: 2
    c_top: 1
    c_bot: 1
    c_primitive: 5
    r_primitive: 4
    c_and: 2
    c_not: 7
    c_equal: 2
    c_some: 6
    c_all: 5
    r_restrict: 4
    r_and: 0
    r_inverse: 3
    r_transitive_closure: 0
    b_empty: 4
    n_count: 10
    n_concept_distance: 0
[t=8.03596s, 1329588 KB] Complexity 4:
Total concept elements: 45
Total role elements: 15
Total numerical elements: 31
Total boolean elements: 9
    b_nullary: 0
    c_one_of: 2
    c_top: 1
    c_bot: 1
    c_primitive: 5
    r_primitive: 4
    c_and: 6
    c_not: 14
    c_equal: 2
    c_some: 7
    c_all: 7
    r_restrict: 4
    r_and: 0
    r_inverse: 7
    r_transitive_closure: 0
    b_empty: 9
    n_count: 22
    n_concept_distance: 9
[t=8.04083s, 1329588 KB] Complexity 5:
Total concept elements: 71
Total role elements: 16
Total numerical elements: 35
Total boolean elements: 11
    b_nullary: 0
    c_one_of: 2
    c_top: 1
    c_bot: 1
    c_primitive: 5
    r_primitive: 4
    c_and: 21
    c_not: 17
    c_equal: 2
    c_some: 9
    c_all: 13
    r_restrict: 4
    r_and: 1
    r_inverse: 7
    r_transitive_closure: 0
    b_empty: 11
    n_count: 26
    n_concept_distance: 9
[t=8.04639s, 1329588 KB] Complexity 6:
Total concept elements: 161
Total role elements: 17
Total numerical elements: 63
Total boolean elements: 15
    b_nullary: 0
    c_one_of: 2
    c_top: 1
    c_bot: 1
    c_primitive: 5
    r_primitive: 4
    c_and: 73
    c_not: 32
    c_equal: 2
    c_some: 17
    c_all: 28
    r_restrict: 4
    r_and: 1
    r_inverse: 8
    r_transitive_closure: 0
    b_empty: 15
    n_count: 40
    n_concept_distance: 23
[t=8.05557s, 1329588 KB] Complexity 7:
Total concept elements: 252
Total role elements: 18
Total numerical elements: 103
Total boolean elements: 22
    b_nullary: 0
    c_one_of: 2
    c_top: 1
    c_bot: 1
    c_primitive: 5
    r_primitive: 4
    c_and: 117
    c_not: 79
    c_equal: 2
    c_some: 17
    c_all: 28
    r_restrict: 4
    r_and: 2
    r_inverse: 8
    r_transitive_closure: 0
    b_empty: 22
    n_count: 72
    n_concept_distance: 31
[t=8.07711s, 1329588 KB] Complexity 8:
Total concept elements: 437
Total role elements: 19
Total numerical elements: 160
Total boolean elements: 34
    b_nullary: 0
    c_one_of: 2
    c_top: 1
    c_bot: 1
    c_primitive: 5
    r_primitive: 4
    c_and: 241
    c_not: 113
    c_equal: 2
    c_some: 26
    c_all: 46
    r_restrict: 4
    r_and: 2
    r_inverse: 9
    r_transitive_closure: 0
    b_empty: 34
    n_count: 107
    n_concept_distance: 53
[t=8.11549s, 1329588 KB] Complexity 9:
Total concept elements: 722
Total role elements: 19
Total numerical elements: 266
Total boolean elements: 42
    b_nullary: 0
    c_one_of: 2
    c_top: 1
    c_bot: 1
    c_primitive: 5
    r_primitive: 4
    c_and: 428
    c_not: 207
    c_equal: 2
    c_some: 28
    c_all: 48
    r_restrict: 4
    r_and: 2
    r_inverse: 9
    r_transitive_closure: 0
    b_empty: 42
    n_count: 174
    n_concept_distance: 92
[t=8.11561s, 1329588 KB] Finished generating composite features.
DomainFeatureDataStatistics:
    num_dlplan_states: 8
    num_boolean_features: 42
    num_numerical_features: 266
2022-11-26 23:01:59 INFO     [40m[34m..done[0m
2022-11-26 23:01:59 INFO     [40m[34mInitializing InstanceFeatureDatas...[0m
2022-11-26 23:01:59 INFO     [40m[34m..done[0m
2022-11-26 23:01:59 INFO     [40m[34mInitializing StatePairEquivalenceDatas...[0m
2022-11-26 23:01:59 INFO     [40m[34m..done[0m
2022-11-26 23:01:59 INFO     [40m[34mInitializing TupleGraphEquivalences...[0m
2022-11-26 23:01:59 INFO     [40m[34m..done[0m
2022-11-26 23:01:59 INFO     [40m[34mInitializing TupleGraphEquivalenceMinimizer...[0m
Num subgoals: 7
Num of selected subgoals: 3
Num rules: 3
Num of selected rules: 3
Num subgoals: 5
Num of selected subgoals: 2
Num rules: 2
Num of selected rules: 2
Num subgoals: 6
Num of selected subgoals: 3
Num rules: 3
Num of selected rules: 3
Num subgoals: 6
Num of selected subgoals: 3
Num rules: 3
Num of selected rules: 3
Num subgoals: 6
Num of selected subgoals: 3
Num rules: 3
Num of selected rules: 3
Num subgoals: 6
Num of selected subgoals: 3
Num rules: 3
Num of selected rules: 3
2022-11-26 23:01:59 INFO     [40m[34m..done[0m
Number of initial D2 facts: 10
Number of D2 facts: 10 of 121
2022-11-26 23:01:59 INFO     [40m[34mGrounding Logic Program...[0m
2022-11-26 23:01:59 INFO     [40m[34m..done[0m
2022-11-26 23:01:59 INFO     [40m[34mSolving Logic Program...[0m
2022-11-26 23:01:59 INFO     [40m[34m..done[0m
Clingo statistics:
Total time:  0.11722207069396973
CPU time:  0.16972400000000004
Solve time:  0.010294198989868164
2022-11-26 23:01:59 INFO     Learned the following sketch:
(:policy
(:boolean_features )
(:numerical_features "n_concept_distance(c_primitive(ball,0),r_primitive(carry,0,1),c_equal(r_primitive(at,0,1),r_primitive(at_g,0,1)))")
(:rule (:conditions (:c_n_gt 0)) (:effects (:e_n_bot 0)))
(:rule (:conditions (:c_n_gt 0)) (:effects (:e_n_dec 0)))
)
Numer of sketch rules: 2
Number of selected features: 1
Maximum complexity of selected feature: 6
[40m[31mSketch cycles[0m
Instance: 0 p-1-0
5 (instance index=0, state index=5, atoms={at-robby(roomb), free(left), carry(ball1,right)})
5 (instance index=0, state index=5, atoms={at-robby(roomb), free(left), carry(ball1,right)})
Number of unsatisfied D2 facts: 12
Number of D2 facts: 22 of 121
2022-11-26 23:02:00 INFO     [40m[34mGrounding Logic Program...[0m
2022-11-26 23:02:00 INFO     [40m[34m..done[0m
2022-11-26 23:02:00 INFO     [40m[34mSolving Logic Program...[0m
2022-11-26 23:02:00 INFO     [40m[34m..done[0m
Clingo statistics:
Total time:  0.24869799613952637
CPU time:  0.3274039999999999
Solve time:  0.01344609260559082
2022-11-26 23:02:00 INFO     Learned the following sketch:
(:policy
(:boolean_features )
(:numerical_features "n_concept_distance(c_primitive(ball,0),r_restrict(r_primitive(at_g,0,1),c_primitive(at-robby,0)),c_equal(r_primitive(at,0,1),r_primitive(at_g,0,1)))" "n_count(r_primitive(at,0,1))")
(:rule (:conditions (:c_n_eq 1) (:c_n_gt 0)) (:effects (:e_n_bot 1) (:e_n_dec 0)))
(:rule (:conditions (:c_n_eq 1) (:c_n_gt 0)) (:effects (:e_n_inc 1) (:e_n_dec 0)))
(:rule (:conditions (:c_n_gt 1) (:c_n_gt 0)) (:effects (:e_n_bot 1) (:e_n_inc 0)))
(:rule (:conditions (:c_n_gt 1) (:c_n_gt 0)) (:effects (:e_n_dec 1) (:e_n_bot 0)))
)
Numer of sketch rules: 4
Number of selected features: 2
Maximum complexity of selected feature: 8
2022-11-26 23:02:00 INFO     [40m[34mVerifying learned sketch...[0m
[40m[31mSketch fails to bound width of a state[0m
Instance: 1 p-2-0
Source_state: 26 (instance index=1, state index=26, atoms={at-robby(rooma), free(left), carry(ball1,right), at(ball2,roomb)})
2022-11-26 23:02:00 INFO     [40m[34m..done[0m
2022-11-26 23:02:00 INFO     [40m[33mIteration summary:[0m
DomainFeatureDataStatistics:
    num_dlplan_states: 8
    num_boolean_features: 42
    num_numerical_features: 266
StatePairEquivalenceStatistics:
    num_state_pairs: 18
    num_equivalences: 11
TupleGraphEquivalenceMinimizerStatistics:
    Number of input tuples: 36
    Number of output tuples: 17
Smallest unsolved instance: 1
Selected instances: [1]

2022-11-26 23:02:00 INFO     [40m[31mIteration: 1[0m
Number of selected instances: 1
Selected instances:
    id: 1 name: p-2-0
initial states: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26]
2022-11-26 23:02:00 INFO     [40m[34mInitializing DomainFeatureData...[0m
[t=8.6412s, 3524584 KB] Started generating base features of complexity 1.
[t=8.64144s, 3524584 KB] Complexity 1:
    b_nullary: 0
    c_one_of: 2
    c_top: 1
    c_bot: 1
    c_primitive: 5
    r_primitive: 4
    c_and: 0
    c_not: 0
    c_equal: 0
    c_some: 0
    c_all: 0
    r_restrict: 0
    r_and: 0
    r_inverse: 0
    r_transitive_closure: 0
    b_empty: 0
    n_count: 0
    n_concept_distance: 0
[t=8.64154s, 3524584 KB] Finished generating base features.
[t=8.64158s, 3524584 KB] Started generating composite features. 
[t=8.64185s, 3524584 KB] Complexity 2:
Total concept elements: 16
Total role elements: 7
Total numerical elements: 6
Total boolean elements: 4
    b_nullary: 0
    c_one_of: 2
    c_top: 1
    c_bot: 1
    c_primitive: 5
    r_primitive: 4
    c_and: 0
    c_not: 7
    c_equal: 0
    c_some: 0
    c_all: 0
    r_restrict: 0
    r_and: 0
    r_inverse: 3
    r_transitive_closure: 0
    b_empty: 4
    n_count: 6
    n_concept_distance: 0
[t=8.64367s, 3524584 KB] Complexity 3:
Total concept elements: 31
Total role elements: 11
Total numerical elements: 9
Total boolean elements: 4
    b_nullary: 0
    c_one_of: 2
    c_top: 1
    c_bot: 1
    c_primitive: 5
    r_primitive: 4
    c_and: 2
    c_not: 7
    c_equal: 2
    c_some: 6
    c_all: 5
    r_restrict: 4
    r_and: 0
    r_inverse: 3
    r_transitive_closure: 0
    b_empty: 4
    n_count: 9
    n_concept_distance: 0
[t=8.64652s, 3524584 KB] Complexity 4:
Total concept elements: 45
Total role elements: 15
Total numerical elements: 24
Total boolean elements: 9
    b_nullary: 0
    c_one_of: 2
    c_top: 1
    c_bot: 1
    c_primitive: 5
    r_primitive: 4
    c_and: 6
    c_not: 14
    c_equal: 2
    c_some: 7
    c_all: 7
    r_restrict: 4
    r_and: 0
    r_inverse: 7
    r_transitive_closure: 0
    b_empty: 9
    n_count: 21
    n_concept_distance: 3
[t=8.65179s, 3524584 KB] Complexity 5:
Total concept elements: 71
Total role elements: 16
Total numerical elements: 33
Total boolean elements: 11
    b_nullary: 0
    c_one_of: 2
    c_top: 1
    c_bot: 1
    c_primitive: 5
    r_primitive: 4
    c_and: 21
    c_not: 17
    c_equal: 2
    c_some: 9
    c_all: 13
    r_restrict: 4
    r_and: 1
    r_inverse: 7
    r_transitive_closure: 0
    b_empty: 11
    n_count: 30
    n_concept_distance: 3
[t=8.66008s, 3524584 KB] Complexity 6:
Total concept elements: 166
Total role elements: 17
Total numerical elements: 48
Total boolean elements: 15
    b_nullary: 0
    c_one_of: 2
    c_top: 1
    c_bot: 1
    c_primitive: 5
    r_primitive: 4
    c_and: 73
    c_not: 32
    c_equal: 2
    c_some: 20
    c_all: 30
    r_restrict: 4
    r_and: 1
    r_inverse: 8
    r_transitive_closure: 0
    b_empty: 15
    n_count: 45
    n_concept_distance: 3
[t=8.67422s, 3524584 KB] Complexity 7:
Total concept elements: 258
Total role elements: 18
Total numerical elements: 112
Total boolean elements: 26
    b_nullary: 0
    c_one_of: 2
    c_top: 1
    c_bot: 1
    c_primitive: 5
    r_primitive: 4
    c_and: 117
    c_not: 80
    c_equal: 2
    c_some: 20
    c_all: 30
    r_restrict: 4
    r_and: 2
    r_inverse: 8
    r_transitive_closure: 0
    b_empty: 26
    n_count: 103
    n_concept_distance: 9
[t=8.70828s, 3524584 KB] Complexity 8:
Total concept elements: 511
Total role elements: 19
Total numerical elements: 168
Total boolean elements: 39
    b_nullary: 0
    c_one_of: 2
    c_top: 1
    c_bot: 1
    c_primitive: 5
    r_primitive: 4
    c_and: 249
    c_not: 115
    c_equal: 2
    c_some: 59
    c_all: 77
    r_restrict: 4
    r_and: 2
    r_inverse: 9
    r_transitive_closure: 0
    b_empty: 39
    n_count: 159
    n_concept_distance: 9
[t=8.76675s, 3524584 KB] Complexity 9:
Total concept elements: 857
Total role elements: 19
Total numerical elements: 387
Total boolean elements: 71
    b_nullary: 0
    c_one_of: 2
    c_top: 1
    c_bot: 1
    c_primitive: 5
    r_primitive: 4
    c_and: 452
    c_not: 244
    c_equal: 2
    c_some: 66
    c_all: 84
    r_restrict: 4
    r_and: 2
    r_inverse: 9
    r_transitive_closure: 0
    b_empty: 71
    n_count: 350
    n_concept_distance: 37
[t=8.76687s, 3524584 KB] Finished generating composite features.
DomainFeatureDataStatistics:
    num_dlplan_states: 28
    num_boolean_features: 71
    num_numerical_features: 387
2022-11-26 23:02:00 INFO     [40m[34m..done[0m
2022-11-26 23:02:00 INFO     [40m[34mInitializing InstanceFeatureDatas...[0m
2022-11-26 23:02:00 INFO     [40m[34m..done[0m
2022-11-26 23:02:00 INFO     [40m[34mInitializing StatePairEquivalenceDatas...[0m
2022-11-26 23:02:00 INFO     [40m[34m..done[0m
2022-11-26 23:02:00 INFO     [40m[34mInitializing TupleGraphEquivalences...[0m
2022-11-26 23:02:00 INFO     [40m[34m..done[0m
2022-11-26 23:02:00 INFO     [40m[34mInitializing TupleGraphEquivalenceMinimizer...[0m
Num subgoals: 10
Num of selected subgoals: 3
Num rules: 3
Num of selected rules: 3
Num subgoals: 6
Num of selected subgoals: 2
Num rules: 2
Num of selected rules: 2
Num subgoals: 8
Num of selected subgoals: 4
Num rules: 4
Num of selected rules: 4
Num subgoals: 8
Num of selected subgoals: 4
Num rules: 4
Num of selected rules: 4
Num subgoals: 8
Num of selected subgoals: 4
Num rules: 4
Num of selected rules: 4
Num subgoals: 8
Num of selected subgoals: 4
Num rules: 4
Num of selected rules: 4
Num subgoals: 7
Num of selected subgoals: 3
Num rules: 3
Num of selected rules: 3
Num subgoals: 8
Num of selected subgoals: 3
Num rules: 3
Num of selected rules: 3
Num subgoals: 7
Num of selected subgoals: 3
Num rules: 3
Num of selected rules: 3
Num subgoals: 8
Num of selected subgoals: 3
Num rules: 3
Num of selected rules: 3
Num subgoals: 7
Num of selected subgoals: 3
Num rules: 3
Num of selected rules: 3
Num subgoals: 7
Num of selected subgoals: 3
Num rules: 3
Num of selected rules: 3
Num subgoals: 8
Num of selected subgoals: 3
Num rules: 3
Num of selected rules: 3
Num subgoals: 8
Num of selected subgoals: 3
Num rules: 3
Num of selected rules: 3
Num subgoals: 8
Num of selected subgoals: 3
Num rules: 3
Num of selected rules: 3
Num subgoals: 8
Num of selected subgoals: 3
Num rules: 3
Num of selected rules: 3
Num subgoals: 8
Num of selected subgoals: 3
Num rules: 3
Num of selected rules: 3
Num subgoals: 8
Num of selected subgoals: 4
Num rules: 4
Num of selected rules: 4
Num subgoals: 8
Num of selected subgoals: 4
Num rules: 4
Num of selected rules: 4
Num subgoals: 8
Num of selected subgoals: 3
Num rules: 3
Num of selected rules: 3
Num subgoals: 8
Num of selected subgoals: 4
Num rules: 4
Num of selected rules: 4
Num subgoals: 8
Num of selected subgoals: 4
Num rules: 4
Num of selected rules: 4
Num subgoals: 7
Num of selected subgoals: 3
Num rules: 3
Num of selected rules: 3
Num subgoals: 7
Num of selected subgoals: 3
Num rules: 3
Num of selected rules: 3
Num subgoals: 7
Num of selected subgoals: 3
Num rules: 3
Num of selected rules: 3
Num subgoals: 7
Num of selected subgoals: 3
Num rules: 3
Num of selected rules: 3
2022-11-26 23:02:00 INFO     [40m[34m..done[0m
Number of initial D2 facts: 34
Number of D2 facts: 34 of 961
2022-11-26 23:02:01 INFO     [40m[34mGrounding Logic Program...[0m
2022-11-26 23:02:01 INFO     [40m[34m..done[0m
2022-11-26 23:02:01 INFO     [40m[34mSolving Logic Program...[0m
2022-11-26 23:02:01 INFO     [40m[34m..done[0m
Clingo statistics:
Total time:  0.5639269351959229
CPU time:  0.7158329999999999
Solve time:  0.017364978790283203
2022-11-26 23:02:01 INFO     Learned the following sketch:
(:policy
(:boolean_features )
(:numerical_features "n_count(c_some(r_primitive(at,0,1),c_one_of(rooma)))" "n_count(r_primitive(carry,0,1))")
(:rule (:conditions (:c_n_eq 1) (:c_n_gt 0)) (:effects (:e_n_bot 1) (:e_n_bot 0)))
(:rule (:conditions (:c_n_eq 1) (:c_n_gt 0)) (:effects (:e_n_inc 1) (:e_n_bot 0)))
(:rule (:conditions (:c_n_eq 1) (:c_n_gt 0)) (:effects (:e_n_inc 1) (:e_n_dec 0)))
(:rule (:conditions (:c_n_gt 1) (:c_n_eq 0)) (:effects (:e_n_bot 1) (:e_n_bot 0)))
(:rule (:conditions (:c_n_gt 1) (:c_n_eq 0)) (:effects (:e_n_dec 1) (:e_n_bot 0)))
(:rule (:conditions (:c_n_gt 1) (:c_n_gt 0)) (:effects (:e_n_bot 1) (:e_n_bot 0)))
(:rule (:conditions (:c_n_gt 1) (:c_n_gt 0)) (:effects (:e_n_inc 1) (:e_n_dec 0)))
)
Numer of sketch rules: 7
Number of selected features: 2
Maximum complexity of selected feature: 4
[40m[31mSketch cycles[0m
Instance: 1 p-2-0
26 (instance index=1, state index=26, atoms={at-robby(rooma), free(left), carry(ball1,right), at(ball2,roomb)})
26 (instance index=1, state index=26, atoms={at-robby(rooma), free(left), carry(ball1,right), at(ball2,roomb)})
Number of unsatisfied D2 facts: 28
Number of D2 facts: 62 of 961
2022-11-26 23:02:02 INFO     [40m[34mGrounding Logic Program...[0m
2022-11-26 23:02:02 INFO     [40m[34m..done[0m
2022-11-26 23:02:02 INFO     [40m[34mSolving Logic Program...[0m
2022-11-26 23:02:02 INFO     [40m[34m..done[0m
Clingo statistics:
Total time:  1.0442371368408203
CPU time:  1.2577850000000002
Solve time:  0.025303125381469727
2022-11-26 23:02:02 INFO     Learned the following sketch:
(:policy
(:boolean_features "b_empty(c_and(c_one_of(roomb),c_primitive(at-robby,0)))")
(:numerical_features "n_count(c_not(c_equal(r_primitive(at,0,1),r_primitive(at_g,0,1))))")
(:rule (:conditions (:c_b_neg 0) (:c_n_gt 0)) (:effects (:e_b_bot 0) (:e_n_dec 0)))
(:rule (:conditions (:c_b_neg 0) (:c_n_gt 0)) (:effects (:e_b_pos 0) (:e_n_bot 0)))
(:rule (:conditions (:c_b_pos 0) (:c_n_gt 0)) (:effects (:e_b_bot 0) (:e_n_bot 0)))
(:rule (:conditions (:c_b_pos 0) (:c_n_gt 0)) (:effects (:e_b_neg 0) (:e_n_bot 0)))
)
Numer of sketch rules: 4
Number of selected features: 2
Maximum complexity of selected feature: 5
[40m[31mSketch cycles[0m
Instance: 1 p-2-0
26 (instance index=1, state index=26, atoms={at-robby(rooma), free(left), carry(ball1,right), at(ball2,roomb)})
26 (instance index=1, state index=26, atoms={at-robby(rooma), free(left), carry(ball1,right), at(ball2,roomb)})
Number of unsatisfied D2 facts: 30
Number of D2 facts: 92 of 961
2022-11-26 23:02:03 INFO     [40m[34mGrounding Logic Program...[0m
2022-11-26 23:02:03 INFO     [40m[34m..done[0m
2022-11-26 23:02:03 INFO     [40m[34mSolving Logic Program...[0m
2022-11-26 23:02:03 INFO     [40m[34m..done[0m
Clingo statistics:
Total time:  1.2091431617736816
CPU time:  1.676644
Solve time:  0.03223109245300293
2022-11-26 23:02:03 INFO     Learned the following sketch:
(:policy
(:boolean_features "b_empty(c_some(r_primitive(at,0,1),c_one_of(rooma)))")
(:numerical_features "n_count(c_and(c_one_of(rooma),c_primitive(at-robby,0)))" "n_count(r_primitive(carry,0,1))")
(:rule (:conditions (:c_n_eq 1) (:c_b_neg 0) (:c_n_eq 0)) (:effects (:e_n_bot 1) (:e_b_bot 0) (:e_n_inc 0)))
(:rule (:conditions (:c_n_eq 1) (:c_b_neg 0) (:c_n_gt 0)) (:effects (:e_n_inc 1) (:e_b_bot 0) (:e_n_bot 0)))
(:rule (:conditions (:c_n_eq 1) (:c_b_neg 0) (:c_n_gt 0)) (:effects (:e_n_inc 1) (:e_b_pos 0) (:e_n_bot 0)))
(:rule (:conditions (:c_n_gt 1) (:c_b_neg 0) (:c_n_eq 0)) (:effects (:e_n_bot 1) (:e_b_bot 0) (:e_n_inc 0)))
(:rule (:conditions (:c_n_gt 1) (:c_b_neg 0) (:c_n_gt 0)) (:effects (:e_n_inc 1) (:e_b_pos 0) (:e_n_bot 0)))
(:rule (:conditions (:c_n_gt 1) (:c_b_pos 0) (:c_n_eq 0)) (:effects (:e_n_dec 1) (:e_b_bot 0) (:e_n_bot 0)))
(:rule (:conditions (:c_n_gt 1) (:c_b_pos 0) (:c_n_gt 0)) (:effects (:e_n_bot 1) (:e_b_bot 0) (:e_n_dec 0)))
)
Numer of sketch rules: 7
Number of selected features: 3
Maximum complexity of selected feature: 4
2022-11-26 23:02:03 INFO     [40m[34mVerifying learned sketch...[0m
[40m[31mSketch fails to bound width of a state[0m
Instance: 2 p-3-0
Source_state: 16 (instance index=2, state index=16, atoms={at-robby(rooma), carry(ball3,left), carry(ball2,right), at(ball1,rooma)})
2022-11-26 23:02:03 INFO     [40m[34m..done[0m
2022-11-26 23:02:03 INFO     [40m[33mIteration summary:[0m
DomainFeatureDataStatistics:
    num_dlplan_states: 28
    num_boolean_features: 71
    num_numerical_features: 387
StatePairEquivalenceStatistics:
    num_state_pairs: 96
    num_equivalences: 31
TupleGraphEquivalenceMinimizerStatistics:
    Number of input tuples: 200
    Number of output tuples: 85
Smallest unsolved instance: 2
Selected instances: [2]

2022-11-26 23:02:03 INFO     [40m[31mIteration: 2[0m
Number of selected instances: 1
Selected instances:
    id: 2 name: p-3-0
initial states: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85]
2022-11-26 23:02:03 INFO     [40m[34mInitializing DomainFeatureData...[0m
[t=12.295s, 3524584 KB] Started generating base features of complexity 1.
[t=12.2954s, 3524584 KB] Complexity 1:
    b_nullary: 0
    c_one_of: 2
    c_top: 1
    c_bot: 1
    c_primitive: 5
    r_primitive: 4
    c_and: 0
    c_not: 0
    c_equal: 0
    c_some: 0
    c_all: 0
    r_restrict: 0
    r_and: 0
    r_inverse: 0
    r_transitive_closure: 0
    b_empty: 0
    n_count: 0
    n_concept_distance: 0
[t=12.2955s, 3524584 KB] Finished generating base features.
[t=12.2956s, 3524584 KB] Started generating composite features. 
[t=12.2961s, 3524584 KB] Complexity 2:
Total concept elements: 16
Total role elements: 7
Total numerical elements: 8
Total boolean elements: 4
    b_nullary: 0
    c_one_of: 2
    c_top: 1
    c_bot: 1
    c_primitive: 5
    r_primitive: 4
    c_and: 0
    c_not: 7
    c_equal: 0
    c_some: 0
    c_all: 0
    r_restrict: 0
    r_and: 0
    r_inverse: 3
    r_transitive_closure: 0
    b_empty: 4
    n_count: 8
    n_concept_distance: 0
[t=12.3006s, 3524584 KB] Complexity 3:
Total concept elements: 31
Total role elements: 11
Total numerical elements: 12
Total boolean elements: 4
    b_nullary: 0
    c_one_of: 2
    c_top: 1
    c_bot: 1
    c_primitive: 5
    r_primitive: 4
    c_and: 2
    c_not: 7
    c_equal: 2
    c_some: 6
    c_all: 5
    r_restrict: 4
    r_and: 0
    r_inverse: 3
    r_transitive_closure: 0
    b_empty: 4
    n_count: 12
    n_concept_distance: 0
[t=12.3074s, 3524584 KB] Complexity 4:
Total concept elements: 45
Total role elements: 15
Total numerical elements: 28
Total boolean elements: 9
    b_nullary: 0
    c_one_of: 2
    c_top: 1
    c_bot: 1
    c_primitive: 5
    r_primitive: 4
    c_and: 6
    c_not: 14
    c_equal: 2
    c_some: 7
    c_all: 7
    r_restrict: 4
    r_and: 0
    r_inverse: 7
    r_transitive_closure: 0
    b_empty: 9
    n_count: 25
    n_concept_distance: 3
[t=12.3204s, 3524584 KB] Complexity 5:
Total concept elements: 71
Total role elements: 16
Total numerical elements: 37
Total boolean elements: 11
    b_nullary: 0
    c_one_of: 2
    c_top: 1
    c_bot: 1
    c_primitive: 5
    r_primitive: 4
    c_and: 21
    c_not: 17
    c_equal: 2
    c_some: 9
    c_all: 13
    r_restrict: 4
    r_and: 1
    r_inverse: 7
    r_transitive_closure: 0
    b_empty: 11
    n_count: 34
    n_concept_distance: 3
[t=12.3401s, 3524584 KB] Complexity 6:
Total concept elements: 164
Total role elements: 17
Total numerical elements: 51
Total boolean elements: 15
    b_nullary: 0
    c_one_of: 2
    c_top: 1
    c_bot: 1
    c_primitive: 5
    r_primitive: 4
    c_and: 73
    c_not: 32
    c_equal: 2
    c_some: 19
    c_all: 29
    r_restrict: 4
    r_and: 1
    r_inverse: 8
    r_transitive_closure: 0
    b_empty: 15
    n_count: 48
    n_concept_distance: 3
[t=12.3709s, 3524584 KB] Complexity 7:
Total concept elements: 256
Total role elements: 18
Total numerical elements: 113
Total boolean elements: 25
    b_nullary: 0
    c_one_of: 2
    c_top: 1
    c_bot: 1
    c_primitive: 5
    r_primitive: 4
    c_and: 117
    c_not: 80
    c_equal: 2
    c_some: 19
    c_all: 29
    r_restrict: 4
    r_and: 2
    r_inverse: 8
    r_transitive_closure: 0
    b_empty: 25
    n_count: 104
    n_concept_distance: 9
[t=12.4441s, 3524584 KB] Complexity 8:
Total concept elements: 500
Total role elements: 19
Total numerical elements: 172
Total boolean elements: 40
    b_nullary: 0
    c_one_of: 2
    c_top: 1
    c_bot: 1
    c_primitive: 5
    r_primitive: 4
    c_and: 245
    c_not: 115
    c_equal: 2
    c_some: 56
    c_all: 73
    r_restrict: 4
    r_and: 2
    r_inverse: 9
    r_transitive_closure: 0
    b_empty: 40
    n_count: 163
    n_concept_distance: 9
[t=12.5656s, 3524584 KB] Complexity 9:
Total concept elements: 837
Total role elements: 19
Total numerical elements: 381
Total boolean elements: 69
    b_nullary: 0
    c_one_of: 2
    c_top: 1
    c_bot: 1
    c_primitive: 5
    r_primitive: 4
    c_and: 442
    c_not: 241
    c_equal: 2
    c_some: 63
    c_all: 80
    r_restrict: 4
    r_and: 2
    r_inverse: 9
    r_transitive_closure: 0
    b_empty: 69
    n_count: 348
    n_concept_distance: 33
[t=12.5658s, 3524584 KB] Finished generating composite features.
DomainFeatureDataStatistics:
    num_dlplan_states: 88
    num_boolean_features: 69
    num_numerical_features: 381
2022-11-26 23:02:04 INFO     [40m[34m..done[0m
2022-11-26 23:02:04 INFO     [40m[34mInitializing InstanceFeatureDatas...[0m
2022-11-26 23:02:04 INFO     [40m[34m..done[0m
2022-11-26 23:02:04 INFO     [40m[34mInitializing StatePairEquivalenceDatas...[0m
2022-11-26 23:02:05 INFO     [40m[34m..done[0m
2022-11-26 23:02:05 INFO     [40m[34mInitializing TupleGraphEquivalences...[0m
2022-11-26 23:02:05 INFO     [40m[34m..done[0m
2022-11-26 23:02:05 INFO     [40m[34mInitializing TupleGraphEquivalenceMinimizer...[0m
Num subgoals: 13
Num of selected subgoals: 3
Num rules: 3
Num of selected rules: 3
Num subgoals: 7
Num of selected subgoals: 2
Num rules: 2
Num of selected rules: 2
Num subgoals: 10
Num of selected subgoals: 4
Num rules: 4
Num of selected rules: 4
Num subgoals: 10
Num of selected subgoals: 4
Num rules: 4
Num of selected rules: 4
Num subgoals: 10
Num of selected subgoals: 4
Num rules: 4
Num of selected rules: 4
Num subgoals: 10
Num of selected subgoals: 4
Num rules: 4
Num of selected rules: 4
Num subgoals: 10
Num of selected subgoals: 4
Num rules: 4
Num of selected rules: 4
Num subgoals: 10
Num of selected subgoals: 4
Num rules: 4
Num of selected rules: 4
Num subgoals: 8
Num of selected subgoals: 3
Num rules: 3
Num of selected rules: 3
Num subgoals: 9
Num of selected subgoals: 3
Num rules: 3
Num of selected rules: 3
Num subgoals: 9
Num of selected subgoals: 3
Num rules: 3
Num of selected rules: 3
Num subgoals: 8
Num of selected subgoals: 3
Num rules: 3
Num of selected rules: 3
Num subgoals: 9
Num of selected subgoals: 3
Num rules: 3
Num of selected rules: 3
Num subgoals: 9
Num of selected subgoals: 3
Num rules: 3
Num of selected rules: 3
Num subgoals: 8
Num of selected subgoals: 3
Num rules: 3
Num of selected rules: 3
Num subgoals: 9
Num of selected subgoals: 3
Num rules: 3
Num of selected rules: 3
Num subgoals: 9
Num of selected subgoals: 3
Num rules: 3
Num of selected rules: 3
Num subgoals: 8
Num of selected subgoals: 3
Num rules: 3
Num of selected rules: 3
Num subgoals: 8
Num of selected subgoals: 3
Num rules: 3
Num of selected rules: 3
Num subgoals: 8
Num of selected subgoals: 3
Num rules: 3
Num of selected rules: 3
Num subgoals: 9
Num of selected subgoals: 3
Num rules: 3
Num of selected rules: 3
Num subgoals: 9
Num of selected subgoals: 3
Num rules: 3
Num of selected rules: 3
Num subgoals: 9
Num of selected subgoals: 3
Num rules: 3
Num of selected rules: 3
Num subgoals: 9
Num of selected subgoals: 3
Num rules: 3
Num of selected rules: 3
Num subgoals: 9
Num of selected subgoals: 3
Num rules: 3
Num of selected rules: 3
Num subgoals: 9
Num of selected subgoals: 3
Num rules: 3
Num of selected rules: 3
Num subgoals: 9
Num of selected subgoals: 3
Num rules: 3
Num of selected rules: 3
Num subgoals: 9
Num of selected subgoals: 3
Num rules: 3
Num of selected rules: 3
Num subgoals: 9
Num of selected subgoals: 3
Num rules: 3
Num of selected rules: 3
Num subgoals: 11
Num of selected subgoals: 3
Num rules: 3
Num of selected rules: 3
Num subgoals: 9
Num of selected subgoals: 4
Num rules: 4
Num of selected rules: 4
Num subgoals: 9
Num of selected subgoals: 4
Num rules: 4
Num of selected rules: 4
Num subgoals: 9
Num of selected subgoals: 4
Num rules: 4
Num of selected rules: 4
Num subgoals: 9
Num of selected subgoals: 4
Num rules: 4
Num of selected rules: 4
Num subgoals: 11
Num of selected subgoals: 3
Num rules: 3
Num of selected rules: 3
Num subgoals: 9
Num of selected subgoals: 4
Num rules: 4
Num of selected rules: 4
Num subgoals: 9
Num of selected subgoals: 4
Num rules: 4
Num of selected rules: 4
Num subgoals: 9
Num of selected subgoals: 4
Num rules: 4
Num of selected rules: 4
Num subgoals: 9
Num of selected subgoals: 4
Num rules: 4
Num of selected rules: 4
Num subgoals: 11
Num of selected subgoals: 3
Num rules: 3
Num of selected rules: 3
Num subgoals: 9
Num of selected subgoals: 4
Num rules: 4
Num of selected rules: 4
Num subgoals: 9
Num of selected subgoals: 4
Num rules: 4
Num of selected rules: 4
Num subgoals: 9
Num of selected subgoals: 4
Num rules: 4
Num of selected rules: 4
Num subgoals: 9
Num of selected subgoals: 4
Num rules: 4
Num of selected rules: 4
Num subgoals: 9
Num of selected subgoals: 4
Num rules: 4
Num of selected rules: 4
Num subgoals: 9
Num of selected subgoals: 4
Num rules: 4
Num of selected rules: 4
Num subgoals: 9
Num of selected subgoals: 4
Num rules: 4
Num of selected rules: 4
Num subgoals: 9
Num of selected subgoals: 4
Num rules: 4
Num of selected rules: 4
Num subgoals: 11
Num of selected subgoals: 3
Num rules: 3
Num of selected rules: 3
Num subgoals: 9
Num of selected subgoals: 4
Num rules: 4
Num of selected rules: 4
Num subgoals: 11
Num of selected subgoals: 3
Num rules: 3
Num of selected rules: 3
Num subgoals: 9
Num of selected subgoals: 4
Num rules: 4
Num of selected rules: 4
Num subgoals: 9
Num of selected subgoals: 4
Num rules: 4
Num of selected rules: 4
Num subgoals: 9
Num of selected subgoals: 4
Num rules: 4
Num of selected rules: 4
Num subgoals: 9
Num of selected subgoals: 4
Num rules: 4
Num of selected rules: 4
Num subgoals: 11
Num of selected subgoals: 3
Num rules: 3
Num of selected rules: 3
Num subgoals: 9
Num of selected subgoals: 4
Num rules: 4
Num of selected rules: 4
Num subgoals: 9
Num of selected subgoals: 4
Num rules: 4
Num of selected rules: 4
Num subgoals: 9
Num of selected subgoals: 4
Num rules: 4
Num of selected rules: 4
Num subgoals: 9
Num of selected subgoals: 3
Num rules: 3
Num of selected rules: 3
Num subgoals: 9
Num of selected subgoals: 3
Num rules: 3
Num of selected rules: 3
Num subgoals: 9
Num of selected subgoals: 3
Num rules: 3
Num of selected rules: 3
Num subgoals: 9
Num of selected subgoals: 3
Num rules: 3
Num of selected rules: 3
Num subgoals: 9
Num of selected subgoals: 3
Num rules: 3
Num of selected rules: 3
Num subgoals: 9
Num of selected subgoals: 3
Num rules: 3
Num of selected rules: 3
Num subgoals: 9
Num of selected subgoals: 3
Num rules: 3
Num of selected rules: 3
Num subgoals: 9
Num of selected subgoals: 3
Num rules: 3
Num of selected rules: 3
Num subgoals: 9
Num of selected subgoals: 3
Num rules: 3
Num of selected rules: 3
Num subgoals: 9
Num of selected subgoals: 3
Num rules: 3
Num of selected rules: 3
Num subgoals: 9
Num of selected subgoals: 3
Num rules: 3
Num of selected rules: 3
Num subgoals: 8
Num of selected subgoals: 3
Num rules: 3
Num of selected rules: 3
Num subgoals: 8
Num of selected subgoals: 3
Num rules: 3
Num of selected rules: 3
Num subgoals: 9
Num of selected subgoals: 3
Num rules: 3
Num of selected rules: 3
Num subgoals: 8
Num of selected subgoals: 3
Num rules: 3
Num of selected rules: 3
Num subgoals: 8
Num of selected subgoals: 3
Num rules: 3
Num of selected rules: 3
Num subgoals: 9
Num of selected subgoals: 3
Num rules: 3
Num of selected rules: 3
Num subgoals: 9
Num of selected subgoals: 3
Num rules: 3
Num of selected rules: 3
Num subgoals: 8
Num of selected subgoals: 3
Num rules: 3
Num of selected rules: 3
Num subgoals: 8
Num of selected subgoals: 3
Num rules: 3
Num of selected rules: 3
Num subgoals: 9
Num of selected subgoals: 3
Num rules: 3
Num of selected rules: 3
Num subgoals: 10
Num of selected subgoals: 4
Num rules: 4
Num of selected rules: 4
Num subgoals: 10
Num of selected subgoals: 4
Num rules: 4
Num of selected rules: 4
Num subgoals: 10
Num of selected subgoals: 4
Num rules: 4
Num of selected rules: 4
Num subgoals: 10
Num of selected subgoals: 4
Num rules: 4
Num of selected rules: 4
Num subgoals: 10
Num of selected subgoals: 4
Num rules: 4
Num of selected rules: 4
Num subgoals: 10
Num of selected subgoals: 4
Num rules: 4
Num of selected rules: 4
2022-11-26 23:02:05 INFO     [40m[34m..done[0m
Number of initial D2 facts: 58
Number of D2 facts: 58 of 2401
2022-11-26 23:02:05 INFO     [40m[34mGrounding Logic Program...[0m
2022-11-26 23:02:06 INFO     [40m[34m..done[0m
2022-11-26 23:02:06 INFO     [40m[34mSolving Logic Program...[0m
2022-11-26 23:02:06 INFO     [40m[34m..done[0m
Clingo statistics:
Total time:  1.2400951385498047
CPU time:  1.4517100000000003
Solve time:  0.02106499671936035
2022-11-26 23:02:06 INFO     Learned the following sketch:
(:policy
(:boolean_features )
(:numerical_features "n_count(c_some(r_primitive(at,0,1),c_one_of(rooma)))" "n_count(r_primitive(carry,0,1))")
(:rule (:conditions (:c_n_eq 1) (:c_n_gt 0)) (:effects (:e_n_bot 1) (:e_n_bot 0)))
(:rule (:conditions (:c_n_eq 1) (:c_n_gt 0)) (:effects (:e_n_inc 1) (:e_n_bot 0)))
(:rule (:conditions (:c_n_eq 1) (:c_n_gt 0)) (:effects (:e_n_inc 1) (:e_n_dec 0)))
(:rule (:conditions (:c_n_gt 1) (:c_n_eq 0)) (:effects (:e_n_bot 1) (:e_n_bot 0)))
(:rule (:conditions (:c_n_gt 1) (:c_n_eq 0)) (:effects (:e_n_dec 1) (:e_n_bot 0)))
(:rule (:conditions (:c_n_gt 1) (:c_n_gt 0)) (:effects (:e_n_bot 1) (:e_n_bot 0)))
(:rule (:conditions (:c_n_gt 1) (:c_n_gt 0)) (:effects (:e_n_dec 1) (:e_n_bot 0)))
(:rule (:conditions (:c_n_gt 1) (:c_n_gt 0)) (:effects (:e_n_inc 1) (:e_n_dec 0)))
)
Numer of sketch rules: 8
Number of selected features: 2
Maximum complexity of selected feature: 4
[40m[31mSketch cycles[0m
Instance: 2 p-3-0
85 (instance index=2, state index=85, atoms={at-robby(roomb), free(left), carry(ball1,right), at(ball2,roomb), at(ball3,roomb)})
85 (instance index=2, state index=85, atoms={at-robby(roomb), free(left), carry(ball1,right), at(ball2,roomb), at(ball3,roomb)})
Number of unsatisfied D2 facts: 59
Number of D2 facts: 117 of 2401
2022-11-26 23:02:07 INFO     [40m[34mGrounding Logic Program...[0m
2022-11-26 23:02:08 INFO     [40m[34m..done[0m
2022-11-26 23:02:08 INFO     [40m[34mSolving Logic Program...[0m
2022-11-26 23:02:08 INFO     [40m[34m..done[0m
Clingo statistics:
Total time:  1.962752103805542
CPU time:  2.701538000000001
Solve time:  0.08217692375183105
2022-11-26 23:02:08 INFO     Learned the following sketch:
(:policy
(:boolean_features "b_empty(c_not(c_equal(r_primitive(at,0,1),r_primitive(at_g,0,1))))")
(:numerical_features "n_concept_distance(c_one_of(roomb),r_primitive(at,0,1),c_primitive(at-robby,0))")
(:rule (:conditions (:c_n_eq 0) (:c_b_neg 0)) (:effects (:e_n_bot 0) (:e_b_bot 0)))
(:rule (:conditions (:c_n_eq 0) (:c_b_neg 0)) (:effects (:e_n_bot 0) (:e_b_pos 0)))
(:rule (:conditions (:c_n_eq 0) (:c_b_neg 0)) (:effects (:e_n_inc 0) (:e_b_bot 0)))
(:rule (:conditions (:c_n_gt 0) (:c_b_neg 0)) (:effects (:e_n_bot 0) (:e_b_bot 0)))
(:rule (:conditions (:c_n_gt 0) (:c_b_neg 0)) (:effects (:e_n_dec 0) (:e_b_bot 0)))
)
Numer of sketch rules: 5
Number of selected features: 2
Maximum complexity of selected feature: 5
[40m[31mSketch cycles[0m
Instance: 2 p-3-0
85 (instance index=2, state index=85, atoms={at-robby(roomb), free(left), carry(ball1,right), at(ball2,roomb), at(ball3,roomb)})
85 (instance index=2, state index=85, atoms={at-robby(roomb), free(left), carry(ball1,right), at(ball2,roomb), at(ball3,roomb)})
Number of unsatisfied D2 facts: 116
Number of D2 facts: 233 of 2401
2022-11-26 23:02:10 INFO     [40m[34mGrounding Logic Program...[0m
2022-11-26 23:02:10 INFO     [40m[34m..done[0m
2022-11-26 23:02:10 INFO     [40m[34mSolving Logic Program...[0m
2022-11-26 23:02:10 INFO     [40m[34m..done[0m
Clingo statistics:
Total time:  2.0700011253356934
CPU time:  3.2539870000000004
Solve time:  0.051215171813964844
2022-11-26 23:02:11 INFO     Learned the following sketch:
(:policy
(:boolean_features )
(:numerical_features "n_count(c_and(c_one_of(rooma),c_primitive(at-robby,0)))" "n_count(c_some(r_primitive(at,0,1),c_one_of(rooma)))" "n_count(r_primitive(carry,0,1))")
(:rule (:conditions (:c_n_eq 2) (:c_n_eq 0) (:c_n_gt 1)) (:effects (:e_n_bot 2) (:e_n_bot 1) (:e_n_inc 0)))
(:rule (:conditions (:c_n_eq 2) (:c_n_gt 0) (:c_n_gt 1)) (:effects (:e_n_inc 2) (:e_n_bot 0) (:e_n_dec 1)))
(:rule (:conditions (:c_n_gt 2) (:c_n_eq 0) (:c_n_eq 1)) (:effects (:e_n_dec 2) (:e_n_bot 0) (:e_n_bot 1)))
(:rule (:conditions (:c_n_gt 2) (:c_n_eq 0) (:c_n_gt 1)) (:effects (:e_n_dec 2) (:e_n_bot 0) (:e_n_bot 1)))
(:rule (:conditions (:c_n_gt 2) (:c_n_eq 1) (:c_n_gt 0)) (:effects (:e_n_bot 2) (:e_n_bot 1) (:e_n_dec 0)))
(:rule (:conditions (:c_n_gt 2) (:c_n_gt 0) (:c_n_gt 1)) (:effects (:e_n_bot 2) (:e_n_bot 1) (:e_n_dec 0)))
)
Numer of sketch rules: 6
Number of selected features: 3
Maximum complexity of selected feature: 4
2022-11-26 23:02:11 INFO     [40m[34mVerifying learned sketch...[0m
2022-11-26 23:02:11 INFO     [40m[34m..done[0m
2022-11-26 23:02:11 INFO     [40m[33mIteration summary:[0m
DomainFeatureDataStatistics:
    num_dlplan_states: 88
    num_boolean_features: 69
    num_numerical_features: 381
StatePairEquivalenceStatistics:
    num_state_pairs: 358
    num_equivalences: 49
TupleGraphEquivalenceMinimizerStatistics:
    Number of input tuples: 788
    Number of output tuples: 293
[40m[31mSketch solves all instances![0m
2022-11-26 23:02:11 INFO     [40m[32mSummary:[0m
Boolean features:
b_empty(c_one_of(rooma))
b_empty(c_bot)
b_empty(c_primitive(free,0))
b_empty(r_primitive(carry,0,1))
b_empty(c_and(c_one_of(rooma),c_primitive(at-robby,0)))
b_empty(c_and(c_one_of(roomb),c_primitive(at-robby,0)))
b_empty(c_some(r_primitive(at,0,1),c_one_of(rooma)))
b_empty(c_some(r_primitive(at,0,1),c_one_of(roomb)))
b_empty(c_some(r_primitive(at,0,1),c_primitive(at-robby,0)))
b_empty(c_not(c_equal(r_primitive(at,0,1),r_primitive(at_g,0,1))))
b_empty(c_not(c_all(r_primitive(at,0,1),c_primitive(at-robby,0))))
b_empty(c_and(c_all(r_primitive(at,0,1),c_one_of(roomb)),c_primitive(ball,0)))
b_empty(c_and(c_all(r_primitive(at,0,1),c_primitive(at-robby,0)),c_primitive(ball,0)))
b_empty(c_some(r_primitive(at,0,1),c_and(c_one_of(rooma),c_primitive(at-robby,0))))
b_empty(c_some(r_primitive(at,0,1),c_and(c_one_of(roomb),c_primitive(at-robby,0))))
b_empty(c_and(c_all(r_inverse(r_primitive(at,0,1)),c_one_of(rooma)),c_one_of(rooma)))
b_empty(c_and(c_all(r_inverse(r_primitive(at,0,1)),c_one_of(rooma)),c_one_of(roomb)))
b_empty(c_and(c_all(r_inverse(r_primitive(at,0,1)),c_one_of(rooma)),c_primitive(room,0)))
b_empty(c_and(c_not(c_some(r_primitive(at,0,1),c_primitive(at-robby,0))),c_primitive(ball,0)))
b_empty(c_and(c_all(r_inverse(r_primitive(at,0,1)),c_one_of(rooma)),c_primitive(at-robby,0)))
b_empty(c_not(c_all(r_primitive(at,0,1),c_and(c_one_of(rooma),c_primitive(at-robby,0)))))
b_empty(c_not(c_all(r_primitive(at,0,1),c_and(c_one_of(roomb),c_primitive(at-robby,0)))))
b_empty(c_not(c_all(r_restrict(r_primitive(at,0,1),c_one_of(rooma)),c_primitive(at-robby,0))))
b_empty(c_not(c_all(r_restrict(r_primitive(at,0,1),c_one_of(roomb)),c_primitive(at-robby,0))))
b_empty(c_some(r_inverse(r_primitive(carry,0,1)),c_some(r_primitive(at_g,0,1),c_primitive(at-robby,0))))
b_empty(c_and(c_all(r_primitive(at,0,1),c_and(c_one_of(rooma),c_primitive(at-robby,0))),c_primitive(ball,0)))
b_empty(c_and(c_all(r_primitive(at,0,1),c_and(c_one_of(roomb),c_primitive(at-robby,0))),c_primitive(ball,0)))
b_empty(c_and(c_all(r_restrict(r_primitive(at,0,1),c_one_of(rooma)),c_primitive(at-robby,0)),c_primitive(ball,0)))
b_empty(c_and(c_all(r_restrict(r_primitive(at,0,1),c_one_of(roomb)),c_primitive(at-robby,0)),c_primitive(ball,0)))
b_empty(c_and(c_all(r_restrict(r_primitive(at,0,1),c_primitive(at-robby,0)),c_one_of(rooma)),c_primitive(ball,0)))
b_empty(c_and(c_all(r_restrict(r_primitive(at,0,1),c_primitive(at-robby,0)),c_one_of(roomb)),c_primitive(ball,0)))
b_empty(c_and(c_all(r_primitive(at,0,1),c_one_of(rooma)),c_some(r_primitive(at_g,0,1),c_primitive(at-robby,0))))
b_empty(c_and(c_all(r_primitive(at,0,1),c_one_of(roomb)),c_some(r_primitive(at_g,0,1),c_primitive(at-robby,0))))
b_empty(c_not(c_and(c_all(r_primitive(at,0,1),c_one_of(rooma)),c_not(c_primitive(free,0)))))
b_empty(c_not(c_and(c_all(r_primitive(at,0,1),c_one_of(roomb)),c_not(c_primitive(free,0)))))
b_empty(c_not(c_and(c_all(r_primitive(at,0,1),c_primitive(at-robby,0)),c_not(c_primitive(free,0)))))
b_empty(c_not(c_and(c_all(r_primitive(at_g,0,1),c_primitive(at-robby,0)),c_not(c_primitive(free,0)))))
b_empty(c_not(c_all(r_primitive(at,0,1),c_and(c_not(c_primitive(at-robby,0)),c_one_of(rooma)))))
b_empty(c_not(c_all(r_primitive(at,0,1),c_and(c_not(c_primitive(at-robby,0)),c_one_of(roomb)))))
b_empty(c_not(c_all(r_inverse(r_primitive(carry,0,1)),c_some(r_primitive(at_g,0,1),c_primitive(at-robby,0)))))
b_empty(c_and(c_and(c_all(r_inverse(r_primitive(at,0,1)),c_one_of(rooma)),c_primitive(at-robby,0)),c_one_of(rooma)))
b_empty(c_and(c_all(r_inverse(r_primitive(at,0,1)),c_some(r_primitive(at,0,1),c_primitive(at-robby,0))),c_one_of(rooma)))
b_empty(c_and(c_all(r_inverse(r_primitive(at,0,1)),c_some(r_primitive(at_g,0,1),c_primitive(at-robby,0))),c_one_of(rooma)))
b_empty(c_and(c_and(c_all(r_inverse(r_primitive(at,0,1)),c_one_of(rooma)),c_primitive(at-robby,0)),c_one_of(roomb)))
b_empty(c_and(c_all(r_inverse(r_primitive(at,0,1)),c_some(r_primitive(at,0,1),c_primitive(at-robby,0))),c_one_of(roomb)))
b_empty(c_and(c_all(r_inverse(r_primitive(at_g,0,1)),c_equal(r_primitive(at,0,1),r_primitive(at_g,0,1))),c_one_of(roomb)))
b_empty(c_and(c_all(r_inverse(r_primitive(at_g,0,1)),c_equal(r_primitive(carry,0,1),r_primitive(carry_g,0,1))),c_one_of(roomb)))
b_empty(c_and(c_all(r_inverse(r_primitive(at_g,0,1)),c_some(r_primitive(at,0,1),c_one_of(rooma))),c_one_of(roomb)))
b_empty(c_and(c_all(r_inverse(r_primitive(at_g,0,1)),c_some(r_primitive(at,0,1),c_primitive(at-robby,0))),c_one_of(roomb)))
b_empty(c_and(c_all(r_inverse(r_primitive(at_g,0,1)),c_all(r_primitive(at,0,1),c_primitive(at-robby,0))),c_one_of(roomb)))
b_empty(c_and(c_all(r_inverse(r_restrict(r_primitive(at,0,1),c_primitive(at-robby,0))),c_one_of(rooma)),c_one_of(roomb)))
b_empty(c_and(c_all(r_inverse(r_primitive(at,0,1)),c_some(r_primitive(at_g,0,1),c_primitive(at-robby,0))),c_primitive(room,0)))
b_empty(c_and(c_all(r_primitive(at,0,1),c_and(c_not(c_primitive(at-robby,0)),c_one_of(rooma))),c_primitive(ball,0)))
b_empty(c_and(c_all(r_primitive(at,0,1),c_and(c_not(c_primitive(at-robby,0)),c_one_of(roomb))),c_primitive(ball,0)))
b_empty(c_and(c_all(r_inverse(r_primitive(carry,0,1)),c_some(r_primitive(at_g,0,1),c_primitive(at-robby,0))),c_primitive(gripper,0)))
b_empty(c_and(c_all(r_inverse(r_primitive(at_g,0,1)),c_equal(r_primitive(at,0,1),r_primitive(at_g,0,1))),c_primitive(at-robby,0)))
b_empty(c_and(c_all(r_inverse(r_primitive(at_g,0,1)),c_equal(r_primitive(carry,0,1),r_primitive(carry_g,0,1))),c_primitive(at-robby,0)))
b_empty(c_and(c_all(r_inverse(r_primitive(at_g,0,1)),c_some(r_primitive(at,0,1),c_one_of(rooma))),c_primitive(at-robby,0)))
b_empty(c_and(c_all(r_primitive(at,0,1),c_one_of(rooma)),c_not(c_all(r_primitive(at_g,0,1),c_primitive(at-robby,0)))))
b_empty(c_and(c_all(r_primitive(at,0,1),c_one_of(roomb)),c_not(c_all(r_primitive(at_g,0,1),c_primitive(at-robby,0)))))
b_empty(c_not(c_and(c_not(c_primitive(free,0)),c_not(c_some(r_primitive(at,0,1),c_primitive(at-robby,0))))))
b_empty(c_not(c_and(c_all(r_primitive(at_g,0,1),c_primitive(at-robby,0)),c_equal(r_primitive(carry,0,1),r_primitive(carry_g,0,1)))))
b_empty(c_some(r_primitive(at,0,1),c_some(r_inverse(r_primitive(at_g,0,1)),c_some(r_primitive(at,0,1),c_one_of(rooma)))))
b_empty(c_some(r_primitive(at,0,1),c_some(r_inverse(r_primitive(at_g,0,1)),c_some(r_primitive(at,0,1),c_primitive(at-robby,0)))))
b_empty(c_some(r_primitive(at,0,1),c_some(r_inverse(r_primitive(at_g,0,1)),c_some(r_primitive(carry,0,1),c_top))))
b_empty(c_some(r_primitive(at,0,1),c_some(r_inverse(r_primitive(at_g,0,1)),c_all(r_primitive(at,0,1),c_one_of(rooma)))))
b_empty(c_some(r_primitive(at,0,1),c_some(r_inverse(r_primitive(at_g,0,1)),c_all(r_primitive(at,0,1),c_primitive(at-robby,0)))))
b_empty(c_some(r_primitive(at,0,1),c_all(r_inverse(r_primitive(at_g,0,1)),c_equal(r_primitive(at,0,1),r_primitive(at_g,0,1)))))
b_empty(c_some(r_primitive(at,0,1),c_all(r_inverse(r_primitive(at_g,0,1)),c_some(r_primitive(at,0,1),c_primitive(at-robby,0)))))
Numerical features:
n_count(c_one_of(rooma))
n_count(c_top)
n_count(c_bot)
n_count(c_primitive(room,0))
n_count(c_primitive(ball,0))
n_count(c_primitive(free,0))
n_count(r_primitive(at,0,1))
n_count(r_primitive(carry,0,1))
n_count(c_not(c_one_of(rooma)))
n_count(c_not(c_primitive(room,0)))
n_count(c_not(c_primitive(ball,0)))
n_count(c_not(c_primitive(free,0)))
n_count(c_and(c_one_of(rooma),c_primitive(at-robby,0)))
n_count(c_and(c_one_of(roomb),c_primitive(at-robby,0)))
n_count(c_equal(r_primitive(at,0,1),r_primitive(at_g,0,1)))
n_count(c_equal(r_primitive(carry,0,1),r_primitive(carry_g,0,1)))
n_count(c_some(r_primitive(at,0,1),c_one_of(rooma)))
n_count(c_some(r_primitive(at,0,1),c_one_of(roomb)))
n_count(c_some(r_primitive(at,0,1),c_primitive(at-robby,0)))
n_count(c_some(r_primitive(at_g,0,1),c_primitive(at-robby,0)))
n_count(c_all(r_primitive(at,0,1),c_one_of(rooma)))
n_count(c_all(r_primitive(at,0,1),c_one_of(roomb)))
n_count(c_all(r_primitive(at,0,1),c_bot))
n_count(c_all(r_primitive(at,0,1),c_primitive(at-robby,0)))
n_count(c_all(r_primitive(at_g,0,1),c_primitive(at-robby,0)))
n_concept_distance(c_one_of(rooma),r_primitive(at,0,1),c_one_of(roomb))
n_concept_distance(c_one_of(rooma),r_primitive(at,0,1),c_primitive(at-robby,0))
n_concept_distance(c_one_of(roomb),r_primitive(at,0,1),c_primitive(at-robby,0))
n_count(c_not(c_and(c_one_of(rooma),c_primitive(at-robby,0))))
n_count(c_not(c_and(c_one_of(roomb),c_primitive(at-robby,0))))
n_count(c_not(c_equal(r_primitive(at,0,1),r_primitive(at_g,0,1))))
n_count(c_not(c_some(r_primitive(at,0,1),c_primitive(at-robby,0))))
n_count(c_not(c_some(r_primitive(at_g,0,1),c_primitive(at-robby,0))))
n_count(c_not(c_all(r_primitive(at,0,1),c_primitive(at-robby,0))))
n_count(c_not(c_all(r_primitive(at_g,0,1),c_primitive(at-robby,0))))
n_count(c_some(r_inverse(r_primitive(at,0,1)),c_top))
n_count(c_all(r_inverse(r_primitive(at,0,1)),c_one_of(rooma)))
n_count(c_and(c_all(r_primitive(at,0,1),c_one_of(roomb)),c_primitive(ball,0)))
n_count(c_and(c_all(r_primitive(at,0,1),c_primitive(at-robby,0)),c_primitive(ball,0)))
n_count(c_and(c_not(c_one_of(rooma)),c_not(c_primitive(at-robby,0))))
n_count(c_and(c_not(c_one_of(roomb)),c_not(c_primitive(at-robby,0))))
n_count(c_and(c_not(c_primitive(free,0)),c_not(c_primitive(room,0))))
n_count(c_and(c_not(c_primitive(ball,0)),c_not(c_primitive(free,0))))
n_count(c_some(r_primitive(at,0,1),c_and(c_one_of(rooma),c_primitive(at-robby,0))))
n_count(c_some(r_primitive(at,0,1),c_and(c_one_of(roomb),c_primitive(at-robby,0))))
n_count(c_all(r_primitive(at,0,1),c_and(c_one_of(rooma),c_primitive(at-robby,0))))
n_count(c_all(r_primitive(at,0,1),c_and(c_one_of(roomb),c_primitive(at-robby,0))))
n_count(c_all(r_restrict(r_primitive(at,0,1),c_one_of(rooma)),c_primitive(at-robby,0)))
n_count(c_all(r_restrict(r_primitive(at,0,1),c_one_of(roomb)),c_primitive(at-robby,0)))
n_count(c_all(r_restrict(r_primitive(at,0,1),c_primitive(at-robby,0)),c_one_of(rooma)))
n_count(c_all(r_restrict(r_primitive(at,0,1),c_primitive(at-robby,0)),c_one_of(roomb)))
n_count(c_and(c_one_of(rooma),c_some(r_inverse(r_primitive(at,0,1)),c_top)))
n_count(c_and(c_all(r_inverse(r_primitive(at,0,1)),c_one_of(rooma)),c_one_of(rooma)))
n_count(c_and(c_one_of(roomb),c_some(r_inverse(r_primitive(at,0,1)),c_top)))
n_count(c_and(c_all(r_inverse(r_primitive(at,0,1)),c_one_of(rooma)),c_one_of(roomb)))
n_count(c_and(c_not(c_and(c_one_of(rooma),c_primitive(at-robby,0))),c_primitive(room,0)))
n_count(c_and(c_not(c_and(c_one_of(roomb),c_primitive(at-robby,0))),c_primitive(room,0)))
n_count(c_and(c_all(r_inverse(r_primitive(at,0,1)),c_one_of(rooma)),c_primitive(room,0)))
n_count(c_and(c_not(c_some(r_primitive(at,0,1),c_primitive(at-robby,0))),c_primitive(ball,0)))
n_count(c_and(c_primitive(at-robby,0),c_some(r_inverse(r_primitive(at,0,1)),c_top)))
n_count(c_and(c_all(r_inverse(r_primitive(at,0,1)),c_one_of(rooma)),c_primitive(at-robby,0)))
n_count(c_and(c_equal(r_primitive(at,0,1),r_primitive(at_g,0,1)),c_not(c_one_of(rooma))))
n_count(c_and(c_equal(r_primitive(carry,0,1),r_primitive(carry_g,0,1)),c_not(c_one_of(rooma))))
n_count(c_and(c_all(r_primitive(at,0,1),c_one_of(rooma)),c_not(c_one_of(rooma))))
n_count(c_and(c_all(r_primitive(at,0,1),c_one_of(roomb)),c_not(c_one_of(rooma))))
n_count(c_and(c_all(r_primitive(at,0,1),c_primitive(at-robby,0)),c_not(c_one_of(rooma))))
n_count(c_and(c_all(r_primitive(at_g,0,1),c_primitive(at-robby,0)),c_not(c_one_of(rooma))))
n_count(c_and(c_equal(r_primitive(at,0,1),r_primitive(at_g,0,1)),c_not(c_primitive(room,0))))
n_count(c_and(c_equal(r_primitive(carry,0,1),r_primitive(carry_g,0,1)),c_not(c_primitive(room,0))))
n_count(c_and(c_all(r_primitive(at,0,1),c_one_of(rooma)),c_not(c_primitive(room,0))))
n_count(c_and(c_all(r_primitive(at,0,1),c_one_of(roomb)),c_not(c_primitive(room,0))))
n_count(c_and(c_all(r_primitive(at,0,1),c_primitive(at-robby,0)),c_not(c_primitive(room,0))))
n_count(c_and(c_all(r_primitive(at_g,0,1),c_primitive(at-robby,0)),c_not(c_primitive(room,0))))
n_count(c_and(c_all(r_primitive(at,0,1),c_one_of(rooma)),c_not(c_primitive(free,0))))
n_count(c_and(c_all(r_primitive(at,0,1),c_one_of(roomb)),c_not(c_primitive(free,0))))
n_count(c_and(c_all(r_primitive(at,0,1),c_bot),c_not(c_primitive(free,0))))
n_count(c_and(c_all(r_primitive(at,0,1),c_primitive(at-robby,0)),c_not(c_primitive(free,0))))
n_count(c_and(c_all(r_primitive(at_g,0,1),c_primitive(at-robby,0)),c_not(c_primitive(free,0))))
n_count(c_not(c_and(c_all(r_primitive(at,0,1),c_one_of(roomb)),c_primitive(ball,0))))
n_count(c_not(c_and(c_all(r_primitive(at,0,1),c_primitive(at-robby,0)),c_primitive(ball,0))))
n_count(c_not(c_and(c_not(c_primitive(free,0)),c_not(c_primitive(room,0)))))
n_count(c_not(c_all(r_primitive(at,0,1),c_and(c_one_of(rooma),c_primitive(at-robby,0)))))
n_count(c_not(c_all(r_primitive(at,0,1),c_and(c_one_of(roomb),c_primitive(at-robby,0)))))
n_count(c_not(c_all(r_restrict(r_primitive(at,0,1),c_one_of(rooma)),c_primitive(at-robby,0))))
n_count(c_not(c_all(r_restrict(r_primitive(at,0,1),c_one_of(roomb)),c_primitive(at-robby,0))))
n_count(c_some(r_primitive(at_g,0,1),c_some(r_inverse(r_primitive(at,0,1)),c_top)))
n_count(c_some(r_primitive(at_g,0,1),c_all(r_inverse(r_primitive(at,0,1)),c_one_of(rooma))))
n_count(c_some(r_inverse(r_primitive(at,0,1)),c_some(r_primitive(at_g,0,1),c_primitive(at-robby,0))))
n_count(c_some(r_inverse(r_primitive(at_g,0,1)),c_some(r_primitive(carry,0,1),c_top)))
n_count(c_some(r_inverse(r_primitive(at_g,0,1)),c_all(r_primitive(at,0,1),c_one_of(rooma))))
n_count(c_some(r_inverse(r_primitive(at_g,0,1)),c_all(r_primitive(at,0,1),c_one_of(roomb))))
n_count(c_some(r_inverse(r_primitive(at_g,0,1)),c_all(r_primitive(at,0,1),c_primitive(at-robby,0))))
n_count(c_some(r_inverse(r_primitive(carry,0,1)),c_some(r_primitive(at_g,0,1),c_primitive(at-robby,0))))
n_count(c_all(r_primitive(at,0,1),c_and(c_not(c_primitive(at-robby,0)),c_one_of(rooma))))
n_count(c_all(r_primitive(at,0,1),c_and(c_not(c_primitive(at-robby,0)),c_one_of(roomb))))
n_count(c_all(r_primitive(at_g,0,1),c_some(r_inverse(r_primitive(at,0,1)),c_top)))
n_count(c_all(r_primitive(at_g,0,1),c_all(r_inverse(r_primitive(at,0,1)),c_one_of(rooma))))
n_count(c_all(r_inverse(r_primitive(at,0,1)),c_equal(r_primitive(at,0,1),r_primitive(at_g,0,1))))
n_count(c_all(r_inverse(r_primitive(at,0,1)),c_some(r_primitive(at,0,1),c_one_of(rooma))))
n_count(c_all(r_inverse(r_primitive(at,0,1)),c_some(r_primitive(at,0,1),c_primitive(at-robby,0))))
n_count(c_all(r_inverse(r_primitive(at,0,1)),c_some(r_primitive(at_g,0,1),c_primitive(at-robby,0))))
n_count(c_all(r_inverse(r_primitive(at_g,0,1)),c_equal(r_primitive(at,0,1),r_primitive(at_g,0,1))))
n_count(c_all(r_inverse(r_primitive(at_g,0,1)),c_equal(r_primitive(carry,0,1),r_primitive(carry_g,0,1))))
n_count(c_all(r_inverse(r_primitive(at_g,0,1)),c_some(r_primitive(at,0,1),c_one_of(rooma))))
n_count(c_all(r_inverse(r_primitive(at_g,0,1)),c_some(r_primitive(at,0,1),c_primitive(at-robby,0))))
n_count(c_all(r_inverse(r_primitive(carry,0,1)),c_some(r_primitive(at_g,0,1),c_primitive(at-robby,0))))
n_count(c_all(r_inverse(r_restrict(r_primitive(at,0,1),c_primitive(at-robby,0))),c_one_of(rooma)))
n_concept_distance(c_one_of(rooma),r_primitive(at,0,1),c_some(r_inverse(r_primitive(at,0,1)),c_top))
n_concept_distance(c_one_of(rooma),r_primitive(at,0,1),c_all(r_inverse(r_primitive(at,0,1)),c_one_of(rooma)))
n_concept_distance(c_one_of(roomb),r_primitive(at,0,1),c_some(r_inverse(r_primitive(at,0,1)),c_top))
n_concept_distance(c_one_of(roomb),r_primitive(at,0,1),c_all(r_inverse(r_primitive(at,0,1)),c_one_of(rooma)))
n_concept_distance(c_primitive(at-robby,0),r_primitive(at,0,1),c_some(r_inverse(r_primitive(at,0,1)),c_top))
n_concept_distance(c_primitive(at-robby,0),r_primitive(at,0,1),c_all(r_inverse(r_primitive(at,0,1)),c_one_of(rooma)))
n_count(c_and(c_all(r_primitive(at,0,1),c_and(c_one_of(rooma),c_primitive(at-robby,0))),c_primitive(ball,0)))
n_count(c_and(c_all(r_primitive(at,0,1),c_and(c_one_of(roomb),c_primitive(at-robby,0))),c_primitive(ball,0)))
n_count(c_and(c_all(r_restrict(r_primitive(at,0,1),c_one_of(rooma)),c_primitive(at-robby,0)),c_primitive(ball,0)))
n_count(c_and(c_all(r_restrict(r_primitive(at,0,1),c_one_of(roomb)),c_primitive(at-robby,0)),c_primitive(ball,0)))
n_count(c_and(c_all(r_restrict(r_primitive(at,0,1),c_primitive(at-robby,0)),c_one_of(rooma)),c_primitive(ball,0)))
n_count(c_and(c_all(r_restrict(r_primitive(at,0,1),c_primitive(at-robby,0)),c_one_of(roomb)),c_primitive(ball,0)))
n_count(c_and(c_not(c_one_of(rooma)),c_not(c_some(r_primitive(at,0,1),c_primitive(at-robby,0)))))
n_count(c_and(c_not(c_one_of(rooma)),c_not(c_some(r_primitive(at_g,0,1),c_primitive(at-robby,0)))))
n_count(c_and(c_all(r_inverse(r_primitive(at,0,1)),c_one_of(rooma)),c_not(c_one_of(rooma))))
n_count(c_and(c_all(r_inverse(r_primitive(at,0,1)),c_one_of(rooma)),c_not(c_one_of(roomb))))
n_count(c_and(c_not(c_primitive(room,0)),c_not(c_some(r_primitive(at,0,1),c_primitive(at-robby,0)))))
n_count(c_and(c_not(c_primitive(room,0)),c_not(c_some(r_primitive(at_g,0,1),c_primitive(at-robby,0)))))
n_count(c_and(c_not(c_and(c_one_of(rooma),c_primitive(at-robby,0))),c_not(c_primitive(ball,0))))
n_count(c_and(c_not(c_and(c_one_of(roomb),c_primitive(at-robby,0))),c_not(c_primitive(ball,0))))
n_count(c_and(c_all(r_inverse(r_primitive(at,0,1)),c_one_of(rooma)),c_not(c_primitive(ball,0))))
n_count(c_and(c_not(c_and(c_one_of(rooma),c_primitive(at-robby,0))),c_not(c_primitive(gripper,0))))
n_count(c_and(c_not(c_and(c_one_of(roomb),c_primitive(at-robby,0))),c_not(c_primitive(gripper,0))))
n_count(c_and(c_all(r_inverse(r_primitive(at,0,1)),c_one_of(rooma)),c_not(c_primitive(gripper,0))))
n_count(c_and(c_not(c_primitive(at-robby,0)),c_some(r_inverse(r_primitive(at,0,1)),c_top)))
n_count(c_and(c_all(r_inverse(r_primitive(at,0,1)),c_one_of(rooma)),c_not(c_primitive(at-robby,0))))
n_count(c_and(c_not(c_and(c_one_of(rooma),c_primitive(at-robby,0))),c_not(c_primitive(free,0))))
n_count(c_and(c_not(c_and(c_one_of(roomb),c_primitive(at-robby,0))),c_not(c_primitive(free,0))))
n_count(c_and(c_not(c_primitive(free,0)),c_not(c_some(r_primitive(at,0,1),c_primitive(at-robby,0)))))
n_count(c_and(c_not(c_primitive(free,0)),c_not(c_some(r_primitive(at_g,0,1),c_primitive(at-robby,0)))))
n_count(c_and(c_all(r_inverse(r_primitive(at,0,1)),c_one_of(rooma)),c_not(c_primitive(free,0))))
n_count(c_and(c_all(r_primitive(at,0,1),c_primitive(at-robby,0)),c_equal(r_primitive(at,0,1),r_primitive(at_g,0,1))))
n_count(c_and(c_equal(r_primitive(carry,0,1),r_primitive(carry_g,0,1)),c_some(r_primitive(at_g,0,1),c_primitive(at-robby,0))))
n_count(c_and(c_all(r_primitive(at,0,1),c_primitive(at-robby,0)),c_equal(r_primitive(carry,0,1),r_primitive(carry_g,0,1))))
n_count(c_and(c_all(r_primitive(at_g,0,1),c_primitive(at-robby,0)),c_equal(r_primitive(carry,0,1),r_primitive(carry_g,0,1))))
n_count(c_and(c_all(r_primitive(at,0,1),c_one_of(rooma)),c_some(r_primitive(at_g,0,1),c_primitive(at-robby,0))))
n_count(c_and(c_all(r_primitive(at,0,1),c_one_of(roomb)),c_some(r_primitive(at_g,0,1),c_primitive(at-robby,0))))
n_count(c_and(c_all(r_primitive(at,0,1),c_one_of(rooma)),c_all(r_primitive(at_g,0,1),c_primitive(at-robby,0))))
n_count(c_and(c_all(r_primitive(at,0,1),c_one_of(roomb)),c_all(r_primitive(at_g,0,1),c_primitive(at-robby,0))))
n_count(c_and(c_all(r_primitive(at,0,1),c_bot),c_all(r_primitive(at_g,0,1),c_primitive(at-robby,0))))
n_count(c_not(c_and(c_all(r_inverse(r_primitive(at,0,1)),c_one_of(rooma)),c_one_of(rooma))))
n_count(c_not(c_and(c_all(r_inverse(r_primitive(at,0,1)),c_one_of(rooma)),c_one_of(roomb))))
n_count(c_not(c_and(c_all(r_inverse(r_primitive(at,0,1)),c_one_of(rooma)),c_primitive(room,0))))
n_count(c_not(c_and(c_all(r_inverse(r_primitive(at,0,1)),c_one_of(rooma)),c_primitive(at-robby,0))))
n_count(c_not(c_and(c_equal(r_primitive(at,0,1),r_primitive(at_g,0,1)),c_not(c_one_of(rooma)))))
n_count(c_not(c_and(c_equal(r_primitive(carry,0,1),r_primitive(carry_g,0,1)),c_not(c_one_of(rooma)))))
n_count(c_not(c_and(c_all(r_primitive(at,0,1),c_one_of(rooma)),c_not(c_one_of(rooma)))))
n_count(c_not(c_and(c_all(r_primitive(at,0,1),c_one_of(roomb)),c_not(c_one_of(rooma)))))
n_count(c_not(c_and(c_all(r_primitive(at,0,1),c_primitive(at-robby,0)),c_not(c_one_of(rooma)))))
n_count(c_not(c_and(c_all(r_primitive(at_g,0,1),c_primitive(at-robby,0)),c_not(c_one_of(rooma)))))
n_count(c_not(c_and(c_all(r_primitive(at,0,1),c_one_of(roomb)),c_not(c_primitive(room,0)))))
n_count(c_not(c_and(c_all(r_primitive(at,0,1),c_primitive(at-robby,0)),c_not(c_primitive(room,0)))))
n_count(c_not(c_and(c_all(r_primitive(at,0,1),c_one_of(rooma)),c_not(c_primitive(free,0)))))
n_count(c_not(c_and(c_all(r_primitive(at,0,1),c_one_of(roomb)),c_not(c_primitive(free,0)))))
n_count(c_not(c_and(c_all(r_primitive(at,0,1),c_bot),c_not(c_primitive(free,0)))))
n_count(c_not(c_and(c_all(r_primitive(at,0,1),c_primitive(at-robby,0)),c_not(c_primitive(free,0)))))
n_count(c_not(c_and(c_all(r_primitive(at_g,0,1),c_primitive(at-robby,0)),c_not(c_primitive(free,0)))))
n_count(c_not(c_some(r_inverse(r_primitive(at,0,1)),c_some(r_primitive(at_g,0,1),c_primitive(at-robby,0)))))
n_count(c_not(c_some(r_inverse(r_primitive(at_g,0,1)),c_all(r_primitive(at,0,1),c_primitive(at-robby,0)))))
n_count(c_not(c_some(r_inverse(r_primitive(carry,0,1)),c_some(r_primitive(at_g,0,1),c_primitive(at-robby,0)))))
n_count(c_not(c_all(r_primitive(at,0,1),c_and(c_not(c_primitive(at-robby,0)),c_one_of(rooma)))))
n_count(c_not(c_all(r_primitive(at,0,1),c_and(c_not(c_primitive(at-robby,0)),c_one_of(roomb)))))
n_count(c_not(c_all(r_inverse(r_primitive(at,0,1)),c_some(r_primitive(at_g,0,1),c_primitive(at-robby,0)))))
n_count(c_not(c_all(r_inverse(r_primitive(at_g,0,1)),c_some(r_primitive(at,0,1),c_primitive(at-robby,0)))))
n_count(c_not(c_all(r_inverse(r_primitive(carry,0,1)),c_some(r_primitive(at_g,0,1),c_primitive(at-robby,0)))))
n_count(c_and(c_and(c_primitive(at-robby,0),c_some(r_inverse(r_primitive(at,0,1)),c_top)),c_one_of(rooma)))
n_count(c_and(c_and(c_all(r_inverse(r_primitive(at,0,1)),c_one_of(rooma)),c_primitive(at-robby,0)),c_one_of(rooma)))
n_count(c_and(c_one_of(rooma),c_some(r_inverse(r_primitive(at,0,1)),c_some(r_primitive(at_g,0,1),c_primitive(at-robby,0)))))
n_count(c_and(c_all(r_inverse(r_primitive(at,0,1)),c_some(r_primitive(at,0,1),c_primitive(at-robby,0))),c_one_of(rooma)))
n_count(c_and(c_all(r_inverse(r_primitive(at,0,1)),c_some(r_primitive(at_g,0,1),c_primitive(at-robby,0))),c_one_of(rooma)))
n_count(c_and(c_and(c_primitive(at-robby,0),c_some(r_inverse(r_primitive(at,0,1)),c_top)),c_one_of(roomb)))
n_count(c_and(c_and(c_all(r_inverse(r_primitive(at,0,1)),c_one_of(rooma)),c_primitive(at-robby,0)),c_one_of(roomb)))
n_count(c_and(c_all(r_inverse(r_primitive(at,0,1)),c_some(r_primitive(at,0,1),c_primitive(at-robby,0))),c_one_of(roomb)))
n_count(c_and(c_all(r_inverse(r_primitive(at_g,0,1)),c_equal(r_primitive(at,0,1),r_primitive(at_g,0,1))),c_one_of(roomb)))
n_count(c_and(c_all(r_inverse(r_primitive(at_g,0,1)),c_equal(r_primitive(carry,0,1),r_primitive(carry_g,0,1))),c_one_of(roomb)))
n_count(c_and(c_all(r_inverse(r_primitive(at_g,0,1)),c_some(r_primitive(at,0,1),c_one_of(rooma))),c_one_of(roomb)))
n_count(c_and(c_all(r_inverse(r_primitive(at_g,0,1)),c_some(r_primitive(at,0,1),c_primitive(at-robby,0))),c_one_of(roomb)))
n_count(c_and(c_all(r_inverse(r_primitive(at_g,0,1)),c_all(r_primitive(at,0,1),c_primitive(at-robby,0))),c_one_of(roomb)))
n_count(c_and(c_all(r_inverse(r_restrict(r_primitive(at,0,1),c_primitive(at-robby,0))),c_one_of(rooma)),c_one_of(roomb)))
n_count(c_and(c_all(r_inverse(r_primitive(at,0,1)),c_equal(r_primitive(at,0,1),r_primitive(at_g,0,1))),c_primitive(room,0)))
n_count(c_and(c_all(r_inverse(r_primitive(at,0,1)),c_some(r_primitive(at,0,1),c_one_of(rooma))),c_primitive(room,0)))
n_count(c_and(c_all(r_inverse(r_primitive(at,0,1)),c_some(r_primitive(at,0,1),c_primitive(at-robby,0))),c_primitive(room,0)))
n_count(c_and(c_all(r_inverse(r_primitive(at,0,1)),c_some(r_primitive(at_g,0,1),c_primitive(at-robby,0))),c_primitive(room,0)))
n_count(c_and(c_all(r_inverse(r_primitive(at_g,0,1)),c_equal(r_primitive(at,0,1),r_primitive(at_g,0,1))),c_primitive(room,0)))
n_count(c_and(c_all(r_inverse(r_primitive(at_g,0,1)),c_equal(r_primitive(carry,0,1),r_primitive(carry_g,0,1))),c_primitive(room,0)))
n_count(c_and(c_all(r_inverse(r_primitive(at_g,0,1)),c_some(r_primitive(at,0,1),c_one_of(rooma))),c_primitive(room,0)))
n_count(c_and(c_all(r_inverse(r_primitive(at_g,0,1)),c_some(r_primitive(at,0,1),c_primitive(at-robby,0))),c_primitive(room,0)))
n_count(c_and(c_all(r_inverse(r_restrict(r_primitive(at,0,1),c_primitive(at-robby,0))),c_one_of(rooma)),c_primitive(room,0)))
n_count(c_and(c_all(r_primitive(at,0,1),c_and(c_not(c_primitive(at-robby,0)),c_one_of(rooma))),c_primitive(ball,0)))
n_count(c_and(c_all(r_primitive(at,0,1),c_and(c_not(c_primitive(at-robby,0)),c_one_of(roomb))),c_primitive(ball,0)))
n_count(c_and(c_all(r_inverse(r_primitive(carry,0,1)),c_some(r_primitive(at_g,0,1),c_primitive(at-robby,0))),c_primitive(gripper,0)))
n_count(c_and(c_primitive(at-robby,0),c_some(r_inverse(r_primitive(at_g,0,1)),c_some(r_primitive(carry,0,1),c_top))))
n_count(c_and(c_primitive(at-robby,0),c_some(r_inverse(r_primitive(at_g,0,1)),c_all(r_primitive(at,0,1),c_one_of(rooma)))))
n_count(c_and(c_primitive(at-robby,0),c_some(r_inverse(r_primitive(at_g,0,1)),c_all(r_primitive(at,0,1),c_one_of(roomb)))))
n_count(c_and(c_all(r_inverse(r_primitive(at_g,0,1)),c_equal(r_primitive(at,0,1),r_primitive(at_g,0,1))),c_primitive(at-robby,0)))
n_count(c_and(c_all(r_inverse(r_primitive(at_g,0,1)),c_equal(r_primitive(carry,0,1),r_primitive(carry_g,0,1))),c_primitive(at-robby,0)))
n_count(c_and(c_all(r_inverse(r_primitive(at_g,0,1)),c_some(r_primitive(at,0,1),c_one_of(rooma))),c_primitive(at-robby,0)))
n_count(c_and(c_and(c_not(c_primitive(at-robby,0)),c_not(c_primitive(ball,0))),c_not(c_one_of(rooma))))
n_count(c_and(c_and(c_not(c_primitive(at-robby,0)),c_not(c_primitive(free,0))),c_not(c_one_of(rooma))))
n_count(c_and(c_all(r_primitive(at,0,1),c_and(c_one_of(rooma),c_primitive(at-robby,0))),c_not(c_one_of(rooma))))
n_count(c_and(c_all(r_primitive(at,0,1),c_and(c_one_of(roomb),c_primitive(at-robby,0))),c_not(c_one_of(rooma))))
n_count(c_and(c_all(r_restrict(r_primitive(at,0,1),c_one_of(rooma)),c_primitive(at-robby,0)),c_not(c_one_of(rooma))))
n_count(c_and(c_all(r_restrict(r_primitive(at,0,1),c_one_of(roomb)),c_primitive(at-robby,0)),c_not(c_one_of(rooma))))
n_count(c_and(c_all(r_restrict(r_primitive(at,0,1),c_primitive(at-robby,0)),c_one_of(rooma)),c_not(c_one_of(rooma))))
n_count(c_and(c_all(r_restrict(r_primitive(at,0,1),c_primitive(at-robby,0)),c_one_of(roomb)),c_not(c_one_of(rooma))))
n_count(c_and(c_and(c_not(c_primitive(at-robby,0)),c_not(c_primitive(ball,0))),c_not(c_one_of(roomb))))
n_count(c_and(c_and(c_not(c_primitive(at-robby,0)),c_not(c_primitive(free,0))),c_not(c_one_of(roomb))))
n_count(c_and(c_all(r_primitive(at,0,1),c_and(c_one_of(rooma),c_primitive(at-robby,0))),c_not(c_primitive(room,0))))
n_count(c_and(c_all(r_primitive(at,0,1),c_and(c_one_of(roomb),c_primitive(at-robby,0))),c_not(c_primitive(room,0))))
n_count(c_and(c_all(r_restrict(r_primitive(at,0,1),c_one_of(rooma)),c_primitive(at-robby,0)),c_not(c_primitive(room,0))))
n_count(c_and(c_all(r_restrict(r_primitive(at,0,1),c_one_of(roomb)),c_primitive(at-robby,0)),c_not(c_primitive(room,0))))
n_count(c_and(c_all(r_restrict(r_primitive(at,0,1),c_primitive(at-robby,0)),c_one_of(rooma)),c_not(c_primitive(room,0))))
n_count(c_and(c_all(r_restrict(r_primitive(at,0,1),c_primitive(at-robby,0)),c_one_of(roomb)),c_not(c_primitive(room,0))))
n_count(c_and(c_all(r_primitive(at,0,1),c_and(c_one_of(rooma),c_primitive(at-robby,0))),c_not(c_primitive(free,0))))
n_count(c_and(c_all(r_primitive(at,0,1),c_and(c_one_of(roomb),c_primitive(at-robby,0))),c_not(c_primitive(free,0))))
n_count(c_and(c_all(r_restrict(r_primitive(at,0,1),c_one_of(rooma)),c_primitive(at-robby,0)),c_not(c_primitive(free,0))))
n_count(c_and(c_all(r_restrict(r_primitive(at,0,1),c_one_of(roomb)),c_primitive(at-robby,0)),c_not(c_primitive(free,0))))
n_count(c_and(c_all(r_restrict(r_primitive(at,0,1),c_primitive(at-robby,0)),c_one_of(rooma)),c_not(c_primitive(free,0))))
n_count(c_and(c_all(r_restrict(r_primitive(at,0,1),c_primitive(at-robby,0)),c_one_of(roomb)),c_not(c_primitive(free,0))))
n_count(c_and(c_equal(r_primitive(at,0,1),r_primitive(at_g,0,1)),c_not(c_and(c_one_of(rooma),c_primitive(at-robby,0)))))
n_count(c_and(c_equal(r_primitive(at,0,1),r_primitive(at_g,0,1)),c_not(c_and(c_one_of(roomb),c_primitive(at-robby,0)))))
n_count(c_and(c_equal(r_primitive(at,0,1),r_primitive(at_g,0,1)),c_not(c_some(r_primitive(at,0,1),c_primitive(at-robby,0)))))
n_count(c_and(c_all(r_inverse(r_primitive(at,0,1)),c_one_of(rooma)),c_equal(r_primitive(at,0,1),r_primitive(at_g,0,1))))
n_count(c_and(c_all(r_inverse(r_primitive(carry,0,1)),c_one_of(rooma)),c_equal(r_primitive(at,0,1),r_primitive(at_g,0,1))))
n_count(c_and(c_equal(r_primitive(carry,0,1),r_primitive(carry_g,0,1)),c_not(c_and(c_one_of(rooma),c_primitive(at-robby,0)))))
n_count(c_and(c_equal(r_primitive(carry,0,1),r_primitive(carry_g,0,1)),c_not(c_and(c_one_of(roomb),c_primitive(at-robby,0)))))
n_count(c_and(c_equal(r_primitive(carry,0,1),r_primitive(carry_g,0,1)),c_not(c_some(r_primitive(at_g,0,1),c_primitive(at-robby,0)))))
n_count(c_and(c_equal(r_primitive(carry,0,1),r_primitive(carry_g,0,1)),c_not(c_all(r_primitive(at_g,0,1),c_primitive(at-robby,0)))))
n_count(c_and(c_all(r_inverse(r_primitive(at,0,1)),c_one_of(rooma)),c_equal(r_primitive(carry,0,1),r_primitive(carry_g,0,1))))
n_count(c_and(c_all(r_inverse(r_primitive(carry,0,1)),c_one_of(rooma)),c_equal(r_primitive(carry,0,1),r_primitive(carry_g,0,1))))
n_count(c_and(c_all(r_primitive(at,0,1),c_one_of(rooma)),c_not(c_and(c_one_of(rooma),c_primitive(at-robby,0)))))
n_count(c_and(c_all(r_primitive(at,0,1),c_one_of(rooma)),c_not(c_and(c_one_of(roomb),c_primitive(at-robby,0)))))
n_count(c_and(c_all(r_primitive(at,0,1),c_one_of(rooma)),c_not(c_some(r_primitive(at_g,0,1),c_primitive(at-robby,0)))))
n_count(c_and(c_all(r_primitive(at,0,1),c_one_of(rooma)),c_not(c_all(r_primitive(at_g,0,1),c_primitive(at-robby,0)))))
n_count(c_and(c_all(r_inverse(r_primitive(at,0,1)),c_one_of(rooma)),c_all(r_primitive(at,0,1),c_one_of(rooma))))
n_count(c_and(c_all(r_primitive(at,0,1),c_one_of(roomb)),c_not(c_and(c_one_of(rooma),c_primitive(at-robby,0)))))
n_count(c_and(c_all(r_primitive(at,0,1),c_one_of(roomb)),c_not(c_and(c_one_of(roomb),c_primitive(at-robby,0)))))
n_count(c_and(c_all(r_primitive(at,0,1),c_one_of(roomb)),c_not(c_some(r_primitive(at_g,0,1),c_primitive(at-robby,0)))))
n_count(c_and(c_all(r_primitive(at,0,1),c_one_of(roomb)),c_not(c_all(r_primitive(at_g,0,1),c_primitive(at-robby,0)))))
n_count(c_and(c_all(r_inverse(r_primitive(at,0,1)),c_one_of(rooma)),c_all(r_primitive(at,0,1),c_one_of(roomb))))
n_count(c_and(c_all(r_primitive(at,0,1),c_bot),c_not(c_some(r_primitive(at_g,0,1),c_primitive(at-robby,0)))))
n_count(c_and(c_all(r_inverse(r_primitive(at,0,1)),c_one_of(rooma)),c_all(r_primitive(at,0,1),c_bot)))
n_count(c_and(c_all(r_primitive(at,0,1),c_primitive(at-robby,0)),c_not(c_and(c_one_of(rooma),c_primitive(at-robby,0)))))
n_count(c_and(c_all(r_primitive(at,0,1),c_primitive(at-robby,0)),c_not(c_and(c_one_of(roomb),c_primitive(at-robby,0)))))
n_count(c_and(c_all(r_inverse(r_primitive(at,0,1)),c_one_of(rooma)),c_all(r_primitive(at,0,1),c_primitive(at-robby,0))))
n_count(c_and(c_all(r_primitive(at_g,0,1),c_primitive(at-robby,0)),c_not(c_and(c_one_of(rooma),c_primitive(at-robby,0)))))
n_count(c_and(c_all(r_primitive(at_g,0,1),c_primitive(at-robby,0)),c_not(c_and(c_one_of(roomb),c_primitive(at-robby,0)))))
n_count(c_and(c_all(r_inverse(r_primitive(at,0,1)),c_one_of(rooma)),c_all(r_primitive(at_g,0,1),c_primitive(at-robby,0))))
n_count(c_and(c_all(r_inverse(r_primitive(carry,0,1)),c_one_of(rooma)),c_all(r_primitive(at_g,0,1),c_primitive(at-robby,0))))
n_count(c_not(c_and(c_all(r_primitive(at,0,1),c_and(c_one_of(rooma),c_primitive(at-robby,0))),c_primitive(ball,0))))
n_count(c_not(c_and(c_all(r_primitive(at,0,1),c_and(c_one_of(roomb),c_primitive(at-robby,0))),c_primitive(ball,0))))
n_count(c_not(c_and(c_all(r_restrict(r_primitive(at,0,1),c_one_of(rooma)),c_primitive(at-robby,0)),c_primitive(ball,0))))
n_count(c_not(c_and(c_all(r_restrict(r_primitive(at,0,1),c_primitive(at-robby,0)),c_one_of(roomb)),c_primitive(ball,0))))
n_count(c_not(c_and(c_not(c_one_of(rooma)),c_not(c_some(r_primitive(at,0,1),c_primitive(at-robby,0))))))
n_count(c_not(c_and(c_not(c_one_of(rooma)),c_not(c_some(r_primitive(at_g,0,1),c_primitive(at-robby,0))))))
n_count(c_not(c_and(c_all(r_inverse(r_primitive(at,0,1)),c_one_of(rooma)),c_not(c_one_of(rooma)))))
n_count(c_not(c_and(c_all(r_inverse(r_primitive(at,0,1)),c_one_of(rooma)),c_not(c_one_of(roomb)))))
n_count(c_not(c_and(c_not(c_primitive(room,0)),c_not(c_some(r_primitive(at,0,1),c_primitive(at-robby,0))))))
n_count(c_not(c_and(c_all(r_inverse(r_primitive(at,0,1)),c_one_of(rooma)),c_not(c_primitive(ball,0)))))
n_count(c_not(c_and(c_all(r_inverse(r_primitive(at,0,1)),c_one_of(rooma)),c_not(c_primitive(gripper,0)))))
n_count(c_not(c_and(c_all(r_inverse(r_primitive(at,0,1)),c_one_of(rooma)),c_not(c_primitive(at-robby,0)))))
n_count(c_not(c_and(c_not(c_and(c_one_of(rooma),c_primitive(at-robby,0))),c_not(c_primitive(free,0)))))
n_count(c_not(c_and(c_not(c_and(c_one_of(roomb),c_primitive(at-robby,0))),c_not(c_primitive(free,0)))))
n_count(c_not(c_and(c_not(c_primitive(free,0)),c_not(c_some(r_primitive(at,0,1),c_primitive(at-robby,0))))))
n_count(c_not(c_and(c_not(c_primitive(free,0)),c_not(c_some(r_primitive(at_g,0,1),c_primitive(at-robby,0))))))
n_count(c_not(c_and(c_all(r_inverse(r_primitive(at,0,1)),c_one_of(rooma)),c_not(c_primitive(free,0)))))
n_count(c_not(c_and(c_equal(r_primitive(carry,0,1),r_primitive(carry_g,0,1)),c_some(r_primitive(at_g,0,1),c_primitive(at-robby,0)))))
n_count(c_not(c_and(c_all(r_primitive(at_g,0,1),c_primitive(at-robby,0)),c_equal(r_primitive(carry,0,1),r_primitive(carry_g,0,1)))))
n_count(c_not(c_and(c_all(r_primitive(at,0,1),c_one_of(rooma)),c_some(r_primitive(at_g,0,1),c_primitive(at-robby,0)))))
n_count(c_not(c_and(c_all(r_primitive(at,0,1),c_one_of(roomb)),c_some(r_primitive(at_g,0,1),c_primitive(at-robby,0)))))
n_count(c_not(c_and(c_all(r_primitive(at,0,1),c_one_of(rooma)),c_all(r_primitive(at_g,0,1),c_primitive(at-robby,0)))))
n_count(c_not(c_and(c_all(r_primitive(at,0,1),c_one_of(roomb)),c_all(r_primitive(at_g,0,1),c_primitive(at-robby,0)))))
n_count(c_not(c_and(c_all(r_primitive(at,0,1),c_bot),c_all(r_primitive(at_g,0,1),c_primitive(at-robby,0)))))
n_count(c_some(r_primitive(at,0,1),c_some(r_inverse(r_primitive(at_g,0,1)),c_some(r_primitive(at,0,1),c_one_of(rooma)))))
n_count(c_some(r_primitive(at,0,1),c_some(r_inverse(r_primitive(at_g,0,1)),c_some(r_primitive(at,0,1),c_primitive(at-robby,0)))))
n_count(c_some(r_primitive(at,0,1),c_some(r_inverse(r_primitive(at_g,0,1)),c_some(r_primitive(carry,0,1),c_top))))
n_count(c_some(r_primitive(at,0,1),c_some(r_inverse(r_primitive(at_g,0,1)),c_all(r_primitive(at,0,1),c_one_of(rooma)))))
n_count(c_some(r_primitive(at,0,1),c_some(r_inverse(r_primitive(at_g,0,1)),c_all(r_primitive(at,0,1),c_primitive(at-robby,0)))))
n_count(c_some(r_primitive(at,0,1),c_all(r_inverse(r_primitive(at_g,0,1)),c_equal(r_primitive(at,0,1),r_primitive(at_g,0,1)))))
n_count(c_some(r_primitive(at,0,1),c_all(r_inverse(r_primitive(at_g,0,1)),c_equal(r_primitive(carry,0,1),r_primitive(carry_g,0,1)))))
n_count(c_some(r_primitive(at,0,1),c_all(r_inverse(r_primitive(at_g,0,1)),c_some(r_primitive(at,0,1),c_primitive(at-robby,0)))))
n_count(c_some(r_primitive(at,0,1),c_all(r_inverse(r_primitive(at_g,0,1)),c_all(r_primitive(at,0,1),c_one_of(roomb)))))
n_count(c_some(r_primitive(at,0,1),c_all(r_inverse(r_primitive(at_g,0,1)),c_all(r_primitive(at,0,1),c_primitive(at-robby,0)))))
n_count(c_some(r_primitive(at_g,0,1),c_and(c_primitive(at-robby,0),c_some(r_inverse(r_primitive(at,0,1)),c_top))))
n_count(c_some(r_primitive(at_g,0,1),c_and(c_all(r_inverse(r_primitive(at,0,1)),c_one_of(rooma)),c_primitive(at-robby,0))))
n_count(c_some(r_primitive(at_g,0,1),c_some(r_inverse(r_primitive(at_g,0,1)),c_some(r_primitive(at,0,1),c_one_of(rooma)))))
n_count(c_some(r_primitive(at_g,0,1),c_some(r_inverse(r_primitive(at_g,0,1)),c_some(r_primitive(at,0,1),c_primitive(at-robby,0)))))
n_count(c_some(r_primitive(at_g,0,1),c_some(r_inverse(r_primitive(at_g,0,1)),c_some(r_primitive(carry,0,1),c_top))))
n_count(c_some(r_primitive(at_g,0,1),c_some(r_inverse(r_primitive(at_g,0,1)),c_all(r_primitive(at,0,1),c_one_of(rooma)))))
n_count(c_some(r_primitive(at_g,0,1),c_some(r_inverse(r_primitive(at_g,0,1)),c_all(r_primitive(at,0,1),c_one_of(roomb)))))
n_count(c_some(r_primitive(at_g,0,1),c_some(r_inverse(r_primitive(at_g,0,1)),c_all(r_primitive(at,0,1),c_primitive(at-robby,0)))))
n_count(c_some(r_primitive(at_g,0,1),c_all(r_inverse(r_primitive(at,0,1)),c_some(r_primitive(at,0,1),c_primitive(at-robby,0)))))
n_count(c_some(r_primitive(at_g,0,1),c_all(r_inverse(r_primitive(at_g,0,1)),c_equal(r_primitive(at,0,1),r_primitive(at_g,0,1)))))
n_count(c_some(r_primitive(at_g,0,1),c_all(r_inverse(r_primitive(at_g,0,1)),c_equal(r_primitive(carry,0,1),r_primitive(carry_g,0,1)))))
n_count(c_some(r_primitive(at_g,0,1),c_all(r_inverse(r_primitive(at_g,0,1)),c_some(r_primitive(at,0,1),c_one_of(rooma)))))
n_count(c_some(r_primitive(at_g,0,1),c_all(r_inverse(r_primitive(at_g,0,1)),c_some(r_primitive(at,0,1),c_primitive(at-robby,0)))))
n_count(c_some(r_primitive(at_g,0,1),c_all(r_inverse(r_primitive(at_g,0,1)),c_all(r_primitive(at,0,1),c_one_of(roomb)))))
n_count(c_some(r_primitive(at_g,0,1),c_all(r_inverse(r_primitive(at_g,0,1)),c_all(r_primitive(at,0,1),c_primitive(at-robby,0)))))
n_count(c_some(r_primitive(at_g,0,1),c_all(r_inverse(r_restrict(r_primitive(at,0,1),c_primitive(at-robby,0))),c_one_of(rooma))))
n_count(c_some(r_inverse(r_primitive(at,0,1)),c_all(r_restrict(r_primitive(at,0,1),c_one_of(rooma)),c_primitive(at-robby,0))))
n_count(c_some(r_inverse(r_primitive(at,0,1)),c_all(r_restrict(r_primitive(at,0,1),c_one_of(roomb)),c_primitive(at-robby,0))))
n_count(c_some(r_inverse(r_primitive(at,0,1)),c_all(r_restrict(r_primitive(at,0,1),c_primitive(at-robby,0)),c_one_of(rooma))))
n_count(c_some(r_inverse(r_primitive(at,0,1)),c_all(r_restrict(r_primitive(at,0,1),c_primitive(at-robby,0)),c_one_of(roomb))))
n_count(c_some(r_inverse(r_primitive(at_g,0,1)),c_all(r_primitive(at,0,1),c_and(c_one_of(rooma),c_primitive(at-robby,0)))))
n_count(c_some(r_inverse(r_primitive(at_g,0,1)),c_all(r_primitive(at,0,1),c_and(c_one_of(roomb),c_primitive(at-robby,0)))))
n_count(c_some(r_inverse(r_primitive(at_g,0,1)),c_all(r_restrict(r_primitive(at,0,1),c_one_of(rooma)),c_primitive(at-robby,0))))
n_count(c_some(r_inverse(r_primitive(at_g,0,1)),c_all(r_restrict(r_primitive(at,0,1),c_one_of(roomb)),c_primitive(at-robby,0))))
n_count(c_some(r_inverse(r_primitive(at_g,0,1)),c_all(r_restrict(r_primitive(at,0,1),c_primitive(at-robby,0)),c_one_of(rooma))))
n_count(c_some(r_inverse(r_primitive(at_g,0,1)),c_all(r_restrict(r_primitive(at,0,1),c_primitive(at-robby,0)),c_one_of(roomb))))
n_count(c_all(r_primitive(at,0,1),c_some(r_inverse(r_primitive(at,0,1)),c_some(r_primitive(at_g,0,1),c_primitive(at-robby,0)))))
n_count(c_all(r_primitive(at,0,1),c_some(r_inverse(r_primitive(at_g,0,1)),c_some(r_primitive(at,0,1),c_one_of(rooma)))))
n_count(c_all(r_primitive(at,0,1),c_some(r_inverse(r_primitive(at_g,0,1)),c_some(r_primitive(at,0,1),c_primitive(at-robby,0)))))
n_count(c_all(r_primitive(at,0,1),c_some(r_inverse(r_primitive(at_g,0,1)),c_some(r_primitive(carry,0,1),c_top))))
n_count(c_all(r_primitive(at,0,1),c_some(r_inverse(r_primitive(at_g,0,1)),c_all(r_primitive(at,0,1),c_one_of(rooma)))))
n_count(c_all(r_primitive(at,0,1),c_some(r_inverse(r_primitive(at_g,0,1)),c_all(r_primitive(at,0,1),c_primitive(at-robby,0)))))
n_count(c_all(r_primitive(at,0,1),c_all(r_inverse(r_primitive(at_g,0,1)),c_equal(r_primitive(at,0,1),r_primitive(at_g,0,1)))))
n_count(c_all(r_primitive(at,0,1),c_all(r_inverse(r_primitive(at_g,0,1)),c_equal(r_primitive(carry,0,1),r_primitive(carry_g,0,1)))))
n_count(c_all(r_primitive(at,0,1),c_all(r_inverse(r_primitive(at_g,0,1)),c_some(r_primitive(at,0,1),c_primitive(at-robby,0)))))
n_count(c_all(r_primitive(at,0,1),c_all(r_inverse(r_primitive(at_g,0,1)),c_all(r_primitive(at,0,1),c_one_of(roomb)))))
n_count(c_all(r_primitive(at,0,1),c_all(r_inverse(r_primitive(at_g,0,1)),c_all(r_primitive(at,0,1),c_primitive(at-robby,0)))))
n_count(c_all(r_primitive(at_g,0,1),c_and(c_primitive(at-robby,0),c_some(r_inverse(r_primitive(at,0,1)),c_top))))
n_count(c_all(r_primitive(at_g,0,1),c_and(c_all(r_inverse(r_primitive(at,0,1)),c_one_of(rooma)),c_primitive(at-robby,0))))
n_count(c_all(r_primitive(at_g,0,1),c_some(r_inverse(r_primitive(at_g,0,1)),c_some(r_primitive(at,0,1),c_one_of(rooma)))))
n_count(c_all(r_primitive(at_g,0,1),c_some(r_inverse(r_primitive(at_g,0,1)),c_some(r_primitive(at,0,1),c_primitive(at-robby,0)))))
n_count(c_all(r_primitive(at_g,0,1),c_some(r_inverse(r_primitive(at_g,0,1)),c_some(r_primitive(carry,0,1),c_top))))
n_count(c_all(r_primitive(at_g,0,1),c_some(r_inverse(r_primitive(at_g,0,1)),c_all(r_primitive(at,0,1),c_one_of(rooma)))))
n_count(c_all(r_primitive(at_g,0,1),c_some(r_inverse(r_primitive(at_g,0,1)),c_all(r_primitive(at,0,1),c_one_of(roomb)))))
n_count(c_all(r_primitive(at_g,0,1),c_some(r_inverse(r_primitive(at_g,0,1)),c_all(r_primitive(at,0,1),c_primitive(at-robby,0)))))
n_count(c_all(r_primitive(at_g,0,1),c_all(r_inverse(r_primitive(at,0,1)),c_some(r_primitive(at,0,1),c_primitive(at-robby,0)))))
n_count(c_all(r_primitive(at_g,0,1),c_all(r_inverse(r_primitive(at_g,0,1)),c_equal(r_primitive(at,0,1),r_primitive(at_g,0,1)))))
n_count(c_all(r_primitive(at_g,0,1),c_all(r_inverse(r_primitive(at_g,0,1)),c_equal(r_primitive(carry,0,1),r_primitive(carry_g,0,1)))))
n_count(c_all(r_primitive(at_g,0,1),c_all(r_inverse(r_primitive(at_g,0,1)),c_some(r_primitive(at,0,1),c_one_of(rooma)))))
n_count(c_all(r_primitive(at_g,0,1),c_all(r_inverse(r_primitive(at_g,0,1)),c_some(r_primitive(at,0,1),c_primitive(at-robby,0)))))
n_count(c_all(r_primitive(at_g,0,1),c_all(r_inverse(r_primitive(at_g,0,1)),c_all(r_primitive(at,0,1),c_one_of(roomb)))))
n_count(c_all(r_primitive(at_g,0,1),c_all(r_inverse(r_primitive(at_g,0,1)),c_all(r_primitive(at,0,1),c_primitive(at-robby,0)))))
n_count(c_all(r_primitive(at_g,0,1),c_all(r_inverse(r_restrict(r_primitive(at,0,1),c_primitive(at-robby,0))),c_one_of(rooma))))
n_count(c_all(r_inverse(r_primitive(at,0,1)),c_some(r_primitive(at,0,1),c_and(c_one_of(rooma),c_primitive(at-robby,0)))))
n_count(c_all(r_inverse(r_primitive(at,0,1)),c_some(r_primitive(at,0,1),c_and(c_one_of(roomb),c_primitive(at-robby,0)))))
n_count(c_all(r_inverse(r_primitive(at,0,1)),c_all(r_restrict(r_primitive(at,0,1),c_one_of(rooma)),c_primitive(at-robby,0))))
n_count(c_all(r_inverse(r_primitive(at,0,1)),c_all(r_restrict(r_primitive(at,0,1),c_one_of(roomb)),c_primitive(at-robby,0))))
n_count(c_all(r_inverse(r_primitive(at,0,1)),c_all(r_restrict(r_primitive(at,0,1),c_primitive(at-robby,0)),c_one_of(rooma))))
n_count(c_all(r_inverse(r_primitive(at,0,1)),c_all(r_restrict(r_primitive(at,0,1),c_primitive(at-robby,0)),c_one_of(roomb))))
n_count(c_all(r_inverse(r_primitive(at_g,0,1)),c_some(r_primitive(at,0,1),c_and(c_one_of(rooma),c_primitive(at-robby,0)))))
n_count(c_all(r_inverse(r_primitive(at_g,0,1)),c_some(r_primitive(at,0,1),c_and(c_one_of(roomb),c_primitive(at-robby,0)))))
n_count(c_all(r_inverse(r_primitive(at_g,0,1)),c_all(r_primitive(at,0,1),c_and(c_one_of(rooma),c_primitive(at-robby,0)))))
n_count(c_all(r_inverse(r_primitive(at_g,0,1)),c_all(r_primitive(at,0,1),c_and(c_one_of(roomb),c_primitive(at-robby,0)))))
n_count(c_all(r_restrict(r_primitive(at_g,0,1),c_primitive(at-robby,0)),c_some(r_inverse(r_primitive(at,0,1)),c_top)))
n_count(c_all(r_inverse(r_restrict(r_primitive(at_g,0,1),c_primitive(at-robby,0))),c_equal(r_primitive(at,0,1),r_primitive(at_g,0,1))))
n_count(c_all(r_inverse(r_restrict(r_primitive(at_g,0,1),c_primitive(at-robby,0))),c_equal(r_primitive(carry,0,1),r_primitive(carry_g,0,1))))
n_count(c_all(r_inverse(r_restrict(r_primitive(at_g,0,1),c_primitive(at-robby,0))),c_some(r_primitive(at,0,1),c_one_of(rooma))))
n_concept_distance(c_one_of(rooma),r_primitive(at,0,1),c_and(c_primitive(at-robby,0),c_some(r_inverse(r_primitive(at,0,1)),c_top)))
n_concept_distance(c_one_of(rooma),r_primitive(at,0,1),c_and(c_all(r_inverse(r_primitive(at,0,1)),c_one_of(rooma)),c_primitive(at-robby,0)))
n_concept_distance(c_one_of(rooma),r_primitive(at,0,1),c_some(r_inverse(r_primitive(at,0,1)),c_some(r_primitive(at_g,0,1),c_primitive(at-robby,0))))
n_concept_distance(c_one_of(rooma),r_primitive(at,0,1),c_all(r_inverse(r_primitive(at,0,1)),c_some(r_primitive(at,0,1),c_primitive(at-robby,0))))
n_concept_distance(c_one_of(rooma),r_primitive(at,0,1),c_all(r_inverse(r_primitive(at,0,1)),c_some(r_primitive(at_g,0,1),c_primitive(at-robby,0))))
n_concept_distance(c_one_of(roomb),r_primitive(at,0,1),c_and(c_primitive(at-robby,0),c_some(r_inverse(r_primitive(at,0,1)),c_top)))
n_concept_distance(c_one_of(roomb),r_primitive(at,0,1),c_and(c_all(r_inverse(r_primitive(at,0,1)),c_one_of(rooma)),c_primitive(at-robby,0)))
n_concept_distance(c_one_of(roomb),r_primitive(at,0,1),c_some(r_inverse(r_primitive(at_g,0,1)),c_some(r_primitive(carry,0,1),c_top)))
n_concept_distance(c_one_of(roomb),r_primitive(at,0,1),c_some(r_inverse(r_primitive(at_g,0,1)),c_all(r_primitive(at,0,1),c_one_of(rooma))))
n_concept_distance(c_one_of(roomb),r_primitive(at,0,1),c_some(r_inverse(r_primitive(at_g,0,1)),c_all(r_primitive(at,0,1),c_one_of(roomb))))
n_concept_distance(c_one_of(roomb),r_primitive(at,0,1),c_some(r_inverse(r_primitive(at_g,0,1)),c_all(r_primitive(at,0,1),c_primitive(at-robby,0))))
n_concept_distance(c_one_of(roomb),r_primitive(at,0,1),c_all(r_inverse(r_primitive(at,0,1)),c_some(r_primitive(at,0,1),c_primitive(at-robby,0))))
n_concept_distance(c_one_of(roomb),r_primitive(at,0,1),c_all(r_inverse(r_primitive(at_g,0,1)),c_equal(r_primitive(at,0,1),r_primitive(at_g,0,1))))
n_concept_distance(c_one_of(roomb),r_primitive(at,0,1),c_all(r_inverse(r_primitive(at_g,0,1)),c_equal(r_primitive(carry,0,1),r_primitive(carry_g,0,1))))
n_concept_distance(c_one_of(roomb),r_primitive(at,0,1),c_all(r_inverse(r_primitive(at_g,0,1)),c_some(r_primitive(at,0,1),c_one_of(rooma))))
n_concept_distance(c_one_of(roomb),r_primitive(at,0,1),c_all(r_inverse(r_primitive(at_g,0,1)),c_some(r_primitive(at,0,1),c_primitive(at-robby,0))))
n_concept_distance(c_one_of(roomb),r_primitive(at,0,1),c_all(r_inverse(r_primitive(at_g,0,1)),c_all(r_primitive(at,0,1),c_primitive(at-robby,0))))
n_concept_distance(c_one_of(roomb),r_primitive(at,0,1),c_all(r_inverse(r_restrict(r_primitive(at,0,1),c_primitive(at-robby,0))),c_one_of(rooma)))
n_concept_distance(c_primitive(at-robby,0),r_primitive(at,0,1),c_some(r_inverse(r_primitive(at_g,0,1)),c_some(r_primitive(carry,0,1),c_top)))
n_concept_distance(c_primitive(at-robby,0),r_primitive(at,0,1),c_some(r_inverse(r_primitive(at_g,0,1)),c_all(r_primitive(at,0,1),c_one_of(rooma))))
n_concept_distance(c_primitive(at-robby,0),r_primitive(at,0,1),c_some(r_inverse(r_primitive(at_g,0,1)),c_all(r_primitive(at,0,1),c_one_of(roomb))))
n_concept_distance(c_primitive(at-robby,0),r_primitive(at,0,1),c_all(r_inverse(r_primitive(at_g,0,1)),c_equal(r_primitive(at,0,1),r_primitive(at_g,0,1))))
n_concept_distance(c_primitive(at-robby,0),r_primitive(at,0,1),c_all(r_inverse(r_primitive(at_g,0,1)),c_equal(r_primitive(carry,0,1),r_primitive(carry_g,0,1))))
n_concept_distance(c_primitive(at-robby,0),r_primitive(at,0,1),c_all(r_inverse(r_primitive(at_g,0,1)),c_some(r_primitive(at,0,1),c_one_of(rooma))))
Number of selected training instances: 1
Sum of number of states in selected training instances: 88
Max of number of states in selected training instances: 88
Number of features in the pool: 450
Resulting sketch:
(:policy
(:boolean_features )
(:numerical_features "n_count(c_and(c_one_of(rooma),c_primitive(at-robby,0)))" "n_count(c_some(r_primitive(at,0,1),c_one_of(rooma)))" "n_count(r_primitive(carry,0,1))")
(:rule (:conditions (:c_n_eq 2) (:c_n_eq 0) (:c_n_gt 1)) (:effects (:e_n_bot 2) (:e_n_bot 1) (:e_n_inc 0)))
(:rule (:conditions (:c_n_eq 2) (:c_n_gt 0) (:c_n_gt 1)) (:effects (:e_n_inc 2) (:e_n_bot 0) (:e_n_dec 1)))
(:rule (:conditions (:c_n_gt 2) (:c_n_eq 0) (:c_n_eq 1)) (:effects (:e_n_dec 2) (:e_n_bot 0) (:e_n_bot 1)))
(:rule (:conditions (:c_n_gt 2) (:c_n_eq 0) (:c_n_gt 1)) (:effects (:e_n_dec 2) (:e_n_bot 0) (:e_n_bot 1)))
(:rule (:conditions (:c_n_gt 2) (:c_n_eq 1) (:c_n_gt 0)) (:effects (:e_n_bot 2) (:e_n_bot 1) (:e_n_dec 0)))
(:rule (:conditions (:c_n_gt 2) (:c_n_gt 0) (:c_n_gt 1)) (:effects (:e_n_bot 2) (:e_n_bot 1) (:e_n_dec 0)))
)
Numer of sketch rules: 6
Number of selected features: 3
Maximum complexity of selected feature: 4
Resulting sketch minimized:
(:policy
(:boolean_features )
(:numerical_features "n_count(c_and(c_one_of(rooma),c_primitive(at-robby,0)))" "n_count(c_some(r_primitive(at,0,1),c_one_of(rooma)))" "n_count(r_primitive(carry,0,1))")
(:rule (:conditions (:c_n_eq 2) (:c_n_eq 0) (:c_n_gt 1)) (:effects (:e_n_bot 2) (:e_n_bot 1) (:e_n_inc 0)))
(:rule (:conditions (:c_n_eq 2) (:c_n_gt 0) (:c_n_gt 1)) (:effects (:e_n_inc 2) (:e_n_bot 0) (:e_n_dec 1)))
(:rule (:conditions (:c_n_gt 2) (:c_n_eq 0)) (:effects (:e_n_dec 2) (:e_n_bot 0) (:e_n_bot 1)))
(:rule (:conditions (:c_n_gt 2) (:c_n_gt 0)) (:effects (:e_n_bot 2) (:e_n_bot 1) (:e_n_dec 0)))
)
Numer of sketch rules: 4
Number of selected features: 3
Maximum complexity of selected feature: 4
Summary:
Resulting sketch:
(:policy
(:boolean_features )
(:numerical_features "n_count(c_and(c_one_of(rooma),c_primitive(at-robby,0)))" "n_count(c_some(r_primitive(at,0,1),c_one_of(rooma)))" "n_count(r_primitive(carry,0,1))")
(:rule (:conditions (:c_n_eq 2) (:c_n_eq 0) (:c_n_gt 1)) (:effects (:e_n_bot 2) (:e_n_bot 1) (:e_n_inc 0)))
(:rule (:conditions (:c_n_eq 2) (:c_n_gt 0) (:c_n_gt 1)) (:effects (:e_n_inc 2) (:e_n_bot 0) (:e_n_dec 1)))
(:rule (:conditions (:c_n_gt 2) (:c_n_eq 0) (:c_n_eq 1)) (:effects (:e_n_dec 2) (:e_n_bot 0) (:e_n_bot 1)))
(:rule (:conditions (:c_n_gt 2) (:c_n_eq 0) (:c_n_gt 1)) (:effects (:e_n_dec 2) (:e_n_bot 0) (:e_n_bot 1)))
(:rule (:conditions (:c_n_gt 2) (:c_n_eq 1) (:c_n_gt 0)) (:effects (:e_n_bot 2) (:e_n_bot 1) (:e_n_dec 0)))
(:rule (:conditions (:c_n_gt 2) (:c_n_gt 0) (:c_n_gt 1)) (:effects (:e_n_bot 2) (:e_n_bot 1) (:e_n_dec 0)))
)
Numer of sketch rules: 6
Number of selected features: 3
Maximum complexity of selected feature: 4
Resulting structurally minimized sketch:
(:policy
(:boolean_features )
(:numerical_features "n_count(c_and(c_one_of(rooma),c_primitive(at-robby,0)))" "n_count(c_some(r_primitive(at,0,1),c_one_of(rooma)))" "n_count(r_primitive(carry,0,1))")
(:rule (:conditions (:c_n_eq 2) (:c_n_eq 0) (:c_n_gt 1)) (:effects (:e_n_bot 2) (:e_n_bot 1) (:e_n_inc 0)))
(:rule (:conditions (:c_n_eq 2) (:c_n_gt 0) (:c_n_gt 1)) (:effects (:e_n_inc 2) (:e_n_bot 0) (:e_n_dec 1)))
(:rule (:conditions (:c_n_gt 2) (:c_n_eq 0)) (:effects (:e_n_dec 2) (:e_n_bot 0) (:e_n_bot 1)))
(:rule (:conditions (:c_n_gt 2) (:c_n_gt 0)) (:effects (:e_n_bot 2) (:e_n_bot 1) (:e_n_dec 0)))
)
Numer of sketch rules: 4
Number of selected features: 3
Maximum complexity of selected feature: 4
Number of training instances: 5
Number of selected training instances: 1
Number of states in selected training instances: 88
Max number of states in selected training instance: 88
Number of features in the pool: 450
RESOURCES FOR PREPROCESSING: 1.41 CPU sec - 189.09 MB
RESOURCES FOR LEARNING: 14.74 CPU sec - 189.09 MB
================================================================================
END OF STEP #1: Incremental learning module. 16.24 CPU sec - 270.40 MB
================================================================================
