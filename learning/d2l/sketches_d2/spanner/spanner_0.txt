(:policy
(:boolean_features )
(:numerical_features "n_count(c_primitive(carrying,1))" "n_count(c_primitive(useable,0))" "n_count(c_and(c_all(r_inverse(r_primitive(at,0,1)),c_primitive(man,0)),c_primitive(at,1)))" "n_count(c_some(r_transitive_closure(r_primitive(link,0,1)),c_some(r_inverse(r_primitive(at,0,1)),c_primitive(man,0))))")
(:rule (:conditions (:c_n_eq 0) (:c_n_gt 1) (:c_n_gt 2) (:c_n_eq 3)) (:effects (:e_n_bot 0) (:e_n_bot 1) (:e_n_dec 2) (:e_n_inc 3)))
(:rule (:conditions (:c_n_eq 0) (:c_n_gt 1) (:c_n_eq 2) (:c_n_gt 3)) (:effects (:e_n_inc 0) (:e_n_bot 1) (:e_n_inc 2) (:e_n_bot 3)))
(:rule (:conditions (:c_n_gt 0) (:c_n_gt 1) (:c_n_gt 2) (:c_n_gt 3)) (:effects (:e_n_bot 0) (:e_n_bot 1) (:e_n_bot 2) (:e_n_inc 3)))
(:rule (:conditions (:c_n_gt 0) (:c_n_gt 1) (:c_n_gt 2) (:c_n_gt 3)) (:effects (:e_n_bot 0) (:e_n_bot 1) (:e_n_dec 2) (:e_n_inc 3)))
(:rule (:conditions (:c_n_gt 0) (:c_n_gt 1) (:c_n_eq 2) (:c_n_gt 3)) (:effects (:e_n_inc 0) (:e_n_bot 1) (:e_n_bot 2) (:e_n_bot 3)))
(:rule (:conditions (:c_n_gt 0) (:c_n_gt 1) (:c_n_eq 2) (:c_n_gt 3)) (:effects (:e_n_inc 0) (:e_n_bot 1) (:e_n_inc 2) (:e_n_bot 3)))
(:rule (:conditions (:c_n_gt 0) (:c_n_gt 1) (:c_n_eq 2) (:c_n_gt 3)) (:effects (:e_n_bot 0) (:e_n_dec 1) (:e_n_bot 2) (:e_n_bot 3)))
(:rule (:conditions (:c_n_eq 0) (:c_n_gt 1) (:c_n_gt 2) (:c_n_eq 3)) (:effects (:e_n_bot 0) (:e_n_bot 1) (:e_n_bot 2) (:e_n_inc 3)))
(:rule (:conditions (:c_n_eq 0) (:c_n_gt 1) (:c_n_gt 2) (:c_n_gt 3)) (:effects (:e_n_bot 0) (:e_n_bot 1) (:e_n_bot 2) (:e_n_inc 3)))
(:rule (:conditions (:c_n_eq 0) (:c_n_gt 1) (:c_n_gt 2) (:c_n_gt 3)) (:effects (:e_n_bot 0) (:e_n_bot 1) (:e_n_dec 2) (:e_n_inc 3)))
(:rule (:conditions (:c_n_eq 0) (:c_n_gt 1) (:c_n_eq 2) (:c_n_gt 3)) (:effects (:e_n_inc 0) (:e_n_bot 1) (:e_n_bot 2) (:e_n_bot 3)))
)
